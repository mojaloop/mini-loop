## Installation
# helm upgrade bof ./mojaloop/bof --install

# Default values for bof.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  adminApiSvc:
    host: "centralledger-service"
    port: 80
  settlementSvc:
    host: "centralsettlement-service"
    port: 80
  keto:
    readURL: "http://keto-read:80"
    writeURL: "http://keto-write:80"
  wso2:
    identityServer:
      host: "wso2-identity-server.local"
      port: 9443
      userListURL: "http://wso2-identity-server.local:9443/scim2/Users"
      user: 'admin'
      secret:
        name: wso2-is-admin-creds
        key: password
  reportingDB:
    host: mysqldb
    port: 3306
    user: user
    database: central_ledger
    # secret: {}
    secret:
      name: mysqldb
      key: mysql-password
  reportingEventsDB:
    host: cl-mongodb
    port: 27017
    user: mojaloop
    database: mlos
    # secret: {}
    secret:
      name: cl-mongodb
      key: mongodb-passwords
  kafka:
    host: kafka
    port: 9092
    topic: topic-event
  rolePermOperator:
    mojaloopRole: {}
    mojaloopPermissionExclusion: {}
    apiSvc: {}

## RBAC Tests
rbacTests:
  enabled: true
  weight: -5
  deletePolicy: before-hook-creation
  image:
    registry: docker.io
    repository: mojaloop/security-rbac-tests
    tag: v1.0.6
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false
  command:
    - npm
    - run
    - test:rbac
  args:
    # - somearg
  env:
    ROLE_ASSIGNMENT_SVC_BASE_PATH: 'http://role-assignment-service'
    ML_INGRESS_BASE_PATH: 'http://bofportal.yourdomain.com'
    TEST_USER_NAME: 'test1'
    TEST_USER_PASSWORD: ''
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param podSecurityContext.enabled Enabled %%MAIN_CONTAINER_NAME%% pods' Security Context
  ## @param podSecurityContext.fsGroup Set %%MAIN_CONTAINER_NAME%% pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param containerSecurityContext.enabled Enabled %%MAIN_CONTAINER_NAME%% containers' Security Context
  ## @param containerSecurityContext.runAsUser Set %%MAIN_CONTAINER_NAME%% containers' Security Context runAsUser
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
  ## @param initContainers Add additional init containers to the %%MAIN_CONTAINER_NAME%% pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

## Report Tests
reportTests:
  enabled: true
  weight: -5
  deletePolicy: before-hook-creation
  image:
    registry: docker.io
    repository: mojaloop/security-rbac-tests
    tag: v1.0.6
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false
  command:
    - npm
    - run
    - test:report
  args:
    # - somearg
  env:
    ROLE_ASSIGNMENT_SVC_BASE_PATH: 'http://role-assignment-service'
    ML_INGRESS_BASE_PATH: 'http://bofportal.yourdomain.com'
    TEST_USER_NAME: 'test1'
    TEST_USER_PASSWORD: ''
    CENTRAL_LEDGER_ADMIN_ENDPOINT: 'http://bofportal.yourdomain.com/central-ledger'
    CENTRAL_SETTLEMENT_ENDPOINT: 'http://bofportal.yourdomain.com/central-settlement'
    REPORT_BASE_PATH: 'http://bofportal.yourdomain.com/reports'
    ACCOUNT_LOOKUP_SERVICE_BASE_PATH: 'http://account-lookup-service'
    PAYER_BACKEND_BASE_PATH: 'http://sim-payerfsp-backend'
    PAYEE_BACKEND_BASE_PATH: 'http://sim-payeefsp-backend'
    TEST_PAYER: 'payerfsp'
    TEST_PAYEE: 'payeefsp'
    TEST_CURRENCY: 'USD'
    TEST_PAYER_MSISDN: '17039811901'
    TEST_PAYEE_MSISDN: '17039811902'
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param podSecurityContext.enabled Enabled %%MAIN_CONTAINER_NAME%% pods' Security Context
  ## @param podSecurityContext.fsGroup Set %%MAIN_CONTAINER_NAME%% pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param containerSecurityContext.enabled Enabled %%MAIN_CONTAINER_NAME%% containers' Security Context
  ## @param containerSecurityContext.runAsUser Set %%MAIN_CONTAINER_NAME%% containers' Security Context runAsUser
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
  ## @param initContainers Add additional init containers to the %%MAIN_CONTAINER_NAME%% pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

## Backend API services
role-assignment-service:
  enabled: true
  ingress:
    enabled: true
    hostname: api-bof.local
    path: /proxy/iam(/|$)(.*)
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
  configFiles:
    default.json: {
        "ROLES_LIST": [
          "USER_ROLE_abc7a2fd-4acf-4547-a194-1673f63eb37c",
          "ADMIN_ROLE_6c1ec084-86d4-4915-ba81-6c59b87a65a6"
        ]
      }

reporting-hub-bop-api-svc:
  enabled: true
  ingress:
    enabled: true
    hostname: api-bof.local
    path: /proxy/transfers(/|$)(.*)
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2

reporting-legacy-api:
  enabled: true
  ingress:
    enabled: true
    hostname: api-bof.local
    path: /proxy/reports(/|$)(.*)
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
  install-templates: true

## Front-end UI services
### Shell and helper UI services
reporting-hub-bop-shell:
  enabled: true
  ingress:
    hostname: www-bof.local
  env:
    LOGIN_URL: /kratos/self-service/registration/browser
    LOGOUT_URL: /kratos/self-service/browser/flows/logout
    AUTH_TOKEN_URL: /kratos/sessions/whoami
    AUTH_ENABLED: true
    REMOTE_1_URL: http://reporting-hub-bop-role-ui.local
    REMOTE_2_URL: http://reporting-hub-bop-trx-ui.local
    REMOTE_3_URL: http://reporting-hub-bop-settlements-ui.local
    REMOTE_4_URL: http://reporting-hub-bop-positions-ui.local

security-hub-bop-kratos-ui:
  enabled: true
  ingress:
    hostname: www-bof.local
    path: /selfui/auth(/|$)(.*)
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2

### Micro-frontends
reporting-hub-bop-role-ui:
  enabled: true
  ingress:
    enabled: true
    pathType: ImplementationSpecific
    hostname: reporting-hub-bop-role-ui.local
  config:
    env:
      REACT_APP_API_BASE_URL: http://www-bof.local/proxy/iam

reporting-hub-bop-trx-ui:
  enabled: true
  ingress:
    enabled: true
    pathType: ImplementationSpecific
    hostname: reporting-hub-bop-trx-ui.local
  config:
    env:
      REACT_APP_API_BASE_URL: http://www-bof.local/proxy/transfers

reporting-hub-bop-positions-ui:
  enabled: true
  ingress:
    enabled: true
    pathType: ImplementationSpecific
    hostname: reporting-hub-bop-positions-ui.local
  config:
    env:
      CENTRAL_LEDGER_ENDPOINT: http://test1-centralledger-service:80

reporting-hub-bop-settlements-ui:
  enabled: true
  ingress:
    enabled: true
    pathType: ImplementationSpecific
    hostname: reporting-hub-bop-settlements-ui.local
  config:
    env:
      CENTRAL_LEDGER_ENDPOINT: http://test1-centralledger-service:80
      CENTRAL_SETTLEMENTS_ENDPOINT: http://test1-centralsettlement-service:80
      REPORTING_API_ENDPOINT: http://www-bof.local/proxy/transfers

security-role-perm-operator-svc:
  enabled: true

reporting-events-processor-svc:
  enabled: true

reporting-hub-bop-experience-api-svc:
  enabled: true
