---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: RELEASE-NAME-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: RELEASE-NAME
    heritage: Helm
    component: server
spec:
  selector:
    matchLabels:
      app: zookeeper
      release: RELEASE-NAME
      component: server
  maxUnavailable: 1
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-account-lookup-service-jws-signing-key
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-12.2.0
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KVkFDL2l4bTZsejhrSm1pZ0lCNWpNeExyaEI5Y2dxTStwYjBPK2lzODhWUkhkeHR3OGVLRzNudnJaWXkvNG5zSgp6MzJxbzRzT0lNcUhXVGxaZ2JVUlZLNEZBVUVaL3FuNjNVblhKMVlWcVQ0VUdnMzFCQmoyYzFKZGx4RzJ0NEpWCkR2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKNU1aUEhONTFvMDRlSW9MTzB0UGZrejArTkRzNEVDd1VXdUZBZzh5bzFoeG52U29FUmlDQXdFYkZncTJ3RGUxKwpvQmhPcHVzZDRWYXN0RC9URXFPOFJocndUb2RkZE9NS3phcEpQclFKdXZUa3Jwa21rUE9HRThEZ0lWSHNVTExSClVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKRC9wMjFha1MxNTZFMzJCRUp1WVBrL1RMaUkya01Xam52Ykh2TmdyOXRxOHgzVG95VGp0cmc1Y2xxOEhyMU96bwpGbkZpcWtWSE1GUEZQUVpFVlU2NENRUEEzM0RpeHVXak1XUzNZSU5mQ0FpbkVyQnJ5MFBpTlpHbXVGaTFLL3d5CmUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKTks2SFFvRVhONFk5QVFIbjUzRmw4bjBpTk8zcXgwVGI3RXVHTkZtWjJ4VGxwREtBcDhNK0JBNVFtNVlEa2JkNgpPb3hiR2oyWXhabmNiRytSc3ZJQ3RWTUxxSXl0dWJ2WVJFWTlXR2tDZ1lFQStLNjR4aEp6V1YzY0djOC85MGtvClRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKVjhabzJHZXI2TG45OUxCZGRUaDJIWEwzTTYwY01nczhNWUd1Sjc1ZzVSL1VIbkpCTG83TkZ5VmRkQ09NVDNoYwpBWVNETjNYQ3c5eWNxVHcyL21KSEI5a0NnWUVBOVFpYUNmVHRuWGRqTXFMZVlicDJ1UUV5eU82SVpzOTU2eW03CnNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKNU5qNFNWUVd1T1hKaGRmQzlkbVRGK2N2QmVQK3ZDNlB5RGJpa3hkQ285KzA1Y2h4UzdJM01MeEN1ZTRxeHkwQwpRZlFJRTEwQ2dZQStrSGFjSG5nMnU0NXNUOS9mN3QvZEwwRHpTTlJBdkw3aWVrSWtDSVVSaDhSRG5EenJNVld3CmQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKOHloRmgzZ0pMUURJeUNYdCtLOVFhMjRma2ZIeTdHejVWTVZPWnFvaGJKZGRYSERaZnhBdndRS0JnQWRVOTQ3Kwp0akYxQmhIWXo4Q3EzS3lTZlp1SGo2dEw0QUVLWWFSWGxPNHR3Yk1lLzlJLzRBaVNocXZmWi94YkJmblNsbEdYCkhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKZ1k4WExoWkxObFY5MXU0RjZpTGFMMER6QUhLdlJSY0dIMHU5QW9HQVROaWdaZ2JSUkhKQzIxSnVjSGVFMHRQNwpIakdBTHZiNHFuMW8wb0RIc3hOWThpNnZWTnc5WWVRcFphSmhjZXVSSEpUR2NzcTJkSlNYcFl3SWhJVnMvOFJLCmJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKZWNhRy9PeW8vUytlTThuUjdtYz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-cep-mongodb
  labels:
    app: cep-mongodb
    chart: mongodb-7.8.10
    release: "RELEASE-NAME"
    heritage: "Helm"
type: Opaque
data:
  mongodb-root-password:  "YWRtaW5wYXNz"
  mongodb-password:  "cGFzc3dvcmQ="
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-12.1.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.1.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.1.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-12.1.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.1.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.1.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-12.1.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralsettlement-handler-deferredsettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralsettlement-handler-grosssettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralsettlement-handler-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/finance-portal/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.2
type: Opaque
data:
  DB_USER: Y2VudHJhbF9sZWRnZXI=
  DB_PASSWORD: b3lNeGdaQ2h1dQ==
  DB_HOST: UkVMRUFTRS1OQU1FLWNlbnRyYWxsZWRnZXItbXlzcWw=
  DB_PORT: MzMwNg==
  AUTH_SERVER_CLIENTKEY: dGVzdGtleQ==
  AUTH_SERVER_CLIENTSECRET: dGVzdHNlY3JldA==
  JASPER_USER: dXNlcg==
  JASPER_PASSWORD: cGFzc3dvcmQ=
  AZURE_CLIENT_ID: ZWMzYjE2OGMtOTFkYi00YWEwLWE3ZDMtZWE5ZjZmOTk5OTk5
  AZURE_CLIENT_SECRET: c2VjcmV0
  AZURE_TENANT_ID: ZWMzYjE2OGMtOTFkYi00YWEwLWE3ZDMtZWE5ZjZmOTk5OTk5
  AZURE_WORKSPACE_ID: ZTE2ZDA1NWItN2E5YS00ZTliLWJiNGItYWJjZGVmOTk5OTk5
---
# Source: mojaloop/charts/finance-portal/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-finance-portal-certs
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.2
data:
  first_key.key: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUNYUUlCQUFLQmdRQ3lRODB1YUExREt4and1R2dldHVIaVhvWnhwUS9Ud3lqLzlhNXplTUNmWmxBdnJlQ3MKOE1oQ20xN091UWtZa2lJcG9Fd24zRFVEWEFPMDNrVWc5SGc1cGQ1T2JuVFpkV29CS1dSMXQvVTJSNHhVNnYydwpLTG45S3lLL2NBLzc5d3phaU1aUytIK2orcHQ5WmpnZHBLT2NuM1hLOGJPVVJJVkVzU051OCt5Wi93SURBUUFCCkFvR0FVTGR2ajl3d2FTSDZESUZMTCtFYUhZQTBldi9FejF0V1ZMTi9OcXpOOXo4Qi90ekoxelM5VUo5K1NiY3gKM2F6SmlEU2JWdzhYOS9ueGViT005Sk9OWGJjQ01lSlg1TXFzQnpyUjg5dlRIbzlpcjkxdTdMRFZCRW8rYnNyUwp1ZlRRZFQxZXRVT2dnd1dzc1U0SkxvUUI3TDdRb0ZoQlRuZEFjNkF3bUIxdDZwRUNRUURIQmUwMXFnVFF3RjRICnpqbnBCS1BVbFlYNU1hKzZWRHZTRy95RmRKZUE1OFRyRjNvQkJuRVQ5WlRteTRtRExRYU84OHdzQXgwa2R1YUIKSDh0dW9DVXZBa0VBNVV5SXBHMmRqUkN5Q1JrRU5KTG45cXBDYVNPd2FPNDNEMTg5S3FHelc5bkhpaE1OY3poYQpha0FJYTNVTHA4QW9xUEZLT0ZrK3YyakdZd1BIU2F0RU1RSkJBSzl2ci93QUZTS1dqOHk5b3hxZXRuUHNJaDdhCkI1ZHVMUlUzQ2sveHlLTWVxdHk0NHhrSVBxRmpkNUJDbHNNRTY2VVRqMFMwc2ZtMHZkZlEyUmg1SG8wQ1FBYXoKUE03cE1SQmRLNGFlaDRQdHd2OXZMQytjVGx4U2thTk9XaUF6eDJUb3NTNzByWkR2VlowREwvdkwyTUpYR0JrUApxK2FIblJERXcvOUNyZ0VXRXhFQ1FRQ1Q3akZ0aG9QczI5QTk4MWV1SGZaK2JYTUZFSTQ4UEZndzEzY215V25NCkhpakYrNEUvWHREMTFXSmtJdURDbUhhbC9vUnRjYklPL2NDazE1eGJXWmtECi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0=
  second_key.key: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUNYUUlCQUFLQmdRQ3lRODB1YUExREt4and1R2dldHVIaVhvWnhwUS9Ud3lqLzlhNXplTUNmWmxBdnJlQ3MKOE1oQ20xN091UWtZa2lJcG9Fd24zRFVEWEFPMDNrVWc5SGc1cGQ1T2JuVFpkV29CS1dSMXQvVTJSNHhVNnYydwpLTG45S3lLL2NBLzc5d3phaU1aUytIK2orcHQ5WmpnZHBLT2NuM1hLOGJPVVJJVkVzU051OCt5Wi93SURBUUFCCkFvR0FVTGR2ajl3d2FTSDZESUZMTCtFYUhZQTBldi9FejF0V1ZMTi9OcXpOOXo4Qi90ekoxelM5VUo5K1NiY3gKM2F6SmlEU2JWdzhYOS9ueGViT005Sk9OWGJjQ01lSlg1TXFzQnpyUjg5dlRIbzlpcjkxdTdMRFZCRW8rYnNyUwp1ZlRRZFQxZXRVT2dnd1dzc1U0SkxvUUI3TDdRb0ZoQlRuZEFjNkF3bUIxdDZwRUNRUURIQmUwMXFnVFF3RjRICnpqbnBCS1BVbFlYNU1hKzZWRHZTRy95RmRKZUE1OFRyRjNvQkJuRVQ5WlRteTRtRExRYU84OHdzQXgwa2R1YUIKSDh0dW9DVXZBa0VBNVV5SXBHMmRqUkN5Q1JrRU5KTG45cXBDYVNPd2FPNDNEMTg5S3FHelc5bkhpaE1OY3poYQpha0FJYTNVTHA4QW9xUEZLT0ZrK3YyakdZd1BIU2F0RU1RSkJBSzl2ci93QUZTS1dqOHk5b3hxZXRuUHNJaDdhCkI1ZHVMUlUzQ2sveHlLTWVxdHk0NHhrSVBxRmpkNUJDbHNNRTY2VVRqMFMwc2ZtMHZkZlEyUmg1SG8wQ1FBYXoKUE03cE1SQmRLNGFlaDRQdHd2OXZMQytjVGx4U2thTk9XaUF6eDJUb3NTNzByWkR2VlowREwvdkwyTUpYR0JrUApxK2FIblJERXcvOUNyZ0VXRXhFQ1FRQ1Q3akZ0aG9QczI5QTk4MWV1SGZaK2JYTUZFSTQ4UEZndzEzY215V25NCkhpakYrNEUvWHREMTFXSmtJdURDbUhhbC9vUnRjYklPL2NDazE1eGJXWmtECi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0=
  third_key.key: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUNYUUlCQUFLQmdRQ3lRODB1YUExREt4and1R2dldHVIaVhvWnhwUS9Ud3lqLzlhNXplTUNmWmxBdnJlQ3MKOE1oQ20xN091UWtZa2lJcG9Fd24zRFVEWEFPMDNrVWc5SGc1cGQ1T2JuVFpkV29CS1dSMXQvVTJSNHhVNnYydwpLTG45S3lLL2NBLzc5d3phaU1aUytIK2orcHQ5WmpnZHBLT2NuM1hLOGJPVVJJVkVzU051OCt5Wi93SURBUUFCCkFvR0FVTGR2ajl3d2FTSDZESUZMTCtFYUhZQTBldi9FejF0V1ZMTi9OcXpOOXo4Qi90ekoxelM5VUo5K1NiY3gKM2F6SmlEU2JWdzhYOS9ueGViT005Sk9OWGJjQ01lSlg1TXFzQnpyUjg5dlRIbzlpcjkxdTdMRFZCRW8rYnNyUwp1ZlRRZFQxZXRVT2dnd1dzc1U0SkxvUUI3TDdRb0ZoQlRuZEFjNkF3bUIxdDZwRUNRUURIQmUwMXFnVFF3RjRICnpqbnBCS1BVbFlYNU1hKzZWRHZTRy95RmRKZUE1OFRyRjNvQkJuRVQ5WlRteTRtRExRYU84OHdzQXgwa2R1YUIKSDh0dW9DVXZBa0VBNVV5SXBHMmRqUkN5Q1JrRU5KTG45cXBDYVNPd2FPNDNEMTg5S3FHelc5bkhpaE1OY3poYQpha0FJYTNVTHA4QW9xUEZLT0ZrK3YyakdZd1BIU2F0RU1RSkJBSzl2ci93QUZTS1dqOHk5b3hxZXRuUHNJaDdhCkI1ZHVMUlUzQ2sveHlLTWVxdHk0NHhrSVBxRmpkNUJDbHNNRTY2VVRqMFMwc2ZtMHZkZlEyUmg1SG8wQ1FBYXoKUE03cE1SQmRLNGFlaDRQdHd2OXZMQytjVGx4U2thTk9XaUF6eDJUb3NTNzByWkR2VlowREwvdkwyTUpYR0JrUApxK2FIblJERXcvOUNyZ0VXRXhFQ1FRQ1Q3akZ0aG9QczI5QTk4MWV1SGZaK2JYTUZFSTQ4UEZndzEzY215V25NCkhpakYrNEUvWHREMTFXSmtJdURDbUhhbC9vUnRjYklPL2NDazE1eGJXWmtECi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0=
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-ml-api-adapter-handler-notification-jws-signing-key
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.2
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KVkFDL2l4bTZsejhrSm1pZ0lCNWpNeExyaEI5Y2dxTStwYjBPK2lzODhWUkhkeHR3OGVLRzNudnJaWXkvNG5zSgp6MzJxbzRzT0lNcUhXVGxaZ2JVUlZLNEZBVUVaL3FuNjNVblhKMVlWcVQ0VUdnMzFCQmoyYzFKZGx4RzJ0NEpWCkR2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKNU1aUEhONTFvMDRlSW9MTzB0UGZrejArTkRzNEVDd1VXdUZBZzh5bzFoeG52U29FUmlDQXdFYkZncTJ3RGUxKwpvQmhPcHVzZDRWYXN0RC9URXFPOFJocndUb2RkZE9NS3phcEpQclFKdXZUa3Jwa21rUE9HRThEZ0lWSHNVTExSClVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKRC9wMjFha1MxNTZFMzJCRUp1WVBrL1RMaUkya01Xam52Ykh2TmdyOXRxOHgzVG95VGp0cmc1Y2xxOEhyMU96bwpGbkZpcWtWSE1GUEZQUVpFVlU2NENRUEEzM0RpeHVXak1XUzNZSU5mQ0FpbkVyQnJ5MFBpTlpHbXVGaTFLL3d5CmUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKTks2SFFvRVhONFk5QVFIbjUzRmw4bjBpTk8zcXgwVGI3RXVHTkZtWjJ4VGxwREtBcDhNK0JBNVFtNVlEa2JkNgpPb3hiR2oyWXhabmNiRytSc3ZJQ3RWTUxxSXl0dWJ2WVJFWTlXR2tDZ1lFQStLNjR4aEp6V1YzY0djOC85MGtvClRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKVjhabzJHZXI2TG45OUxCZGRUaDJIWEwzTTYwY01nczhNWUd1Sjc1ZzVSL1VIbkpCTG83TkZ5VmRkQ09NVDNoYwpBWVNETjNYQ3c5eWNxVHcyL21KSEI5a0NnWUVBOVFpYUNmVHRuWGRqTXFMZVlicDJ1UUV5eU82SVpzOTU2eW03CnNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKNU5qNFNWUVd1T1hKaGRmQzlkbVRGK2N2QmVQK3ZDNlB5RGJpa3hkQ285KzA1Y2h4UzdJM01MeEN1ZTRxeHkwQwpRZlFJRTEwQ2dZQStrSGFjSG5nMnU0NXNUOS9mN3QvZEwwRHpTTlJBdkw3aWVrSWtDSVVSaDhSRG5EenJNVld3CmQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKOHloRmgzZ0pMUURJeUNYdCtLOVFhMjRma2ZIeTdHejVWTVZPWnFvaGJKZGRYSERaZnhBdndRS0JnQWRVOTQ3Kwp0akYxQmhIWXo4Q3EzS3lTZlp1SGo2dEw0QUVLWWFSWGxPNHR3Yk1lLzlJLzRBaVNocXZmWi94YkJmblNsbEdYCkhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKZ1k4WExoWkxObFY5MXU0RjZpTGFMMER6QUhLdlJSY0dIMHU5QW9HQVROaWdaZ2JSUkhKQzIxSnVjSGVFMHRQNwpIakdBTHZiNHFuMW8wb0RIc3hOWThpNnZWTnc5WWVRcFphSmhjZXVSSEpUR2NzcTJkSlNYcFl3SWhJVnMvOFJLCmJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKZWNhRy9PeW8vUytlTThuUjdtYz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-ml-ttk-test-setup-aws-creds
  labels:
    app.kubernetes.io/name: ml-ttk-test-setup-aws-creds
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "13.2.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-setup-12.2.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "AWS_ACCESS_KEY_ID": c29tZV9hd3NfYWNjZXNzX2tleQ==
  "AWS_SECRET_ACCESS_KEY": c29tZV9hd3Nfc2VjcmV0X2tleQ==
  "AWS_REGION": dXMtd2VzdC0y
---
# Source: mojaloop/charts/ml-ttk-test-validation/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-ml-ttk-test-validation-aws-creds
  labels:
    app.kubernetes.io/name: ml-ttk-test-validation-aws-creds
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "13.2.1"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-validation-12.2.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "AWS_ACCESS_KEY_ID": c29tZV9hd3NfYWNjZXNzX2tleQ==
  "AWS_SECRET_ACCESS_KEY": c29tZV9hd3Nfc2VjcmV0X2tleQ==
  "AWS_REGION": dXMtd2VzdC0y
---
# Source: mojaloop/charts/quoting-service/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-quoting-service-jws-signing-key
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-12.0.0
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KICBWQUMvaXhtNmx6OGtKbWlnSUI1ak14THJoQjljZ3FNK3BiME8raXM4OFZSSGR4dHc4ZUtHM252clpZeS80bnNKCiAgejMycW80c09JTXFIV1RsWmdiVVJWSzRGQVVFWi9xbjYzVW5YSjFZVnFUNFVHZzMxQkJqMmMxSmRseEcydDRKVgogIER2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKICA1TVpQSE41MW8wNGVJb0xPMHRQZmt6MCtORHM0RUN3VVd1RkFnOHlvMWh4bnZTb0VSaUNBd0ViRmdxMndEZTErCiAgb0JoT3B1c2Q0VmFzdEQvVEVxTzhSaHJ3VG9kZGRPTUt6YXBKUHJRSnV2VGtycGtta1BPR0U4RGdJVkhzVUxMUgogIFVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKICBEL3AyMWFrUzE1NkUzMkJFSnVZUGsvVExpSTJrTVdqbnZiSHZOZ3I5dHE4eDNUb3lUanRyZzVjbHE4SHIxT3pvCiAgRm5GaXFrVkhNRlBGUFFaRVZVNjRDUVBBMzNEaXh1V2pNV1MzWUlOZkNBaW5FckJyeTBQaU5aR211RmkxSy93eQogIGUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKICBOSzZIUW9FWE40WTlBUUhuNTNGbDhuMGlOTzNxeDBUYjdFdUdORm1aMnhUbHBES0FwOE0rQkE1UW01WURrYmQ2CiAgT294YkdqMll4Wm5jYkcrUnN2SUN0Vk1McUl5dHVidllSRVk5V0drQ2dZRUErSzY0eGhKeldWM2NHYzgvOTBrbwogIFRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKICBWOFpvMkdlcjZMbjk5TEJkZFRoMkhYTDNNNjBjTWdzOE1ZR3VKNzVnNVIvVUhuSkJMbzdORnlWZGRDT01UM2hjCiAgQVlTRE4zWEN3OXljcVR3Mi9tSkhCOWtDZ1lFQTlRaWFDZlR0blhkak1xTGVZYnAydVFFeXlPNklaczk1NnltNwogIHNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKICA1Tmo0U1ZRV3VPWEpoZGZDOWRtVEYrY3ZCZVArdkM2UHlEYmlreGRDbzkrMDVjaHhTN0kzTUx4Q3VlNHF4eTBDCiAgUWZRSUUxMENnWUEra0hhY0huZzJ1NDVzVDkvZjd0L2RMMER6U05SQXZMN2lla0lrQ0lVUmg4UkRuRHpyTVZXdwogIGQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKICA4eWhGaDNnSkxRREl5Q1h0K0s5UWEyNGZrZkh5N0d6NVZNVk9acW9oYkpkZFhIRFpmeEF2d1FLQmdBZFU5NDcrCiAgdGpGMUJoSFl6OENxM0t5U2ZadUhqNnRMNEFFS1lhUlhsTzR0d2JNZS85SS80QWlTaHF2ZloveGJCZm5TbGxHWAogIEhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKICBnWThYTGhaTE5sVjkxdTRGNmlMYUwwRHpBSEt2UlJjR0gwdTlBb0dBVE5pZ1pnYlJSSEpDMjFKdWNIZUUwdFA3CiAgSGpHQUx2YjRxbjFvMG9ESHN4Tlk4aTZ2Vk53OVllUXBaYUpoY2V1UkhKVEdjc3EyZEpTWHBZd0loSVZzLzhSSwogIGJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKICBlY2FHL095by9TK2VNOG5SN21jPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
---
# Source: mojaloop/charts/quoting-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-12.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/transaction-requests-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.2
type: Opaque
data: {}
# base64 encoded string
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-account-lookup-service-admin-config
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-12.2.0
data:
  default.json: "{\n  \"ADMIN_PORT\":  4001,\n  \"API_PORT\":  4002,\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-als\",\n    \"PORT\": 3306,\n    \"USER\": \"account_lookup\",\n    \"PASSWORD\": \"password\",\n    \"DATABASE\": \"account_lookup\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"DISPLAY_ROUTES\": true,\n  \"RUN_MIGRATIONS\": false,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"SWITCH_ENDPOINT\": \"http://RELEASE-NAME-centralledger-service:80\",\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"fspId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-admin\"\n        }\n      }\n    }\n  },\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": false,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  },\n  \"API_DOCUMENTATION_ENDPOINTS\": true,\n  \"FEATURE_ENABLE_EXTENDED_PARTY_ID_TYPE\": false\n}\n\n"
  knexfile.js: "'use strict'\nconst migrationsDirectory = '/opt/account-lookup-service/migrations'\nconst seedsDirectory = '/opt/account-lookup-service/seeds'\nconst Config = require('/opt/account-lookup-service/src/lib/config')\nmodule.exports = {\n    client: 'mysql',\n    version: '5.7',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-account-lookup-service-admin-sidecar
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-12.2.0
data:
  default.json: "{\n  \"PORT\": 4003,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-admin-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-account-lookup-service-config
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-12.2.0
data:
  default.json: "{\n  \"ADMIN_PORT\":  4001,\n  \"API_PORT\":  4002,\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-als\",\n    \"PORT\": 3306,\n    \"USER\": \"account_lookup\",\n    \"PASSWORD\": \"password\",\n    \"DATABASE\": \"account_lookup\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"DISPLAY_ROUTES\": true,\n  \"RUN_MIGRATIONS\": false,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"SWITCH_ENDPOINT\": \"http://RELEASE-NAME-centralledger-service:80\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"fspId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service\"\n        }\n      }\n    }\n  },\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": true,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  },\n  \"API_DOCUMENTATION_ENDPOINTS\": true,\n  \"FEATURE_ENABLE_EXTENDED_PARTY_ID_TYPE\": false\n}\n"
  knexfile.js: "'use strict'\nconst migrationsDirectory = '/opt/account-lookup-service/migrations'\nconst seedsDirectory = '/opt/account-lookup-service/seeds'\nconst Config = require('/opt/account-lookup-service/src/lib/config')\nmodule.exports = {\n    client: 'mysql',\n    version: '5.7',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-account-lookup-service-sidecar
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-12.2.0
data:
  default.json: "{\n  \"PORT\": 4003,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centraleventprocessor-config
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.2
data:
  default.json: "{\n    \"notificationMinutes\": {\n        \"resetPeriod\": 60,\n        \"notificationInterval\": 3,\n        \"oscilateEvents\": [\"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\"]\n    },\n    \"swaggerOptions\": {\n        \"info\": {\n            \"title\": \"Central notification system API Documentation\",\n            \"description\": \"Api Documentation for central-notification\"\n        },\n        \"expanded\": \"full\"\n    },\n    \"HUB_PARTICIPANT\": {\n        \"NAME\": \"Hub\"\n    },\n    \"PORT\": 3080,\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"centralLedgerAPI\": {\n        \"adminHost\": \"RELEASE-NAME-centralledger-service\",\n        \"adminPort\": 80\n    },\n    \"mongo\": {\n        \"user\": \"mojaloop\",\n        \"password\": \"password\",\n        \"uri\": \"RELEASE-NAME-cep-mongodb:27017\",\n        \"database\": \"mojaloop\",\n        \"ruleCollection\": \"Rule\",\n        \"netDebitCapPositionCollection\": \"NDCPosition\",\n        \"actionCollection\": \"Actions\",\n        \"eventCollection\": \"Events\",\n        \"limitCollection\": \"Limits\",\n        \"notificationEndpointCollection\": \"NotificationEndpoints\"\n  },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cep-con\",\n                            \"group.id\": \"cep-group\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.blocking.max.ms\": 1,\n                            \"fetch.wait.max.ms\": 1,\n                            \"fetch.error.backoff.ms\": 1,\n                            \"queue.buffering.max.ms\": 1,\n                            \"broker.version.fallback\": \"0.10.1.0\",\n                            \"api.version.request\": true,\n                            \"enable.auto.commit\": false,\n                            \"auto.commit.interval.ms\": 200,\n                            \"socket.keepalive.enable\": true,\n                            \"socket.max.fails\": 1\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"debug\": \"all\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cep-prod\",\n                            \"event_cb\": true,\n                            \"compression.codec\": \"none\",\n                            \"retry.backoff.ms\": 100,\n                            \"message.send.max.retries\": 2,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000,\n                            \"batch.num.messages\": 100,\n                            \"dr_cb\": true,\n                            \"socket.blocking.max.ms\": 1,\n                            \"queue.buffering.max.ms\": 1,\n                            \"broker.version.fallback\": \"0.10.1.0\",\n                            \"api.version.request\": true\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-handler-admin-transfer-config
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-12.1.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-admin-transfer.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"RELEASE-NAME-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://RELEASE-NAME-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-admin-transfer\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-handler-timeout-config
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.1.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-timeout.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"RELEASE-NAME-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://RELEASE-NAME-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": false,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-timeout\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-handler-timeout-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.1.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-timeout-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-fulfil-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.1.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-fulfil.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"RELEASE-NAME-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://RELEASE-NAME-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-fulfil\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-fulfil-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.1.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-fulfil-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-get-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-12.1.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-get.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"RELEASE-NAME-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://RELEASE-NAME-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-get\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-position-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.1.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-position.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"RELEASE-NAME-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://RELEASE-NAME-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-position\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-position-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.1.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-position-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-prepare-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.1.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-prepare.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"RELEASE-NAME-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://RELEASE-NAME-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-prepare\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"ENABLE_ON_US_TRANSFERS\": false,\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-prepare-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.1.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-prepare-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralledger-service-config
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-12.1.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"RELEASE-NAME-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://RELEASE-NAME-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": true,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-service\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/config-script.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: RELEASE-NAME
    heritage: Helm
    component: server
data:
    ok: |
      #!/bin/sh
      echo ruok | nc 127.0.0.1 ${1:-2181}

    ready: |
      #!/bin/sh
      echo ruok | nc 127.0.0.1 ${1:-2181}

    run: |
      #!/bin/bash

      set -a
      ROOT=$(echo /apache-zookeeper-*)

      ZK_USER=${ZK_USER:-"zookeeper"}
      ZK_LOG_LEVEL=${ZK_LOG_LEVEL:-"INFO"}
      ZK_DATA_DIR=${ZK_DATA_DIR:-"/data"}
      ZK_DATA_LOG_DIR=${ZK_DATA_LOG_DIR:-"/data/log"}
      ZK_CONF_DIR=${ZK_CONF_DIR:-"/conf"}
      ZK_CLIENT_PORT=${ZK_CLIENT_PORT:-2181}
      ZK_SERVER_PORT=${ZK_SERVER_PORT:-2888}
      ZK_ELECTION_PORT=${ZK_ELECTION_PORT:-3888}
      ZK_TICK_TIME=${ZK_TICK_TIME:-2000}
      ZK_INIT_LIMIT=${ZK_INIT_LIMIT:-10}
      ZK_SYNC_LIMIT=${ZK_SYNC_LIMIT:-5}
      ZK_HEAP_SIZE=${ZK_HEAP_SIZE:-2G}
      ZK_MAX_CLIENT_CNXNS=${ZK_MAX_CLIENT_CNXNS:-60}
      ZK_MIN_SESSION_TIMEOUT=${ZK_MIN_SESSION_TIMEOUT:- $((ZK_TICK_TIME*2))}
      ZK_MAX_SESSION_TIMEOUT=${ZK_MAX_SESSION_TIMEOUT:- $((ZK_TICK_TIME*20))}
      ZK_SNAP_RETAIN_COUNT=${ZK_SNAP_RETAIN_COUNT:-3}
      ZK_PURGE_INTERVAL=${ZK_PURGE_INTERVAL:-0}
      ID_FILE="$ZK_DATA_DIR/myid"
      ZK_CONFIG_FILE="$ZK_CONF_DIR/zoo.cfg"
      LOG4J_PROPERTIES="$ZK_CONF_DIR/log4j.properties"
      HOST=$(hostname)
      DOMAIN=`hostname -d`
      ZOOCFG=zoo.cfg
      ZOOCFGDIR=$ZK_CONF_DIR
      JVMFLAGS="-Xmx$ZK_HEAP_SIZE -Xms$ZK_HEAP_SIZE"

      APPJAR=$(echo $ROOT/*jar)
      CLASSPATH="${ROOT}/lib/*:${APPJAR}:${ZK_CONF_DIR}:"

      if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
          NAME=${BASH_REMATCH[1]}
          ORD=${BASH_REMATCH[2]}
          MY_ID=$((ORD+1))
      else
          echo "Failed to extract ordinal from hostname $HOST"
          exit 1
      fi

      mkdir -p $ZK_DATA_DIR
      mkdir -p $ZK_DATA_LOG_DIR
      echo $MY_ID >> $ID_FILE

      echo "clientPort=$ZK_CLIENT_PORT" >> $ZK_CONFIG_FILE
      echo "dataDir=$ZK_DATA_DIR" >> $ZK_CONFIG_FILE
      echo "dataLogDir=$ZK_DATA_LOG_DIR" >> $ZK_CONFIG_FILE
      echo "tickTime=$ZK_TICK_TIME" >> $ZK_CONFIG_FILE
      echo "initLimit=$ZK_INIT_LIMIT" >> $ZK_CONFIG_FILE
      echo "syncLimit=$ZK_SYNC_LIMIT" >> $ZK_CONFIG_FILE
      echo "maxClientCnxns=$ZK_MAX_CLIENT_CNXNS" >> $ZK_CONFIG_FILE
      echo "minSessionTimeout=$ZK_MIN_SESSION_TIMEOUT" >> $ZK_CONFIG_FILE
      echo "maxSessionTimeout=$ZK_MAX_SESSION_TIMEOUT" >> $ZK_CONFIG_FILE
      echo "autopurge.snapRetainCount=$ZK_SNAP_RETAIN_COUNT" >> $ZK_CONFIG_FILE
      echo "autopurge.purgeInterval=$ZK_PURGE_INTERVAL" >> $ZK_CONFIG_FILE
      echo "4lw.commands.whitelist=*" >> $ZK_CONFIG_FILE

      for (( i=1; i<=$ZK_REPLICAS; i++ ))
      do
          echo "server.$i=$NAME-$((i-1)).$DOMAIN:$ZK_SERVER_PORT:$ZK_ELECTION_PORT" >> $ZK_CONFIG_FILE
      done

      rm -f $LOG4J_PROPERTIES

      echo "zookeeper.root.logger=$ZK_LOG_LEVEL, CONSOLE" >> $LOG4J_PROPERTIES
      echo "zookeeper.console.threshold=$ZK_LOG_LEVEL" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.threshold=$ZK_LOG_LEVEL" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.dir=$ZK_DATA_LOG_DIR" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.file=zookeeper.log" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.maxfilesize=256MB" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.maxbackupindex=10" >> $LOG4J_PROPERTIES
      echo "zookeeper.tracelog.dir=$ZK_DATA_LOG_DIR" >> $LOG4J_PROPERTIES
      echo "zookeeper.tracelog.file=zookeeper_trace.log" >> $LOG4J_PROPERTIES
      echo "log4j.rootLogger=\${zookeeper.root.logger}" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.Threshold=\${zookeeper.console.threshold}" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n" >> $LOG4J_PROPERTIES

      if [ -n "$JMXDISABLE" ]
      then
          MAIN=org.apache.zookeeper.server.quorum.QuorumPeerMain
      else
          MAIN="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=$JMXPORT -Dcom.sun.management.jmxremote.authenticate=$JMXAUTH -Dcom.sun.management.jmxremote.ssl=$JMXSSL -Dzookeeper.jmx.log4j.disable=$JMXLOG4J org.apache.zookeeper.server.quorum.QuorumPeerMain"
      fi

      set -x
      exec java -cp "$CLASSPATH" $JVMFLAGS $MAIN $ZK_CONFIG_FILE
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/configmap-jmx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-kafka-metrics
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-monitor
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: RELEASE-NAME
data:
  jmx-kafka-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    
    whitelistObjectNames: ["kafka.controller:*","kafka.server:*","java.lang:*","kafka.network:*","kafka.log:*"]
    
    rules:
    - pattern: kafka.controller<type=(ControllerChannelManager), name=(QueueSize), broker-id=(\d+)><>(Value)
      name: kafka_controller_$1_$2_$4
      labels:
        broker_id: "$3"
    - pattern: kafka.controller<type=(ControllerChannelManager), name=(TotalQueueSize)><>(Value)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.controller<type=(KafkaController), name=(.+)><>(Value)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.controller<type=(ControllerStats), name=(.+)><>(Count)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.server<type=(ReplicaFetcherManager), name=(.+), clientId=(.+)><>(Value)
      name: kafka_server_$1_$2_$4
      labels:
        client_id: "$3"
    - pattern : kafka.network<type=(Processor), name=(IdlePercent), networkProcessor=(.+)><>(Value)
      name: kafka_network_$1_$2_$4
      labels:
        network_processor: $3
    - pattern : kafka.network<type=(RequestMetrics), name=(RequestsPerSec), request=(.+)><>(Count)
      name: kafka_network_$1_$2_$4
      labels:
        request: $3
    - pattern: kafka.server<type=(.+), name=(.+), topic=(.+)><>(Count|OneMinuteRate)
      name: kafka_server_$1_$2_$4
      labels:
        topic: $3
    - pattern: kafka.server<type=(DelayedOperationPurgatory), name=(.+), delayedOperation=(.+)><>(Value)
      name: kafka_server_$1_$2_$3_$4
    - pattern: kafka.server<type=(.+), name=(.+)><>(Count|Value|OneMinuteRate)
      name: kafka_server_$1_total_$2_$3
    - pattern: kafka.server<type=(.+)><>(queue-size)
      name: kafka_server_$1_$2
    - pattern: java.lang<type=(.+), name=(.+)><(.+)>(\w+)
      name: java_lang_$1_$4_$3_$2
    - pattern: java.lang<type=(.+), name=(.+)><>(\w+)
      name: java_lang_$1_$3_$2
    - pattern : java.lang<type=(.*)>
    - pattern: kafka.log<type=(.+), name=(.+), topic=(.+), partition=(.+)><>Value
      name: kafka_log_$1_$2
      labels:
        topic: $3
        partition: $4
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-config
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-13.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"central-settlement-deferredsettlement.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-cl\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"password\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"Hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": false,\n    \"API\": {\n      \"DISABLED\": false\n    },\n    \"SETTINGS\": {\n      \"RULES\": {\n        \"SCRIPTS_FOLDER\": \"scripts/grosssettlementTemp\",\n        \"SCRIPT_TIMEOUT\": 100,\n        \"CONSUMER_COMMIT\": true,\n        \"FROM_SWITCH\": true\n    }\n    }\n  },\n  \"API_DOC_ENDPOINTS_ENABLED\": true,\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-deferredsettlement-close\",\n              \"group.id\": \"cs-group-deferredsettlement-close\",\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      },\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-centralsettlement-handler-deferredsettlement-notification-event\",\n              \"group.id\": \"cs-group-centralsettlement-handler-deferredsettlement-notification-event\",\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"client.id\": \"cs-prod-centralsettlement-handler-deferredsettlement-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"client.id\": \"cs-prod-deferredsettlement-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-13.0.0
data:
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-sidecar
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-13.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralsettlement-handler-deferredsettlement-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-handler-grosssettlement-config
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-13.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"central-settlement-rules.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-cl\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"password\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"Hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": false,\n    \"API\": {\n      \"DISABLED\": false\n    },\n    \"SETTINGS\": {\n      \"RULES\": {\n        \"SCRIPTS_FOLDER\": \"scripts/grosssettlementTemp\",\n        \"SCRIPT_TIMEOUT\": 100,\n        \"CONSUMER_COMMIT\": true,\n        \"FROM_SWITCH\": true\n    }\n    }\n  },\n  \"API_DOC_ENDPOINTS_ENABLED\": true,\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-deferredsettlement-close\",\n              \"group.id\": \"cs-group-deferredsettlement-close\",\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      },\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-centralsettlement-handler-grosssettlement-notification-event\",\n              \"group.id\": \"cs-group-centralsettlement-handler-grosssettlement-notification-event\",\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"client.id\": \"cs-prod-centralsettlement-handler-grosssettlement-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"client.id\": \"cs-prod-deferredsettlement-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-handler-grosssettlement-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-13.0.0
data:
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-handler-grosssettlement-sidecar
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-13.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralsettlement-handler-grosssettlement-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-handler-rules-config
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-13.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"central-settlement-grosssettlement.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-cl\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"password\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"Hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": false,\n    \"API\": {\n      \"DISABLED\": false\n    },\n    \"SETTINGS\": {\n      \"RULES\": {\n        \"SCRIPTS_FOLDER\": \"scripts/grosssettlementTemp\",\n        \"SCRIPT_TIMEOUT\": 100,\n        \"CONSUMER_COMMIT\": true,\n        \"FROM_SWITCH\": true\n    }\n    }\n  },\n  \"API_DOC_ENDPOINTS_ENABLED\": true,\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-deferredsettlement-close\",\n              \"group.id\": \"cs-group-deferredsettlement-close\",\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      },\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-centralsettlement-handler-rules-notification-event\",\n              \"group.id\": \"cs-group-centralsettlement-handler-rules-notification-event\",\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"client.id\": \"cs-prod-centralsettlement-handler-rules-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"client.id\": \"cs-prod-deferredsettlement-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-handler-rules-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-13.0.0
data:
    interchangeFeeCalculation.js: "/* eslint-disable no-undef */\n// ********************************************************\n// Name: Interchange fee calculation\n// Type: notification\n// Action: commit\n// Status: success\n// Start: 2020-06-01T00:00:00.000Z\n// End: 2100-12-31T23:59:59.999Z\n// Description: This script calculates the interchange fees between DFSPs where the account type is \"Wallet\"\n// ********************************************************\n\n// ## Globals:\n// payload: The contents of the message from the Kafka topic.\n// transfer: The transfer object.\n\n// # Functions:\n// ## Data retrieval functions:\n// getTransfer(transferId): Retrieves a mojaloop transfer from the central-ledger API.\n\n// ## Helper functions:\n// getExtensionValue(list, key): Gets a value from an extension list\n// log(message): allows the script to log to standard out for debugging purposes\n\n// Math functions:\n// multiply(number1, number2, decimalPlaces): Uses ml-number to handle multiplication of money values\n\n// Ledger functions:\n// addLedgerEntry: Adds a debit and credit ledger entry to the specified account to the specified DFSPs\n\nlog('Running - interchangeFeeCalculation')\n\nlog(JSON.stringify(transfer))\nconst payerFspId = transfer.payer.partyIdInfo.fspId\nconst payeeFspId = transfer.payee.partyIdInfo.fspId\n\nif ((payeeFspId !== payerFspId) &&\n  (transfer.payee.partyIdInfo.extensionList &&                      // WORKAROUND for issue #2149 \n    transfer.payer.partyIdInfo.extensionList &&                     // WORKAROUND for issue #2149 \n    transfer.payee.partyIdInfo.extensionList.extension &&           // WORKAROUND for issue #2149 \n    transfer.payer.partyIdInfo.extensionList.extension) &&          // WORKAROUND for issue #2149\n  (getExtensionValue(transfer.payee.partyIdInfo.extensionList.extension, 'accountType') === 'Wallet' &&\n  getExtensionValue(transfer.payer.partyIdInfo.extensionList.extension, 'accountType') === 'Wallet') &&\n  (transfer.transactionType.scenario === 'TRANSFER' &&\n    transfer.transactionType.initiator === 'PAYER' &&\n    transfer.transactionType.initiatorType === 'CONSUMER')) {\n  log(`Adding an interchange fee for Wallet to Wallet from ${payerFspId} to ${payeeFspId}`)\n  addLedgerEntry(payload.id, 'INTERCHANGE_FEE', // Ledger account type Id\n    'INTERCHANGE_FEE', // Ledger entry type Id\n    multiply(transfer.amount.amount, 0.006, 2),\n    transfer.amount.currency,\n    payerFspId,\n    payeeFspId)\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-handler-rules-sidecar
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-13.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralsettlement-handler-rules-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-service-config
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-13.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"central-settlement-service.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-cl\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"password\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"Hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": true,\n    \"API\": {\n      \"DISABLED\": false\n    },\n    \"SETTINGS\": {\n      \"RULES\": {\n        \"SCRIPTS_FOLDER\": \"scripts/grosssettlementTemp\",\n        \"SCRIPT_TIMEOUT\": 100,\n        \"CONSUMER_COMMIT\": true,\n        \"FROM_SWITCH\": true\n    }\n    }\n  },\n  \"API_DOC_ENDPOINTS_ENABLED\": true,\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-deferredsettlement-close\",\n              \"group.id\": \"cs-group-deferredsettlement-close\",\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      },\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-centralsettlement-service-notification-event\",\n              \"group.id\": \"cs-group-centralsettlement-service-notification-event\",\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"client.id\": \"cs-prod-centralsettlement-service-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n              \"client.id\": \"cs-prod-deferredsettlement-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-service-rules
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-13.0.0
data:
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-centralsettlement-service-sidecar
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-13.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralsettlement-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/finance-portal/templates/configmap-auth-init.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ispopulate
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.2
data:
  HTTP_HOST: "https://localhost"
  HTTP_PORT: "9443"
  HTTP_ENDPOINT: "something"
  HTTP_TIMEOUT: "30000"
  AUTHENTICATION_TYPE: "basic"
  AUTHENTICATION_CREDENTIALS_USERNAME: "admin"
  AUTHENTICATION_CREDENTIALS_PASSWORD: "admin"
---
# Source: mojaloop/charts/finance-portal/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.2
data:
  FXP_ENDPOINT: "http://RELEASE-NAME-fxp-server"
  EXTERNAL_SETTLEMENTS_ENDPOINT: "http://RELEASE-NAME-external-settlement-server"
  CENTRAL_SETTLEMENTS_ENDPOINT: "http://RELEASE-NAME-centralsettlement/v1"
  CENTRAL_LEDGER_ENDPOINT: "http://RELEASE-NAME-centralledger-service"
  HUB_REPORT_URL_312: "http://RELEASE-NAME-something"
  HUB_REPORT_URL_644: "http://RELEASE-NAME-something"
  SETTLEMENT_MANAGEMENT_ENDPOINT: "http://RELEASE-NAME-finance-portal-settlement-management:5000"
  LISTEN_PORT: "3000"
  NODE_ENV: "production"
  BYPASS_AUTH:  "true"
  CORS_ACCESS_CONTROL_REFLECT_ORIGIN: "false"
  INSECURE_COOKIE: "false"
  AUTH_SERVER: "https://localhost"
  AUTH_SERVER_PORT: "9443"
  AUTH_SERVICE: "/oauth2/token"
  VALIDATE_SERVICE: "/oauth2/introspect"
  USERINFO_SERVICE: "/oauth2/userinfo"
  REVOKE_SERVICE: "/oauth2/revoke"
  AZURE_AUTH_TOKEN_ENDPOINT: "https://login.microsoftonline.com"
  AZURE_GRANT_TYPE: "client_credentials"
  AZURE_KAFKA_MESSAGE_PATTERN: "Producer.sendMessage::messageProtocol:'({.*?})'"
  AZURE_LOG_API_ENDPOINT: "https://api.loganalytics.io/v1/"
  AZURE_REDIRECT_URI: "http://localhost:5000"
  AZURE_RESOURCE: "https://api.loganalytics.io/"
  AZURE_SEARCH_QUERY_REGEX: "search '(.*)' | where LogEntry matches regex '.*Producer.sendMessage::messageProtocol:.*' | where LogEntry matches regex '.*transferId.*' | where LogEntry matches regex '.*fspiop-signature.*' | take 1 | project LogEntry"
  AZURE_SEARCH_QUERY_TEMPLATE: "search '{{transferId}}' | where LogEntry matches regex '.*Producer.sendMessage::messageProtocol:.*' | where LogEntry matches regex '.*transferId.*' | where LogEntry matches regex '.*fspiop-signature.*' | take 1 | project LogEntry"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-api-adapter-handler-notification-config
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.2
data:
  default.json: "{\n    \"PORT\": 3000,\n    \"ENDPOINT_SOURCE_URL\": \"http://RELEASE-NAME-centralledger-service:80\",\n    \"ENDPOINT_HEALTH_URL\": \"http://RELEASE-NAME-centralledger-service:80/health\",\n    \"ENDPOINT_CACHE_CONFIG\": {\n        \"expiresIn\": 180000,\n        \"generateTimeout\": 30000\n    },\n    \"ENDPOINT_SECURITY\":{\n        \"JWS\": {\n          \"JWS_SIGN\": true,\n          \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n          \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n        },\n        \"TLS\": {\n            \"rejectUnauthorized\": true\n        }\n    },\n    \"HOSTNAME\": \"ml-api-adapter-notification.local\",\n    \"MAX_CALLBACK_TIME_LAG_DILATION_MILLISECONDS\": 100,\n    \"MAX_FULFIL_TIMEOUT_DURATION_SECONDS\": 240,\n    \"TRANSFERS\": {\n        \"SEND_TRANSFER_CONFIRMATION_TO_PAYEE\": false\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"ml-handler-notification\"\n                }\n            }\n        }\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            },\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"FULFIL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-fulfil\",\n                \"REGEX\": \"topic-transfer-fulfil\"\n            },\n            \"GET_TRANSFERS_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-get\",\n                \"REGEX\": \"topic-transfer-get\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"ml-con-notification-event\",\n                            \"group.id\": \"ml-group-notification-event\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-api-adapter-handler-notification-sidecar
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.2
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"ml-api-adapter-handler-notification-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-api-adapter-service-config
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.2
data:
  default.json: "{\n    \"PORT\": 3000,\n    \"ENDPOINT_SOURCE_URL\": \"http://RELEASE-NAME-centralledger-service:80\",\n    \"ENDPOINT_HEALTH_URL\": \"http://RELEASE-NAME-centralledger-service:80/health\",\n    \"ENDPOINT_CACHE_CONFIG\": {\n        \"expiresIn\": 180000,\n        \"generateTimeout\": 30000\n    },\n    \"ENDPOINT_SECURITY\":{\n        \"JWS\": {\n            \"JWS_SIGN\": false,\n            \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n            \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n          },\n        \"TLS\": {\n            \"rejectUnauthorized\": true\n        }\n    },\n    \"HOSTNAME\": \"ml-api-adapter.local\",\n    \"MAX_CALLBACK_TIME_LAG_DILATION_MILLISECONDS\": 100,\n    \"MAX_FULFIL_TIMEOUT_DURATION_SECONDS\": 240,\n    \"TRANSFERS\": {\n        \"SEND_TRANSFER_CONFIRMATION_TO_PAYEE\": false\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": true,\n        \"API\": {\n            \"DISABLED\": false\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"ml-service\"\n                }\n            }\n        }\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            },\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"FULFIL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-fulfil\",\n                \"REGEX\": \"topic-transfer-fulfil\"\n            },\n            \"GET_TRANSFERS_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-get\",\n                \"REGEX\": \"topic-transfer-get\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"ml-con-notification-event\",\n                            \"group.id\": \"ml-group-notification-event\",\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-api-adapter-service-sidecar
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.2
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"ml-api-adapter-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-backend/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-testing-toolkit-backend-config-default
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-backend-12.2.0
data:
    system_config.json: '{
  "API_DEFINITIONS": [
    {
      "asynchronous": true,
      "folderPath": "fspiop_1.0",
      "type": "fspiop",
      "version": "1.0"
    },
    {
      "asynchronous": true,
      "folderPath": "fspiop_1.1",
      "type": "fspiop",
      "version": "1.1"
    },
    {
      "folderPath": "settlements_1.0",
      "type": "settlements",
      "version": "1.0"
    },
    {
      "folderPath": "settlements_2.0",
      "type": "settlements",
      "version": "2.0"
    },
    {
      "caption": "(old)",
      "folderPath": "central_admin_old_9.3",
      "type": "central_admin",
      "version": "9.3"
    },
    {
      "folderPath": "central_admin_1.0",
      "type": "central_admin",
      "version": "1.0"
    },
    {
      "folderPath": "als_admin_1.1",
      "type": "als_admin",
      "version": "1.1"
    },
    {
      "folderPath": "mojaloop_simulator_0.1",
      "type": "mojaloop_simulator",
      "version": "0.1"
    },
    {
      "folderPath": "mojaloop_sdk_outbound_scheme_adapter_1.0",
      "type": "mojaloop_sdk_outbound_scheme_adapter",
      "version": "1.0"
    }
  ],
  "API_PORT": 5000,
  "CONFIG_VERSIONS": {
    "callback": 1,
    "forward": 1,
    "response": 1,
    "userSettings": 1,
    "validation": 1
  },
  "CONNECTION_MANAGER": {
    "API_URL": "http://RELEASE-NAME-connection-manager-backend:5061",
    "AUTH_ENABLED": false,
    "HUB_PASSWORD": "hub",
    "HUB_USERNAME": "hub"
  },
  "DB": {
    "URI": "mongodb://ttk:ttk@RELEASE-NAME-ttk-mongodb:27017/ttk"
  },
  "HOSTING_ENABLED": false,
  "HTTP_CLIENT": {
    "KEEP_ALIVE": false,
    "MAX_SOCKETS": 50,
    "UNUSED_AGENTS_CHECK_TIMER_MS": 300000,
    "UNUSED_AGENTS_EXPIRY_MS": 1800000
  },
  "KEYCLOAK": {
    "API_URL": "http://localhost:5050",
    "ENABLED": false,
    "PASSWORD": "hub",
    "REALM": "testingtoolkit",
    "USERNAME": "hub"
  },
  "OAUTH": {
    "APP_OAUTH_CLIENT_KEY": "ttk",
    "APP_OAUTH_CLIENT_SECRET": "23b898a5-63d2-4055-bbe1-54efcda37e7d",
    "AUTH_ENABLED": false,
    "EMBEDDED_CERTIFICATE": "password",
    "EVERYONE_ROLE": "Internal/everyone",
    "JWT_COOKIE_NAME": "TTK-API_ACCESS_TOKEN",
    "MTA_ROLE": "Application/MTA",
    "OAUTH2_ISSUER": "http://localhost:5050/api/oauth2/token",
    "OAUTH2_TOKEN_ISS": "http://localhost:5050/api/oauth2/token",
    "P12_PASS_PHRASE": "SOME_S3C4R3_P@SS",
    "PTA_ROLE": "Application/PTA"
  },
  "SERVER_LOGS": {
    "ADAPTER": {
      "API_URL": "http://elastic-search.demo/",
      "INDEX": "moja*",
      "TYPE": "ELASTICSEARCH"
    },
    "ENABLED": false,
    "RESULTS_PAGE_SIZE": 50
  }
}'
    user_config.json: '{
  "ADVANCED_FEATURES_ENABLED": true,
  "CALLBACK_ENDPOINT": "http://localhost:4000",
  "CALLBACK_RESOURCE_ENDPOINTS": {
    "enabled": true,
    "endpoints": [
      {
        "endpoint": "http://moja-account-lookup-service.demo",
        "method": "put",
        "path": "/parties/{Type}/{ID}"
      },
      {
        "endpoint": "http://moja-quoting-service.demo",
        "method": "put",
        "path": "/quotes/{ID}"
      },
      {
        "endpoint": "http://moja-ml-api-adapter-service.demo",
        "method": "put",
        "path": "/transfers/{ID}"
      }
    ]
  },
  "CALLBACK_TIMEOUT": 20000,
  "CLIENT_MUTUAL_TLS_ENABLED": false,
  "CLIENT_TLS_CREDS": [
    {
      "CERT": "-----BEGIN CERTIFICATE-----\nMIIFATCCAumgAwIBAgIUEcEtqgcXBoTykvaD6PprzY8kxpYwDQYJKoZIhvcNAQEL\nBQAwfzERMA8GA1UEChMITW9kdXNCb3gxHDAaBgNVBAsTE0luZnJhc3RydWN0dXJl\nIFRlYW0xTDBKBgNVBAMTQ3Rlc3Rmc3AxLnFhLnByZS5teWFubWFycGF5LXByZS5p\nby5pbnRlcm5hbCB0ZXN0ZnNwMSBJbnRlcm1lZGlhdGUgQ0EwHhcNMjEwMjIyMTkw\nMTEyWhcNMjMwMjIzMDY0MDA2WjBdMREwDwYDVQQKEwhNb2R1c0JveDEcMBoGA1UE\nCxMTSW5mcmFzdHJ1Y3R1cmUgVGVhbTEqMCgGA1UEAxMhdGVzdGZzcDEucWEucHJl\nLm15YW5tYXJwYXktcHJlLmlvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEApndEBbmdlfrpnidagKb2D32bEL+iGYxLEicdQVs24018zNPdbrIYtXyDjgjA\nq718HH5XQW2FSz6cA1CbQ6jLuY88EZRUiCSJ4rCkENWw+mpVLyOd+mcYU4JwOQNC\nP+W8GGcW/haifkXtHEDUO4pIxnXWC6DftvxZ3TH5PxtWO8aJcsoj94oBTPOhnGi0\nC356XyseYl7o7hdxZu3DvY3Wyh/k5pDDHOCjQYxl9wjtW+BVWMCFxRaCu4f/3LVj\nca9BccwZ8O4Rdhu6lhJEUCUgTqdx3vXRB1xzwHT0W7gariy4RVbvwE35AaCliyEr\n4O5WlCvAMOct7POYDAwNuoeb7wIDAQABo4GWMIGTMA4GA1UdDwEB/wQEAwIDqDAT\nBgNVHSUEDDAKBggrBgEFBQcDAjAdBgNVHQ4EFgQU2alVxVOOplYXiLAYCDaII4E0\n/WgwHwYDVR0jBBgwFoAUCFvcCetcirxZPE3N6qMdOo5H7Z4wLAYDVR0RBCUwI4Ih\ndGVzdGZzcDEucWEucHJlLm15YW5tYXJwYXktcHJlLmlvMA0GCSqGSIb3DQEBCwUA\nA4ICAQBkX5LItY0calp7NT21O8z+iufVNV8onEch4J7HJjEVwtCB4UVl7LrWJ3cw\n9KLt7nj85/AUuuhtNPJO9DW/x+0xRyW94Ef5MYHP3nheFWTag8riYl/1SXljOssS\nHCpTvRhirnfGeqBGO1OBwCbkYNIEZI95eMerVoPFm0PfGBb4DJ6mUdfc3qzeOP7K\nOlE5VMhwH2PYv1TS7Hpj1k/1dxpdvyOs7EKVvWD+OokLhJaHgU8NWVetTUtsXSN/\nTv06ZN8JGTN/Udm7POVyEaol8Jw2FRGGKcwOBKbqroNs6POqTofqZeL4SFAkzzQL\nvOAhbQIB6GSznG1Gg1G9IjGVCMXUhpNK2PD8RR1ovzi0MZlRkITGRPhBYQf5xMFl\nZeq0mGFQR3VYDdlwT0O37C8fpaYvpdupeYdxcB623PNz1VkO1MbsXnOoHY8kcFGa\nMh4IARCeR/MwXNWHpGrd6J5Mzmhk0Vy8GyBbqcROUpNR/XTZYRTyfTEq5+amJyLi\n67OB9FP5cS7oQhj7gsaQCTJlxbh/CjmQdKmIimWSEZkDePK5eExNPafBk47tx4KA\nFmh9pIqRyheROesa/zTDGYySNcVd14dl703pyZQNO4b5rap0SZoyGDTfI+7OqAHM\nAz0kWYyZps2nqPZgbwDFigIy2TESvoXahCCtNUoCy9sawa3Diw==\n-----END CERTIFICATE-----",
      "HOST": "testfsp1",
      "KEY": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEApndEBbmdlfrpnidagKb2D32bEL+iGYxLEicdQVs24018zNPd\nbrIYtXyDjgjAq718HH5XQW2FSz6cA1CbQ6jLuY88EZRUiCSJ4rCkENWw+mpVLyOd\n+mcYU4JwOQNCP+W8GGcW/haifkXtHEDUO4pIxnXWC6DftvxZ3TH5PxtWO8aJcsoj\n94oBTPOhnGi0C356XyseYl7o7hdxZu3DvY3Wyh/k5pDDHOCjQYxl9wjtW+BVWMCF\nxRaCu4f/3LVjca9BccwZ8O4Rdhu6lhJEUCUgTqdx3vXRB1xzwHT0W7gariy4RVbv\nwE35AaCliyEr4O5WlCvAMOct7POYDAwNuoeb7wIDAQABAoIBAB4YIawHSn36xpFY\n+/uWM5XJV2dHvb5wpoG5oIhYPSwKri05gCaq+9yTjhT3cB2cO/vKu2uQqTBZOUtA\nH1G0CmCZjHqBHmcec+8PkBmbCEu9PXkwLzc9vCAczL0B4dA7cC3ZNUbqQKYjbiJV\ndgjtjwqR8whXJRqntHdQuYa3InfbufcHNHhSXJwE9MqVRpsv/BfY9wjhQfGBHUnT\nCz41xj1bu8Uy4+/1sRF/l9fYDm5E6WbgzvI49/fM7hA+8fQqoRkFLlEzzBhWb93Q\n2qVo2Y5RhVpffdyxPYX7b9RI7UmUZYp2sLl5GYj5ZzTzsffwUdPl2pZlRkYJGvUo\nortpToECgYEA17NVIZgeQ5VcSsZKGJlzPkcdPoWCk7RY5DugxTaNwSE/uO25B/Ax\nBPE6ZC9LbfXyfTQXaam2VtpSzvNJ7p7j30qkEK0Z+I2pGAVohZg4enkHaIQkYtIP\naZZ/wce5R8VZq6EpToprTm3cG6T+nNVOzqRjUqgnUZyY8nWy2CD5OucCgYEAxZEb\nOKjo9Iwrod2uOZlQDAsnTvgqZySW/lORrnfEWmOEiJpRvjlxMfNPNlc2iMTBQShq\naPZi48g17btU8ACs2NOH/FXuxooDe+0gJDj48WP9/bBzOAOJqhKZ+g9l/Cr978yJ\nAHNh/w8foUUkqAfxmXoTImw7LdSaPIc7ewAlPbkCgYAcGq6d6O8QiTZ0O6/N0riU\nRbnGuqiPzDDE1AwXhgskPcvKsZapNR998FxWT185nZERxSbDyqwKVvnxIvvgDm3M\nWzJTReqbWwHMMnAy7+lz868GbCk9gvclH8nXmslGU61iUmZKaHigyGmkZHQURSq2\ne+7BB03QMWIwPSunQ2yVwwKBgQCbPrzvNvtnPsYCeZmwNSLLc/A9g5B+YCguTSjK\nud4XUOASH4FgQu8J2zFBeCKoMkPRmZqURBfM+cQ2vN+vgDhSYVYYGMZ6SHUYamq5\nS/OCa5poQMEpIM6KT/eioXr4PigwyL5XFlPJAu9N4HE/gI5+lYh3oiiWiNtx+Knq\nq2CYMQKBgQCv+QTGDrSc3SUaWT+JMoFdfzvJyyqQOUvgRbSGAp5GryYqI9dozx70\nlT2IdoAZ0DHrJhNs13Pr7ngXwqS6pKlZU8NSX2ch7h5ZwIsYJESzKwXF/frLMQSy\nTPV3d0hb7UaW3wqOx2Dbj8vJJdvUo3UUkOcmgesqGg3nf3t51I6k0A==\n-----END RSA PRIVATE KEY-----"
    }
  ],
  "DEFAULT_ENVIRONMENT_FILE_NAME": "hub-k8s-default-environment.json",
  "DEFAULT_REQUEST_TIMEOUT": 5000,
  "DEFAULT_USER_FSPID": "userdfsp",
  "ENDPOINTS_DFSP_WISE": {
    "dfsps": {
      "userdfsp": {
        "defaultEndpoint": "http://scheme-adapter:4000",
        "endpoints": []
      },
      "userdfsp2": {
        "defaultEndpoint": "http://scheme-adapter2:4000",
        "endpoints": []
      }
    }
  },
  "FSPID": "testingtoolkitdfsp",
  "GITHUB_CONFIG": {
    "TEST_CASES_REPO_BASE_PATH": "collections/hub",
    "TEST_CASES_REPO_DEFAULT_RELEASE_TAG": "latest",
    "TEST_CASES_REPO_HUB_GP_PATH": "collections/hub/golden_path",
    "TEST_CASES_REPO_HUB_PROVISIONING_PATH": "collections/hub/provisioning",
    "TEST_CASES_REPO_NAME": "testing-toolkit-test-cases",
    "TEST_CASES_REPO_OWNER": "mojaloop"
  },
  "HUB_ONLY_MODE": false,
  "ILP_SECRET": "secret",
  "INBOUND_MUTUAL_TLS_ENABLED": false,
  "JWS_SIGN": false,
  "JWS_SIGN_PUT_PARTIES": false,
  "LOG_SERVER_UI_URL": "http://log-server-url.demo",
  "OUTBOUND_MUTUAL_TLS_ENABLED": false,
  "SCRIPT_TIMEOUT": 5000,
  "SEND_CALLBACK_ENABLE": true,
  "TRANSFERS_VALIDATION_CONDITION": true,
  "TRANSFERS_VALIDATION_ILP_PACKET": true,
  "TRANSFERS_VALIDATION_WITH_PREVIOUS_QUOTES": true,
  "UI_CONFIGURATION": {
    "MOBILE_SIMULATOR": {
      "HUB_CONSOLE_ENABLED": true
    }
  },
  "VALIDATE_INBOUND_JWS": false,
  "VALIDATE_INBOUND_PUT_PARTIES_JWS": false,
  "VERSION": 1,
  "VERSIONING_SUPPORT_ENABLE": true
}'
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-backend/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-testing-toolkit-backend-config-extra-environments
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-backend-12.2.0
data:
    hub-k8s-cgs-environment.json: '{
  "inputValues": {
    "BASE_CENTRAL_LEDGER_ADMIN": "",
    "CALLBACK_ENDPOINT_BASE_URL": "http://RELEASE-NAME-ml-testing-toolkit-backend:5000",
    "DELAY_CGS": 5000,
    "ENABLE_JWS_SIGNING": true,
    "ENABLE_JWS_VALIDATION": false,
    "ENABLE_PROTECTED_HEADERS_VALIDATION": true,
    "ENABLE_WS_ASSERTIONS": true,
    "HOST_ACCOUNT_LOOKUP_ADMIN": "http://RELEASE-NAME-account-lookup-service-admin",
    "HOST_ACCOUNT_LOOKUP_SERVICE": "http://RELEASE-NAME-account-lookup-service",
    "HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN": "http://RELEASE-NAME-account-lookup-service-admin",
    "HOST_BULK_ADAPTER": "http://RELEASE-NAME-bulk-api-adapter-service",
    "HOST_CENTRAL_LEDGER": "http://RELEASE-NAME-centralledger-service",
    "HOST_CENTRAL_SETTLEMENT": "http://RELEASE-NAME-centralsettlement-service/v2",
    "HOST_LEGACY_SIMULATOR": "http://RELEASE-NAME-simulator",
    "HOST_ML_API_ADAPTER": "http://RELEASE-NAME-ml-api-adapter-service",
    "HOST_QUOTING_SERVICE": "http://RELEASE-NAME-quoting-service",
    "HOST_REGISTER_ORACLE": "http://RELEASE-NAME-simulator",
    "HOST_SIMULATOR": "http://RELEASE-NAME-simulator",
    "HOST_TRANSACTION_REQUESTS_SERVICE": "http://RELEASE-NAME-transaction-requests-service",
    "HUB_OPERATOR_BEARER_TOKEN": "NOT_APPLICABLE",
    "MSISDN_ORACLE_ENDPOINT": "http://RELEASE-NAME-simulator/oracle",
    "NET_DEBIT_CAP": "50000",
    "NORESPONSE_NAME": "noresponsepayeefsp",
    "NORESPONSE_SIMPAYEE_NAME": "noresponsepayeefsp",
    "ON_US_TRANSFERS_ENABLED": false,
    "PAYEEFSP_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-payeefsp-backend:3003",
    "PAYEEFSP_CALLBACK_URL": "http://RELEASE-NAME-sim-payeefsp-scheme-adapter:4000",
    "PAYEEFSP_SDK_TESTAPI_URL": "http://RELEASE-NAME-sim-payeefsp-scheme-adapter:4002",
    "PAYEEFSP_SDK_TESTAPI_WS_URL": "ws://RELEASE-NAME-sim-payeefsp-scheme-adapter:4002",
    "PAYERFSP_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-payerfsp-backend:3003",
    "PAYERFSP_CALLBACK_URL": "http://RELEASE-NAME-sim-payerfsp-scheme-adapter:4000",
    "PAYERFSP_EMAIL": "some.email@gmail.com",
    "PAYERFSP_SDK_TESTAPI_URL": "http://RELEASE-NAME-sim-payerfsp-scheme-adapter:4002",
    "PAYERFSP_SDK_TESTAPI_WS_URL": "ws://RELEASE-NAME-sim-payerfsp-scheme-adapter:4002",
    "SIM1_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp1-backend:3003",
    "SIM1_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nDgoQeSng2kt5Z6mkoDIQTs7nEflb4w==\n-----END PRIVATE KEY-----\n",
    "SIM1_MSISDN": "17039811903",
    "SIM1_NAME": "testfsp1",
    "SIM2_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp2-backend:3003",
    "SIM2_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nTv4G862WYeqD1fdyZaKQ3b9fAQEq1g==\n-----END PRIVATE KEY-----\n",
    "SIM2_MSISDN": "17039811904",
    "SIM2_NAME": "testfsp2",
    "SIM3_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp3-backend:3003",
    "SIM3_NAME": "testfsp3",
    "SIM4_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp4-backend:3003",
    "SIM4_NAME": "testfsp4",
    "SIMPAYEE_CURRENCY": "USD",
    "SIMPAYEE_JWS_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT\n7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL\nnoSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi\n120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI\nIoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y\neW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB\nT/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z\nSikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq\nm+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2\nHfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I\nWylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0\ndQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY\nJuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB\nBKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4\nSfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj\nsuHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd\n7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm\nfW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH\ntl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/\nn3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+\nCPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K\nFfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct\n0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ\nsHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa\nuutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW\nuu1pxuWD0gTJxFkp6u4YIAhw\n-----END PRIVATE KEY-----\n",
    "SIMPAYEE_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE\nsgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw\nIpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW\nNgf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj\nvVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ\nLmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3\nFwIDAQAB\n-----END PUBLIC KEY-----\n",
    "SIMPAYEE_MSISDN": "17039811902",
    "SIMPAYEE_NAME": "payeefsp",
    "SIMPAYER_CURRENCY": "USD",
    "SIMPAYER_JWS_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6\njM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E\nvCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I\neoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7\nkx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC\nQWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/\nsAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt\nA7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj\na4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X\nKaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii\nyWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n\nxOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR\nRbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B\ndXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ\nuomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht\nvJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS\ngGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium\nsgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW\n6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR\n8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/\nkmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI\niuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX\n7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa\n+fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4\nzXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF\niNK0yCENMhSoOTtbT9tmGi0=\n-----END PRIVATE KEY-----\n",
    "SIMPAYER_MSISDN": "17039811901",
    "SIMPAYER_NAME": "payerfsp",
    "SIMPLE_ROUTING_MODE_ENABLED": false,
    "TESTFSP1_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp1-backend:3003",
    "TESTFSP1_CALLBACK_URL": "http://RELEASE-NAME-sim-testfsp1-scheme-adapter:4000",
    "TESTFSP1_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v\ndCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG\n42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6\nNRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa\nh9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os\nxQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by\nUQIDAQAB\n-----END PUBLIC KEY-----\n",
    "TESTFSP1_SDK_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp1-scheme-adapter:4002",
    "TESTFSP1_SDK_TESTAPI_WS_URL": "ws://RELEASE-NAME-sim-testfsp1-scheme-adapter:4002",
    "TESTFSP2_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp2-backend:3003",
    "TESTFSP2_CALLBACK_URL": "http://RELEASE-NAME-sim-testfsp2-scheme-adapter:4000",
    "TESTFSP2_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y\nl5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5\n+ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG\nYedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H\nJa+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6\nWZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+\nAQIDAQAB\n-----END PUBLIC KEY-----",
    "TESTFSP2_SDK_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp2-scheme-adapter:4002",
    "TESTFSP2_SDK_TESTAPI_WS_URL": "ws://RELEASE-NAME-sim-testfsp2-scheme-adapter:4002",
    "TESTFSP3_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp3-backend:3003",
    "TESTFSP3_CALLBACK_URL": "http://RELEASE-NAME-sim-testfsp3-scheme-adapter:4000",
    "TESTFSP4_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp4-backend:3003",
    "TESTFSP4_CALLBACK_URL": "http://RELEASE-NAME-sim-testfsp4-scheme-adapter:4000",
    "TEST_NOTIFICATIONS": true,
    "TTKFSP_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nDktFAP1w3ruycnE/t+/H8rDVJGPTHc8=\n-----END PRIVATE KEY-----\n",
    "WS_ASSERTION_TIMEOUT": 5000,
    "accept": "application/vnd.interoperability.parties+json;version=1.0",
    "acceptParticipants": "application/vnd.interoperability.participants+json;version=1.0",
    "acceptQuotes": "application/vnd.interoperability.quotes+json;version=1.0",
    "acceptTransfers": "application/vnd.interoperability.transfers+json;version=1.0",
    "accountId": "6",
    "amount": "100",
    "batchToIdValue1": "27713803066",
    "batchToIdValue2": "27713803067",
    "condition": "n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU",
    "contentTransfers": "application/vnd.interoperability.transfers+json;version=1.0",
    "contentType": "application/vnd.interoperability.parties+json;version=1.0",
    "contentTypeParticipants": "application/vnd.interoperability.participants+json;version=1.0",
    "contentTypeQuotes": "application/vnd.interoperability.quotes+json;version=1.0",
    "currency": "USD",
    "currency2": "TZS",
    "fromDOB": "1984-01-01",
    "fromFirstName": "Firstname-Test",
    "fromFspId": "testingtoolkitdfsp",
    "fromIdType": "MSISDN",
    "fromIdValue": "44123456789",
    "fromLastName": "Lastname-Test",
    "fspiopSignature": "{\"signature\":\"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\\\",\\\"protectedHeader\\\":\\\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ\"}",
    "fundsInPrepareAmount": "",
    "fundsInPrepareTransferId": "",
    "homeTransactionId": "123ABC",
    "hubEmail": "some.email@gmail.com",
    "hub_operator": "NOT_APPLICABLE",
    "huboperatoremail": "some.email@gmail.com",
    "ilpPacket": "AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA",
    "invalidFulfillment": "_3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----",
    "invalidToIdType": "ACCOUNT_ID",
    "invalidToIdValue": "27713803099",
    "mobileSimPayeeFsp": "greenbankfsp",
    "mobileSimPayerFsp": "pinkbankfsp",
    "note": "test",
    "payeeIdType": "MSISDN",
    "payeeIdentifier": "17039811902",
    "payeefsp": "payeefsp",
    "payeefspEmail": "some.email@gmail.com",
    "payeefspMSISDN": "17039811907",
    "payerIdType": "MSISDN",
    "payerIdentifier": "17039811901",
    "payerMSISDN": "17891239876",
    "payerfsp": "testingtoolkitdfsp",
    "payerfspEmail": "some.email@gmail.com",
    "payerfspMSISDN": "17891239876",
    "payerfspSettlementAccountBalanceAfterFundsIn": "",
    "payerfspSettlementAccountBalanceBeforeFundsIn": "",
    "payerfspSettlementAccountId": "",
    "receiverMSISDN": "27713803912",
    "settlementpayeefspNoExtensionMSISDN": "27714923918",
    "settlementtestNonExistingMSISDN": "22244803917",
    "settlementtestfsp1bankMSISDN": "27713813914",
    "settlementtestfsp2bankMSISDN": "27713813915",
    "settlementtestfsp3bankMSISDN": "27713813916",
    "settlementtestfsp4bankMSISDN": "27713813917",
    "testfsp1Email": "some.email@gmail.com",
    "testfsp1IdType": "MSISDN",
    "testfsp1Identifier": "17891239875",
    "testfsp1MSISDN": "17891239875",
    "testfsp2Email": "some.email@gmail.com",
    "testfsp2IdType": "MSISDN",
    "testfsp2Identifier": "17891239874",
    "testfsp2MSISDN": "17891239874",
    "testfsp3MSISDN": "17891239873",
    "testfsp4MSISDN": "17891239872",
    "toFspId": "payeefsp",
    "toIdType": "MSISDN",
    "toIdValue": "27713803912",
    "toIdValueDelete": "27713803913",
    "validCondition": "GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM",
    "validCondition2": "kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms",
    "validFulfillment": "UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA",
    "validIlpPacket2": "AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA"
  }
}'
    hub-k8s-default-environment.json: '{
  "inputValues": {
    "BASE_CENTRAL_LEDGER_ADMIN": "",
    "CALLBACK_ENDPOINT_BASE_URL": "http://RELEASE-NAME-ml-testing-toolkit-backend:5000",
    "ENABLE_JWS_SIGNING": true,
    "ENABLE_JWS_VALIDATION": false,
    "ENABLE_PROTECTED_HEADERS_VALIDATION": true,
    "ENABLE_WS_ASSERTIONS": true,
    "HOST_ACCOUNT_LOOKUP_ADMIN": "http://RELEASE-NAME-account-lookup-service-admin",
    "HOST_ACCOUNT_LOOKUP_SERVICE": "http://RELEASE-NAME-account-lookup-service",
    "HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN": "http://RELEASE-NAME-account-lookup-service-admin",
    "HOST_BULK_ADAPTER": "http://RELEASE-NAME-bulk-api-adapter-service",
    "HOST_CENTRAL_LEDGER": "http://RELEASE-NAME-centralledger-service",
    "HOST_CENTRAL_SETTLEMENT": "http://RELEASE-NAME-centralsettlement-service/v2",
    "HOST_LEGACY_SIMULATOR": "http://RELEASE-NAME-simulator",
    "HOST_ML_API_ADAPTER": "http://RELEASE-NAME-ml-api-adapter-service",
    "HOST_QUOTING_SERVICE": "http://RELEASE-NAME-quoting-service",
    "HOST_SIMULATOR": "http://RELEASE-NAME-simulator",
    "HOST_TRANSACTION_REQUESTS_SERVICE": "http://RELEASE-NAME-transaction-requests-service",
    "HUB_OPERATOR_BEARER_TOKEN": "NOT_APPLICABLE",
    "NORESPONSE_SIMPAYEE_NAME": "noresponsepayeefsp",
    "ON_US_TRANSFERS_ENABLED": false,
    "PAYEEFSP_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-payeefsp-backend:3003",
    "PAYEEFSP_CALLBACK_URL": "http://RELEASE-NAME-sim-payeefsp-scheme-adapter:4000",
    "PAYEEFSP_SDK_TESTAPI_URL": "http://RELEASE-NAME-sim-payeefsp-scheme-adapter:4002",
    "PAYEEFSP_SDK_TESTAPI_WS_URL": "ws://RELEASE-NAME-sim-payeefsp-scheme-adapter:4002",
    "PAYERFSP_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-payerfsp-backend:3003",
    "PAYERFSP_CALLBACK_URL": "http://RELEASE-NAME-sim-payerfsp-scheme-adapter:4000",
    "PAYERFSP_SDK_TESTAPI_URL": "http://RELEASE-NAME-sim-payerfsp-scheme-adapter:4002",
    "PAYERFSP_SDK_TESTAPI_WS_URL": "ws://RELEASE-NAME-sim-payerfsp-scheme-adapter:4002",
    "SIM1_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nDgoQeSng2kt5Z6mkoDIQTs7nEflb4w==\n-----END PRIVATE KEY-----\n",
    "SIM1_MSISDN": "17039811903",
    "SIM1_NAME": "testfsp1",
    "SIM2_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nTv4G862WYeqD1fdyZaKQ3b9fAQEq1g==\n-----END PRIVATE KEY-----\n",
    "SIM2_MSISDN": "17039811904",
    "SIM2_NAME": "testfsp2",
    "SIMPAYEE_CURRENCY": "USD",
    "SIMPAYEE_JWS_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT\n7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL\nnoSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi\n120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI\nIoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y\neW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB\nT/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z\nSikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq\nm+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2\nHfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I\nWylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0\ndQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY\nJuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB\nBKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4\nSfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj\nsuHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd\n7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm\nfW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH\ntl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/\nn3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+\nCPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K\nFfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct\n0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ\nsHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa\nuutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW\nuu1pxuWD0gTJxFkp6u4YIAhw\n-----END PRIVATE KEY-----\n",
    "SIMPAYEE_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE\nsgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw\nIpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW\nNgf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj\nvVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ\nLmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3\nFwIDAQAB\n-----END PUBLIC KEY-----\n",
    "SIMPAYEE_MSISDN": "17039811902",
    "SIMPAYEE_NAME": "payeefsp",
    "SIMPAYER_CURRENCY": "USD",
    "SIMPAYER_JWS_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6\njM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E\nvCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I\neoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7\nkx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC\nQWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/\nsAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt\nA7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj\na4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X\nKaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii\nyWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n\nxOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR\nRbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B\ndXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ\nuomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht\nvJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS\ngGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium\nsgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW\n6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR\n8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/\nkmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI\niuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX\n7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa\n+fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4\nzXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF\niNK0yCENMhSoOTtbT9tmGi0=\n-----END PRIVATE KEY-----\n",
    "SIMPAYER_MSISDN": "17039811901",
    "SIMPAYER_NAME": "payerfsp",
    "SIMPLE_ROUTING_MODE_ENABLED": true,
    "TESTFSP1_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp1-backend:3003",
    "TESTFSP1_CALLBACK_URL": "http://RELEASE-NAME-sim-testfsp1-scheme-adapter:4000",
    "TESTFSP1_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v\ndCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG\n42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6\nNRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa\nh9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os\nxQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by\nUQIDAQAB\n-----END PUBLIC KEY-----\n",
    "TESTFSP1_SDK_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp1-scheme-adapter:4002",
    "TESTFSP1_SDK_TESTAPI_WS_URL": "ws://RELEASE-NAME-sim-testfsp1-scheme-adapter:4002",
    "TESTFSP2_BACKEND_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp2-backend:3003",
    "TESTFSP2_CALLBACK_URL": "http://RELEASE-NAME-sim-testfsp2-scheme-adapter:4000",
    "TESTFSP2_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y\nl5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5\n+ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG\nYedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H\nJa+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6\nWZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+\nAQIDAQAB\n-----END PUBLIC KEY-----",
    "TESTFSP2_SDK_TESTAPI_URL": "http://RELEASE-NAME-sim-testfsp2-scheme-adapter:4002",
    "TESTFSP2_SDK_TESTAPI_WS_URL": "ws://RELEASE-NAME-sim-testfsp2-scheme-adapter:4002",
    "TEST_NOTIFICATIONS": true,
    "TTKFSP_JWS_KEY": "-----BEGIN PRIVATE KEY-----\nMIIJQwIBADANBgkqhkiG9w0BAQEFAASCCS0wggkpAgEAAoICAQDPnscTEMZGXrO7\nH7nna4qgQPfODs2aV6A39ww4B2T2qeEncKk0xGTPUYAmjDO3TL4sG7Xl1Jiye9XL\nMaJxrMB4rh6Ndik8t+GiXIBOjeLVeg/uCBddTZfB/4yHpyfETbDM5QqQLsiWLyz9\nn6/O/bH8sgaygLMaTpYazaoI522bTTGBtgXf6nGNcjgypMPanbvFmE5lOls2Adjq\nQDbmC8FgnubSD5R//EULNSRnt+dxyExb7+vDcVqC0npxSxgBGHnkRIlbU6AszBpK\n2tMVGV84Qw8ibr1NSD/5n1fg/jfZfICVOcJRgw11v4+OAT3YqL7kKCUo2ChyYVWp\nH1aJ+luGs4N2KcgMsmEnA8eZmFMgXk2jJktt/kSXcJjzVg/0CAjK2c/oaPufVg+y\nKLRdBkS8FR3deCPH2xRl41f5NSB7/C2kCMcep8EZSlhJ6ZeS3A09HSJPNaA4//hN\n0o+DpqUQ2v9rwUH5OJ1YDk6xSFNDSmx/I2UEi/7JXZ5+zd0npfu5kZUQY00X7QrA\nhoxLc9zzJbYy3eSHaDsgJ4tRm68a2PpxbmwfvTF51iQwU2F30pE9Xuapbk6Hhwtk\naQwlWohv+ZnNaJp6hsDFe+ELixdXlwi7UMvowXoD4+7AcfBe2QXLllYsZYYLaMj1\nYrKpNfThQoOYNo7UByPJOKLL9Err8QIDAQABAoICAFX3AKeAwQ//Az0eCEvtR8NN\n0y0DDRd0Y7b4eBs02JWXRk4dxDnAfZsnvD95uqoRQQajXJ/ydF0mkCGnhgK6TCFL\nuwPIoo9s9aRT155u+jZ46WKeAAqWZ5kgVhAO4pTRtDxKM6L6c/xXQTIsbc9vVMRz\n8/jx9/aTBmzHrjkslcIBZte1xd3uRSETY3h4p018FPTeOMuKK50Di8yGVRTQVjvK\n33inkc2iZvYahV3alB6VGCTTBNPyOc9EFgWV2bUObN3akOL7D62svtAypcatMDNr\n9LbFkmUO3spdMzZKHFbVSao/9Zjpgee4rthV5EUyrYNrqeMtCSY+7ghuHNdZjY5M\nE9IntIqtZTHnTXJuHR5aZhQUuRBBO8ymhzSRYLPCWTrIb2FdRVj2u2h8YOhVgo13\n3/b55Q1vJxWbUdqgxn087PvvNoznIqTphsKGivyPZ45scnwVMhVd8Pgm6V0nuoCV\nYj32CSXFFTavZTP6c7CN3jzjSXyHlJrC4vhVD30tqV9iDeZtYE3AGuP3E3xGE7oU\nvqBzkUOk5gnYxbKpFA2kW8uY0XWmbrWR3sz+1Xw7IrQuyqMFvjnhRdpJaodkAlDa\nroefxFliyek4/SRyPcWiM0yaP6Mz6ssGg018b/fM+HemE/wtd3I6qDS9PZl3LBdv\n9aLz9XTh948/kIASRjLHAoIBAQDpqwuM1UlcQTuUmuoF0hADmBzi8eIR2JcnVVdE\nUHfu8jJ3LMzNNf5VAcjbBwTb3/gdVhD71dm9GdGGmX4bLBogGqRuEYZtDKOoHu0w\nRKUGSATob2qkLC6bI+Xg1q6XMTNxrBqqjTMCbHKuvwuwF8qTYTuP4GTaDEBpOdme\nVfWoLu9JAbQz/9NxUYqmj2FckA/v1LQ9apBu+Cnwk9/U/Yi/kGz8EuX8apfgou1b\n6fi0m/TkkbXuVEKP9CwUuWcX5TGQ5LFSqfK40eIT5AIKPhTWAwZV1iRhNh2J9kNH\ngC2yOqFswSRVJ6KsYMs7pMv2g2cwjBP8M1BudKRIxkFJbcmLAoIBAQDjdnDVq09b\nxHsv29evhx70GDl+oyNEkbhKjGqr4V7yL8wcchSdyfT8bZhSo/cBE/BRhfgBreLo\nTGUHBDWEySGfmWwMQQjorLawnAiJGerm7N497R67jmdZIgd7NwcA+XQ7N784Xbox\n9IngEvAt8hyUqJXQOSNnigLOWQoJSdyYzpsXBSjXcu/TsgozLu+FD9Gii8T+hyuo\nNhAgmj/9Vr8GhKVIkaWRPouTGA2pm2b6iJgaHWLICbUK8VFdc9XTkBuhTc7IyGHP\n1gd87cOM4AkgNp6+XMAmJqePRnBAvbDxNIdaNr/Bp2YxRw+uTa8qCpi3bAsG1qjJ\nWJHlNT/jz3fzAoIBAQDYu3jMGOyhcDQGIyYbXfrSip2Idlh8uwuARSzbRVPowqbC\nWUBgusr7J9uYJEuCcZveAf1gyLrcJf1sviP0qhRVYMDRAtpPfWCyyHSxx4nVaKl8\nuhMM0Zos9b/7qsRnohAYSEy3kp4UimhY4wTBQV/5ET/AtJ52jNSVhT3vGcXwSBBU\nBAuUC56gRcS3ttfUlh7iEcVYDeaHtxCXf2EmWj8jh58+s3y0gl360sQb88lmJB2i\nf/Biba8LfKwCUPFpfYFa5nP+u3lRqgLq9hpaS7jhxA51QVme/SWq2EsRH7fCz5T4\nnbDIdynwfxsiaDlynfDxW4wR6bqZqQDUK2dU50r/AoIBAQCvNsY2IS8RPmmx9QPR\nByG1348yWJJLOICglEd7PTC5GE5/PvVYkoAvjnB+gCU95FEDS1I+YObgEDDmVbyw\nG4rV+QW87r/hE2Hq61a73YYP+jg7tZMt4MUFaOwgYsP3YTDCiO+4iKJr5rXqMExo\n6A5SCQbWDZ2THUGKGBZeD1JpNwVKl0PdqoDJLmUjBi2k7wmJz2agthjQC00jAA74\npECj0bvMCb1jA63aUfX8R2Ps6xlXTHmSI8AcvMTzWs5EmMZf26LFEW4e/fxopHI0\n60K8WLaxZprxCGecOyMvC6/oLZFx0aimkL9siBOxLdAXb3AyInzf+Kyt5JcF253q\nax83AoIBAGSoxz91Oc+NPP3NNYlPuhXErqC+R/EEO6Z6ZalKsJtfgL1Ss6Fq30ot\niKhEfFYm1gmZDTrMbI6dceGkNg4l8okXz9U6lfUQH0muk8ZRl8LaSm7cQwzcAI1S\nm7XPnrwLtX81SihtxZnrvLTre8aM9ykKWCXiLY19LXDuJZQdwbzSgX1ie2Q2ZRcz\nRbxm20mgybQ0Jmmw1tY58d5GH5Y/A9NE+D0scobljMH5q/uHeg2bDx1piSw1lsx1\nzuoFe7sNa+zDFiYxXlyOhqDxenNRv4oDupGRefTaoJofGBDre5H2nDeWC2ZzYFEB\nDktFAP1w3ruycnE/t+/H8rDVJGPTHc8=\n-----END PRIVATE KEY-----\n",
    "WS_ASSERTION_TIMEOUT": 5000,
    "accept": "application/vnd.interoperability.parties+json;version=1.0",
    "acceptParticipants": "application/vnd.interoperability.participants+json;version=1.0",
    "acceptQuotes": "application/vnd.interoperability.quotes+json;version=1.0",
    "acceptTransfers": "application/vnd.interoperability.transfers+json;version=1.0",
    "accountId": "6",
    "amount": "100",
    "batchToIdValue1": "27713803066",
    "batchToIdValue2": "27713803067",
    "condition": "n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU",
    "contentTransfers": "application/vnd.interoperability.transfers+json;version=1.0",
    "contentType": "application/vnd.interoperability.parties+json;version=1.0",
    "contentTypeParticipants": "application/vnd.interoperability.participants+json;version=1.0",
    "contentTypeQuotes": "application/vnd.interoperability.quotes+json;version=1.0",
    "currency": "USD",
    "currency2": "TZS",
    "expectedAuthorizationsVersion": "1.0",
    "expectedParticipantsVersion": "1.0",
    "expectedPartiesVersion": "1.0",
    "expectedQuotesVersion": "1.0",
    "expectedTransactionRequestsVersion": "1.0",
    "expectedTransfersVersion": "1.0",
    "fromDOB": "1984-01-01",
    "fromFirstName": "Firstname-Test",
    "fromFspId": "testingtoolkitdfsp",
    "fromIdType": "MSISDN",
    "fromIdValue": "44123456789",
    "fromLastName": "Lastname-Test",
    "fromSubIdValue": "30",
    "fspiopSignature": "{\"signature\":\"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\\\",\\\"protectedHeader\\\":\\\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ\"}",
    "fundsInPrepareAmount": "",
    "fundsInPrepareTransferId": "",
    "homeTransactionId": "123ABC",
    "hubEmail": "some.email@gmail.com",
    "hub_operator": "NOT_APPLICABLE",
    "ilpPacket": "AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA",
    "invalidFulfillment": "_3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----",
    "invalidToIdType": "ACCOUNT_ID",
    "invalidToIdValue": "27713803099",
    "mobileSimPayeeFsp": "greenbankfsp",
    "mobileSimPayerFsp": "pinkbankfsp",
    "note": "test",
    "payeeIdType": "MSISDN",
    "payeeIdentifier": "17039811902",
    "payeefsp": "payeefsp",
    "payeefspEmail": "some.email@gmail.com",
    "payerIdType": "MSISDN",
    "payerIdentifier": "17039811901",
    "payerfsp": "testingtoolkitdfsp",
    "payerfspEmail": "some.email@gmail.com",
    "payerfspSettlementAccountBalanceAfterFundsIn": "",
    "payerfspSettlementAccountBalanceBeforeFundsIn": "",
    "payerfspSettlementAccountId": "",
    "receiverMSISDN": "27713803912",
    "testfsp1Email": "some.email@gmail.com",
    "testfsp1IdType": "MSISDN",
    "testfsp1Identifier": "17039811903",
    "testfsp1MSISDN": "17039811903",
    "testfsp2Email": "some.email@gmail.com",
    "testfsp2IdType": "MSISDN",
    "testfsp2Identifier": "17039811904",
    "testfsp2MSISDN": "17039811904",
    "toFspId": "payeefsp",
    "toIdType": "MSISDN",
    "toIdValue": "27713803912",
    "toIdValueDelete": "27713803913",
    "toSubIdValue": "30",
    "validCondition": "GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM",
    "validCondition2": "kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms",
    "validFulfillment": "UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA",
    "validIlpPacket2": "AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA"
  }
}'
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-frontend/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-testing-toolkit-frontend-config
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-frontend
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-frontend-12.2.0
data:
    API_BASE_URL: "http://testing-toolkit.local"
    AUTH_ENABLED: "FALSE"
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-ttk-test-setup-config-file-defaults
  labels:
    app.kubernetes.io/name: ml-ttk-test-setup
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-setup-12.2.0
data:
  cli-default-config.json: |
    {"logLevel":"2","mode":"outbound"}
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-ttk-test-setup-config-testcase-environment-file
  labels:
    app.kubernetes.io/name: ml-ttk-test-setup
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-setup-12.2.0
data:
  cli-testcase-environment.json: |
    {"inputValues":{"BASE_CENTRAL_LEDGER_ADMIN":"","CALLBACK_ENDPOINT_BASE_URL":"http://RELEASE-NAME-ml-testing-toolkit-backend:5000","ENABLE_JWS_SIGNING":true,"ENABLE_JWS_VALIDATION":false,"ENABLE_PROTECTED_HEADERS_VALIDATION":true,"ENABLE_WS_ASSERTIONS":true,"HOST_ACCOUNT_LOOKUP_ADMIN":"http://RELEASE-NAME-account-lookup-service-admin","HOST_ACCOUNT_LOOKUP_SERVICE":"http://RELEASE-NAME-account-lookup-service","HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN":"http://RELEASE-NAME-account-lookup-service-admin","HOST_BULK_ADAPTER":"http://RELEASE-NAME-bulk-api-adapter-service","HOST_CENTRAL_LEDGER":"http://RELEASE-NAME-centralledger-service","HOST_CENTRAL_SETTLEMENT":"http://RELEASE-NAME-centralsettlement-service/v2","HOST_LEGACY_SIMULATOR":"http://RELEASE-NAME-simulator","HOST_ML_API_ADAPTER":"http://RELEASE-NAME-ml-api-adapter-service","HOST_QUOTING_SERVICE":"http://RELEASE-NAME-quoting-service","HOST_SIMULATOR":"http://RELEASE-NAME-simulator","HOST_TRANSACTION_REQUESTS_SERVICE":"http://RELEASE-NAME-transaction-requests-service","HUB_OPERATOR_BEARER_TOKEN":"NOT_APPLICABLE","NORESPONSE_SIMPAYEE_NAME":"noresponsepayeefsp","ON_US_TRANSFERS_ENABLED":false,"PAYEEFSP_BACKEND_TESTAPI_URL":"http://RELEASE-NAME-sim-payeefsp-backend:3003","PAYEEFSP_CALLBACK_URL":"http://RELEASE-NAME-sim-payeefsp-scheme-adapter:4000","PAYEEFSP_SDK_TESTAPI_URL":"http://RELEASE-NAME-sim-payeefsp-scheme-adapter:4002","PAYEEFSP_SDK_TESTAPI_WS_URL":"ws://RELEASE-NAME-sim-payeefsp-scheme-adapter:4002","PAYERFSP_BACKEND_TESTAPI_URL":"http://RELEASE-NAME-sim-payerfsp-backend:3003","PAYERFSP_CALLBACK_URL":"http://RELEASE-NAME-sim-payerfsp-scheme-adapter:4000","PAYERFSP_SDK_TESTAPI_URL":"http://RELEASE-NAME-sim-payerfsp-scheme-adapter:4002","PAYERFSP_SDK_TESTAPI_WS_URL":"ws://RELEASE-NAME-sim-payerfsp-scheme-adapter:4002","SIM1_JWS_KEY":"-----BEGIN PRIVATE KEY-----\n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\nDgoQeSng2kt5Z6mkoDIQTs7nEflb4w==\n-----END PRIVATE KEY-----\n","SIM1_MSISDN":"17039811903","SIM1_NAME":"testfsp1","SIM2_JWS_KEY":"-----BEGIN PRIVATE KEY-----\n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\nTv4G862WYeqD1fdyZaKQ3b9fAQEq1g==\n-----END PRIVATE KEY-----\n","SIM2_MSISDN":"17039811904","SIM2_NAME":"testfsp2","SIMPAYEE_CURRENCY":"USD","SIMPAYEE_JWS_PRIVATE_KEY":"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT\n7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL\nnoSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi\n120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI\nIoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y\neW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB\nT/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z\nSikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq\nm+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2\nHfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I\nWylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0\ndQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY\nJuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB\nBKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4\nSfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj\nsuHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd\n7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm\nfW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH\ntl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/\nn3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+\nCPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K\nFfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct\n0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ\nsHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa\nuutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW\nuu1pxuWD0gTJxFkp6u4YIAhw\n-----END PRIVATE KEY-----\n","SIMPAYEE_JWS_PUB_KEY":"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE\nsgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw\nIpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW\nNgf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj\nvVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ\nLmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3\nFwIDAQAB\n-----END PUBLIC KEY-----\n","SIMPAYEE_MSISDN":"17039811902","SIMPAYEE_NAME":"payeefsp","SIMPAYER_CURRENCY":"USD","SIMPAYER_JWS_PRIVATE_KEY":"-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6\njM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E\nvCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I\neoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7\nkx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC\nQWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/\nsAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt\nA7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj\na4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X\nKaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii\nyWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n\nxOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR\nRbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B\ndXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ\nuomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht\nvJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS\ngGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium\nsgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW\n6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR\n8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/\nkmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI\niuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX\n7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa\n+fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4\nzXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF\niNK0yCENMhSoOTtbT9tmGi0=\n-----END PRIVATE KEY-----\n","SIMPAYER_MSISDN":"17039811901","SIMPAYER_NAME":"payerfsp","SIMPLE_ROUTING_MODE_ENABLED":true,"TESTFSP1_BACKEND_TESTAPI_URL":"http://RELEASE-NAME-sim-testfsp1-backend:3003","TESTFSP1_CALLBACK_URL":"http://RELEASE-NAME-sim-testfsp1-scheme-adapter:4000","TESTFSP1_JWS_PUB_KEY":"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v\ndCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG\n42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6\nNRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa\nh9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os\nxQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by\nUQIDAQAB\n-----END PUBLIC KEY-----\n","TESTFSP1_SDK_TESTAPI_URL":"http://RELEASE-NAME-sim-testfsp1-scheme-adapter:4002","TESTFSP1_SDK_TESTAPI_WS_URL":"ws://RELEASE-NAME-sim-testfsp1-scheme-adapter:4002","TESTFSP2_BACKEND_TESTAPI_URL":"http://RELEASE-NAME-sim-testfsp2-backend:3003","TESTFSP2_CALLBACK_URL":"http://RELEASE-NAME-sim-testfsp2-scheme-adapter:4000","TESTFSP2_JWS_PUB_KEY":"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y\nl5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5\n+ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG\nYedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H\nJa+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6\nWZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+\nAQIDAQAB\n-----END PUBLIC KEY-----","TESTFSP2_SDK_TESTAPI_URL":"http://RELEASE-NAME-sim-testfsp2-scheme-adapter:4002","TESTFSP2_SDK_TESTAPI_WS_URL":"ws://RELEASE-NAME-sim-testfsp2-scheme-adapter:4002","TEST_NOTIFICATIONS":true,"TTKFSP_JWS_KEY":"-----BEGIN PRIVATE KEY-----\n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\nDktFAP1w3ruycnE/t+/H8rDVJGPTHc8=\n-----END PRIVATE KEY-----\n","WS_ASSERTION_TIMEOUT":5000,"accept":"application/vnd.interoperability.parties+json;version=1.0","acceptParticipants":"application/vnd.interoperability.participants+json;version=1.0","acceptQuotes":"application/vnd.interoperability.quotes+json;version=1.0","acceptTransfers":"application/vnd.interoperability.transfers+json;version=1.0","accountId":"6","amount":"100","batchToIdValue1":"27713803066","batchToIdValue2":"27713803067","condition":"n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU","contentTransfers":"application/vnd.interoperability.transfers+json;version=1.0","contentType":"application/vnd.interoperability.parties+json;version=1.0","contentTypeParticipants":"application/vnd.interoperability.participants+json;version=1.0","contentTypeQuotes":"application/vnd.interoperability.quotes+json;version=1.0","currency":"USD","currency2":"TZS","expectedAuthorizationsVersion":"1.0","expectedParticipantsVersion":"1.0","expectedPartiesVersion":"1.0","expectedQuotesVersion":"1.0","expectedTransactionRequestsVersion":"1.0","expectedTransfersVersion":"1.0","fromDOB":"1984-01-01","fromFirstName":"Firstname-Test","fromFspId":"testingtoolkitdfsp","fromIdType":"MSISDN","fromIdValue":"44123456789","fromLastName":"Lastname-Test","fromSubIdValue":"30","fspiopSignature":"{\"signature\":\"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\\\",\\\"protectedHeader\\\":\\\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ\"}","fundsInPrepareAmount":"","fundsInPrepareTransferId":"","homeTransactionId":"123ABC","hubEmail":"some.email@gmail.com","hub_operator":"NOT_APPLICABLE","ilpPacket":"AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA","invalidFulfillment":"_3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----","invalidToIdType":"ACCOUNT_ID","invalidToIdValue":"27713803099","mobileSimPayeeFsp":"greenbankfsp","mobileSimPayerFsp":"pinkbankfsp","note":"test","payeeIdType":"MSISDN","payeeIdentifier":"17039811902","payeefsp":"payeefsp","payeefspEmail":"some.email@gmail.com","payerIdType":"MSISDN","payerIdentifier":"17039811901","payerfsp":"testingtoolkitdfsp","payerfspEmail":"some.email@gmail.com","payerfspSettlementAccountBalanceAfterFundsIn":"","payerfspSettlementAccountBalanceBeforeFundsIn":"","payerfspSettlementAccountId":"","receiverMSISDN":"27713803912","testfsp1Email":"some.email@gmail.com","testfsp1IdType":"MSISDN","testfsp1Identifier":"17039811903","testfsp1MSISDN":"17039811903","testfsp2Email":"some.email@gmail.com","testfsp2IdType":"MSISDN","testfsp2Identifier":"17039811904","testfsp2MSISDN":"17039811904","toFspId":"payeefsp","toIdType":"MSISDN","toIdValue":"27713803912","toIdValueDelete":"27713803913","toSubIdValue":"30","validCondition":"GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM","validCondition2":"kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms","validFulfillment":"UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA","validIlpPacket2":"AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA"}}
---
# Source: mojaloop/charts/ml-ttk-test-validation/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-ttk-test-validation-config-file-defaults
  labels:
    app.kubernetes.io/name: ml-ttk-test-validation
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-validation-12.2.0
data:
  cli-default-config.json: |
    {"logLevel":"2","mode":"outbound"}
---
# Source: mojaloop/charts/ml-ttk-test-validation/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-ml-ttk-test-validation-config-testcase-environment-file
  labels:
    app.kubernetes.io/name: ml-ttk-test-validation
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-validation-12.2.0
data:
  cli-testcase-environment.json: |
    {"inputValues":{"BASE_CENTRAL_LEDGER_ADMIN":"","CALLBACK_ENDPOINT_BASE_URL":"http://RELEASE-NAME-ml-testing-toolkit-backend:5000","ENABLE_JWS_SIGNING":true,"ENABLE_JWS_VALIDATION":false,"ENABLE_PROTECTED_HEADERS_VALIDATION":true,"ENABLE_WS_ASSERTIONS":true,"HOST_ACCOUNT_LOOKUP_ADMIN":"http://RELEASE-NAME-account-lookup-service-admin","HOST_ACCOUNT_LOOKUP_SERVICE":"http://RELEASE-NAME-account-lookup-service","HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN":"http://RELEASE-NAME-account-lookup-service-admin","HOST_BULK_ADAPTER":"http://RELEASE-NAME-bulk-api-adapter-service","HOST_CENTRAL_LEDGER":"http://RELEASE-NAME-centralledger-service","HOST_CENTRAL_SETTLEMENT":"http://RELEASE-NAME-centralsettlement-service/v2","HOST_LEGACY_SIMULATOR":"http://RELEASE-NAME-simulator","HOST_ML_API_ADAPTER":"http://RELEASE-NAME-ml-api-adapter-service","HOST_QUOTING_SERVICE":"http://RELEASE-NAME-quoting-service","HOST_SIMULATOR":"http://RELEASE-NAME-simulator","HOST_TRANSACTION_REQUESTS_SERVICE":"http://RELEASE-NAME-transaction-requests-service","HUB_OPERATOR_BEARER_TOKEN":"NOT_APPLICABLE","NORESPONSE_SIMPAYEE_NAME":"noresponsepayeefsp","ON_US_TRANSFERS_ENABLED":false,"PAYEEFSP_BACKEND_TESTAPI_URL":"http://RELEASE-NAME-sim-payeefsp-backend:3003","PAYEEFSP_CALLBACK_URL":"http://RELEASE-NAME-sim-payeefsp-scheme-adapter:4000","PAYEEFSP_SDK_TESTAPI_URL":"http://RELEASE-NAME-sim-payeefsp-scheme-adapter:4002","PAYEEFSP_SDK_TESTAPI_WS_URL":"ws://RELEASE-NAME-sim-payeefsp-scheme-adapter:4002","PAYERFSP_BACKEND_TESTAPI_URL":"http://RELEASE-NAME-sim-payerfsp-backend:3003","PAYERFSP_CALLBACK_URL":"http://RELEASE-NAME-sim-payerfsp-scheme-adapter:4000","PAYERFSP_SDK_TESTAPI_URL":"http://RELEASE-NAME-sim-payerfsp-scheme-adapter:4002","PAYERFSP_SDK_TESTAPI_WS_URL":"ws://RELEASE-NAME-sim-payerfsp-scheme-adapter:4002","SIM1_JWS_KEY":"-----BEGIN PRIVATE KEY-----\n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\nDgoQeSng2kt5Z6mkoDIQTs7nEflb4w==\n-----END PRIVATE KEY-----\n","SIM1_MSISDN":"17039811903","SIM1_NAME":"testfsp1","SIM2_JWS_KEY":"-----BEGIN PRIVATE KEY-----\n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\nTv4G862WYeqD1fdyZaKQ3b9fAQEq1g==\n-----END PRIVATE KEY-----\n","SIM2_MSISDN":"17039811904","SIM2_NAME":"testfsp2","SIMPAYEE_CURRENCY":"USD","SIMPAYEE_JWS_PRIVATE_KEY":"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT\n7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL\nnoSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi\n120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI\nIoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y\neW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB\nT/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z\nSikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq\nm+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2\nHfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I\nWylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0\ndQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY\nJuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB\nBKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4\nSfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj\nsuHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd\n7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm\nfW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH\ntl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/\nn3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+\nCPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K\nFfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct\n0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ\nsHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa\nuutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW\nuu1pxuWD0gTJxFkp6u4YIAhw\n-----END PRIVATE KEY-----\n","SIMPAYEE_JWS_PUB_KEY":"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE\nsgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw\nIpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW\nNgf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj\nvVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ\nLmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3\nFwIDAQAB\n-----END PUBLIC KEY-----\n","SIMPAYEE_MSISDN":"17039811902","SIMPAYEE_NAME":"payeefsp","SIMPAYER_CURRENCY":"USD","SIMPAYER_JWS_PRIVATE_KEY":"-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6\njM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E\nvCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I\neoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7\nkx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC\nQWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/\nsAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt\nA7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj\na4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X\nKaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii\nyWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n\nxOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR\nRbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B\ndXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ\nuomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht\nvJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS\ngGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium\nsgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW\n6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR\n8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/\nkmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI\niuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX\n7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa\n+fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4\nzXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF\niNK0yCENMhSoOTtbT9tmGi0=\n-----END PRIVATE KEY-----\n","SIMPAYER_MSISDN":"17039811901","SIMPAYER_NAME":"payerfsp","SIMPLE_ROUTING_MODE_ENABLED":true,"TESTFSP1_BACKEND_TESTAPI_URL":"http://RELEASE-NAME-sim-testfsp1-backend:3003","TESTFSP1_CALLBACK_URL":"http://RELEASE-NAME-sim-testfsp1-scheme-adapter:4000","TESTFSP1_JWS_PUB_KEY":"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v\ndCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG\n42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6\nNRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa\nh9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os\nxQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by\nUQIDAQAB\n-----END PUBLIC KEY-----\n","TESTFSP1_SDK_TESTAPI_URL":"http://RELEASE-NAME-sim-testfsp1-scheme-adapter:4002","TESTFSP1_SDK_TESTAPI_WS_URL":"ws://RELEASE-NAME-sim-testfsp1-scheme-adapter:4002","TESTFSP2_BACKEND_TESTAPI_URL":"http://RELEASE-NAME-sim-testfsp2-backend:3003","TESTFSP2_CALLBACK_URL":"http://RELEASE-NAME-sim-testfsp2-scheme-adapter:4000","TESTFSP2_JWS_PUB_KEY":"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y\nl5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5\n+ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG\nYedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H\nJa+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6\nWZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+\nAQIDAQAB\n-----END PUBLIC KEY-----","TESTFSP2_SDK_TESTAPI_URL":"http://RELEASE-NAME-sim-testfsp2-scheme-adapter:4002","TESTFSP2_SDK_TESTAPI_WS_URL":"ws://RELEASE-NAME-sim-testfsp2-scheme-adapter:4002","TEST_NOTIFICATIONS":true,"TTKFSP_JWS_KEY":"-----BEGIN PRIVATE KEY-----\nMIIJQwIBADANBgkqhkiG9w0BAQEFAASCCS0wggkpAgEAAoICAQDPnscTEMZGXrO7\nH7nna4qgQPfODs2aV6A39ww4B2T2qeEncKk0xGTPUYAmjDO3TL4sG7Xl1Jiye9XL\nMaJxrMB4rh6Ndik8t+GiXIBOjeLVeg/uCBddTZfB/4yHpyfETbDM5QqQLsiWLyz9\nn6/O/bH8sgaygLMaTpYazaoI522bTTGBtgXf6nGNcjgypMPanbvFmE5lOls2Adjq\nQDbmC8FgnubSD5R//EULNSRnt+dxyExb7+vDcVqC0npxSxgBGHnkRIlbU6AszBpK\n2tMVGV84Qw8ibr1NSD/5n1fg/jfZfICVOcJRgw11v4+OAT3YqL7kKCUo2ChyYVWp\nH1aJ+luGs4N2KcgMsmEnA8eZmFMgXk2jJktt/kSXcJjzVg/0CAjK2c/oaPufVg+y\nKLRdBkS8FR3deCPH2xRl41f5NSB7/C2kCMcep8EZSlhJ6ZeS3A09HSJPNaA4//hN\n0o+DpqUQ2v9rwUH5OJ1YDk6xSFNDSmx/I2UEi/7JXZ5+zd0npfu5kZUQY00X7QrA\nhoxLc9zzJbYy3eSHaDsgJ4tRm68a2PpxbmwfvTF51iQwU2F30pE9Xuapbk6Hhwtk\naQwlWohv+ZnNaJp6hsDFe+ELixdXlwi7UMvowXoD4+7AcfBe2QXLllYsZYYLaMj1\nYrKpNfThQoOYNo7UByPJOKLL9Err8QIDAQABAoICAFX3AKeAwQ//Az0eCEvtR8NN\n0y0DDRd0Y7b4eBs02JWXRk4dxDnAfZsnvD95uqoRQQajXJ/ydF0mkCGnhgK6TCFL\nuwPIoo9s9aRT155u+jZ46WKeAAqWZ5kgVhAO4pTRtDxKM6L6c/xXQTIsbc9vVMRz\n8/jx9/aTBmzHrjkslcIBZte1xd3uRSETY3h4p018FPTeOMuKK50Di8yGVRTQVjvK\n33inkc2iZvYahV3alB6VGCTTBNPyOc9EFgWV2bUObN3akOL7D62svtAypcatMDNr\n9LbFkmUO3spdMzZKHFbVSao/9Zjpgee4rthV5EUyrYNrqeMtCSY+7ghuHNdZjY5M\nE9IntIqtZTHnTXJuHR5aZhQUuRBBO8ymhzSRYLPCWTrIb2FdRVj2u2h8YOhVgo13\n3/b55Q1vJxWbUdqgxn087PvvNoznIqTphsKGivyPZ45scnwVMhVd8Pgm6V0nuoCV\nYj32CSXFFTavZTP6c7CN3jzjSXyHlJrC4vhVD30tqV9iDeZtYE3AGuP3E3xGE7oU\nvqBzkUOk5gnYxbKpFA2kW8uY0XWmbrWR3sz+1Xw7IrQuyqMFvjnhRdpJaodkAlDa\nroefxFliyek4/SRyPcWiM0yaP6Mz6ssGg018b/fM+HemE/wtd3I6qDS9PZl3LBdv\n9aLz9XTh948/kIASRjLHAoIBAQDpqwuM1UlcQTuUmuoF0hADmBzi8eIR2JcnVVdE\nUHfu8jJ3LMzNNf5VAcjbBwTb3/gdVhD71dm9GdGGmX4bLBogGqRuEYZtDKOoHu0w\nRKUGSATob2qkLC6bI+Xg1q6XMTNxrBqqjTMCbHKuvwuwF8qTYTuP4GTaDEBpOdme\nVfWoLu9JAbQz/9NxUYqmj2FckA/v1LQ9apBu+Cnwk9/U/Yi/kGz8EuX8apfgou1b\n6fi0m/TkkbXuVEKP9CwUuWcX5TGQ5LFSqfK40eIT5AIKPhTWAwZV1iRhNh2J9kNH\ngC2yOqFswSRVJ6KsYMs7pMv2g2cwjBP8M1BudKRIxkFJbcmLAoIBAQDjdnDVq09b\nxHsv29evhx70GDl+oyNEkbhKjGqr4V7yL8wcchSdyfT8bZhSo/cBE/BRhfgBreLo\nTGUHBDWEySGfmWwMQQjorLawnAiJGerm7N497R67jmdZIgd7NwcA+XQ7N784Xbox\n9IngEvAt8hyUqJXQOSNnigLOWQoJSdyYzpsXBSjXcu/TsgozLu+FD9Gii8T+hyuo\nNhAgmj/9Vr8GhKVIkaWRPouTGA2pm2b6iJgaHWLICbUK8VFdc9XTkBuhTc7IyGHP\n1gd87cOM4AkgNp6+XMAmJqePRnBAvbDxNIdaNr/Bp2YxRw+uTa8qCpi3bAsG1qjJ\nWJHlNT/jz3fzAoIBAQDYu3jMGOyhcDQGIyYbXfrSip2Idlh8uwuARSzbRVPowqbC\nWUBgusr7J9uYJEuCcZveAf1gyLrcJf1sviP0qhRVYMDRAtpPfWCyyHSxx4nVaKl8\nuhMM0Zos9b/7qsRnohAYSEy3kp4UimhY4wTBQV/5ET/AtJ52jNSVhT3vGcXwSBBU\nBAuUC56gRcS3ttfUlh7iEcVYDeaHtxCXf2EmWj8jh58+s3y0gl360sQb88lmJB2i\nf/Biba8LfKwCUPFpfYFa5nP+u3lRqgLq9hpaS7jhxA51QVme/SWq2EsRH7fCz5T4\nnbDIdynwfxsiaDlynfDxW4wR6bqZqQDUK2dU50r/AoIBAQCvNsY2IS8RPmmx9QPR\nByG1348yWJJLOICglEd7PTC5GE5/PvVYkoAvjnB+gCU95FEDS1I+YObgEDDmVbyw\nG4rV+QW87r/hE2Hq61a73YYP+jg7tZMt4MUFaOwgYsP3YTDCiO+4iKJr5rXqMExo\n6A5SCQbWDZ2THUGKGBZeD1JpNwVKl0PdqoDJLmUjBi2k7wmJz2agthjQC00jAA74\npECj0bvMCb1jA63aUfX8R2Ps6xlXTHmSI8AcvMTzWs5EmMZf26LFEW4e/fxopHI0\n60K8WLaxZprxCGecOyMvC6/oLZFx0aimkL9siBOxLdAXb3AyInzf+Kyt5JcF253q\nax83AoIBAGSoxz91Oc+NPP3NNYlPuhXErqC+R/EEO6Z6ZalKsJtfgL1Ss6Fq30ot\niKhEfFYm1gmZDTrMbI6dceGkNg4l8okXz9U6lfUQH0muk8ZRl8LaSm7cQwzcAI1S\nm7XPnrwLtX81SihtxZnrvLTre8aM9ykKWCXiLY19LXDuJZQdwbzSgX1ie2Q2ZRcz\nRbxm20mgybQ0Jmmw1tY58d5GH5Y/A9NE+D0scobljMH5q/uHeg2bDx1piSw1lsx1\nzuoFe7sNa+zDFiYxXlyOhqDxenNRv4oDupGRefTaoJofGBDre5H2nDeWC2ZzYFEB\nDktFAP1w3ruycnE/t+/H8rDVJGPTHc8=\n-----END PRIVATE KEY-----\n","WS_ASSERTION_TIMEOUT":5000,"accept":"application/vnd.interoperability.parties+json;version=1.0","acceptParticipants":"application/vnd.interoperability.participants+json;version=1.0","acceptQuotes":"application/vnd.interoperability.quotes+json;version=1.0","acceptTransfers":"application/vnd.interoperability.transfers+json;version=1.0","accountId":"6","amount":"100","batchToIdValue1":"27713803066","batchToIdValue2":"27713803067","condition":"n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU","contentTransfers":"application/vnd.interoperability.transfers+json;version=1.0","contentType":"application/vnd.interoperability.parties+json;version=1.0","contentTypeParticipants":"application/vnd.interoperability.participants+json;version=1.0","contentTypeQuotes":"application/vnd.interoperability.quotes+json;version=1.0","currency":"USD","currency2":"TZS","expectedAuthorizationsVersion":"1.0","expectedParticipantsVersion":"1.0","expectedPartiesVersion":"1.0","expectedQuotesVersion":"1.0","expectedTransactionRequestsVersion":"1.0","expectedTransfersVersion":"1.0","fromDOB":"1984-01-01","fromFirstName":"Firstname-Test","fromFspId":"testingtoolkitdfsp","fromIdType":"MSISDN","fromIdValue":"44123456789","fromLastName":"Lastname-Test","fromSubIdValue":"30","fspiopSignature":"{\"signature\":\"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\\\",\\\"protectedHeader\\\":\\\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ\"}","fundsInPrepareAmount":"","fundsInPrepareTransferId":"","homeTransactionId":"123ABC","hubEmail":"some.email@gmail.com","hub_operator":"NOT_APPLICABLE","ilpPacket":"AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA","invalidFulfillment":"_3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----","invalidToIdType":"ACCOUNT_ID","invalidToIdValue":"27713803099","mobileSimPayeeFsp":"greenbankfsp","mobileSimPayerFsp":"pinkbankfsp","note":"test","payeeIdType":"MSISDN","payeeIdentifier":"17039811902","payeefsp":"payeefsp","payeefspEmail":"some.email@gmail.com","payerIdType":"MSISDN","payerIdentifier":"17039811901","payerfsp":"testingtoolkitdfsp","payerfspEmail":"some.email@gmail.com","payerfspSettlementAccountBalanceAfterFundsIn":"","payerfspSettlementAccountBalanceBeforeFundsIn":"","payerfspSettlementAccountId":"","receiverMSISDN":"27713803912","testfsp1Email":"some.email@gmail.com","testfsp1IdType":"MSISDN","testfsp1Identifier":"17039811903","testfsp1MSISDN":"17039811903","testfsp2Email":"some.email@gmail.com","testfsp2IdType":"MSISDN","testfsp2Identifier":"17039811904","testfsp2MSISDN":"17039811904","toFspId":"payeefsp","toIdType":"MSISDN","toIdValue":"27713803912","toIdValueDelete":"27713803913","toSubIdValue":"30","validCondition":"GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM","validCondition2":"kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms","validFulfillment":"UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA","validIlpPacket2":"AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA"}}
---
# Source: mojaloop/charts/quoting-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-quoting-service-config
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-12.0.0
data:
  default.json: "\n{\n  \"HOSTNAME\": \"http://quoting-service.local\",\n  \"LISTEN_ADDRESS\": \"0.0.0.0\",\n  \"PORT\": 3002,\n  \"SWITCH_ENDPOINT\": \"http://RELEASE-NAME-centralledger-service:80\",\n  \"AMOUNT\": {\n    \"PRECISION\": 18,\n    \"SCALE\": 4\n  },\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-cl\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"password\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"SIMPLE_ROUTING_MODE\": true,\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": true,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  },\n  \"API_DOCUMENTATION_ENDPOINTS\": true\n}\n"
  rules.json: "[]"
---
# Source: mojaloop/charts/quoting-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-quoting-service-sidecar
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-12.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"quoting-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/simulator/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-simulator-config
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.2
data:
  LOG_LEVEL: "info"
  PARTIES_ENDPOINT: http://RELEASE-NAME-account-lookup-service
  QUOTES_ENDPOINT: http://RELEASE-NAME-quoting-service
  TRANSFERS_ENDPOINT: http://RELEASE-NAME-ml-api-adapter-service
  BULK_TRANSFERS_ENDPOINT: http://RELEASE-NAME-bulk-api-adapter-service
  TRANSACTION_REQUESTS_ENDPOINT: http://RELEASE-NAME-transaction-requests-service
  TRANSFERS_FULFIL_RESPONSE_DISABLED: "false"
  TRANSFERS_FULFILMENT: "XoSz1cL0tljJSCp_VtIYmPNw-zFUgGfbUqf69AagUzY"
  TRANSFERS_CONDITION: "HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks"
  TRANSFERS_ILPPACKET: "AQAAAAAAAADIEHByaXZhdGUucGF5ZWVmc3CCAiB7InRyYW5zYWN0aW9uSWQiOiIyZGY3NzRlMi1mMWRiLTRmZjctYTQ5NS0yZGRkMzdhZjdjMmMiLCJxdW90ZUlkIjoiMDNhNjA1NTAtNmYyZi00NTU2LThlMDQtMDcwM2UzOWI4N2ZmIiwicGF5ZWUiOnsicGFydHlJZEluZm8iOnsicGFydHlJZFR5cGUiOiJNU0lTRE4iLCJwYXJ0eUlkZW50aWZpZXIiOiIyNzcxMzgwMzkxMyIsImZzcElkIjoicGF5ZWVmc3AifSwicGVyc29uYWxJbmZvIjp7ImNvbXBsZXhOYW1lIjp7fX19LCJwYXllciI6eyJwYXJ0eUlkSW5mbyI6eyJwYXJ0eUlkVHlwZSI6Ik1TSVNETiIsInBhcnR5SWRlbnRpZmllciI6IjI3NzEzODAzOTExIiwiZnNwSWQiOiJwYXllcmZzcCJ9LCJwZXJzb25hbEluZm8iOnsiY29tcGxleE5hbWUiOnt9fX0sImFtb3VudCI6eyJjdXJyZW5jeSI6IlVTRCIsImFtb3VudCI6IjIwMCJ9LCJ0cmFuc2FjdGlvblR5cGUiOnsic2NlbmFyaW8iOiJERVBPU0lUIiwic3ViU2NlbmFyaW8iOiJERVBPU0lUIiwiaW5pdGlhdG9yIjoiUEFZRVIiLCJpbml0aWF0b3JUeXBlIjoiQ09OU1VNRVIiLCJyZWZ1bmRJbmZvIjp7fX19"
  MOCK_JWS_SIGNATURE: "abcJjvNrkyK2KBieDUbGfhaBUn75aDUATNF4joqA8OLs4QgSD7i6EO8BIdy6Crph3LnXnTM20Ai1Z6nt0zliS_qPPLU9_vi6qLb15FOkl64DQs9hnfoGeo2tcjZJ88gm19uLY_s27AJqC1GH1B8E2emLrwQMDMikwQcYvXoyLrL7LL3CjaLMKdzR7KTcQi1tCK4sNg0noIQLpV3eA61kess"
  METRICS_DISABLED: "false"
  METRICS_PREFIX: "moja_"
  METRICS_TIMEOUT: "5000"
  METRICS_SERVICENAME: simulator
---
# Source: mojaloop/charts/transaction-requests-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-transaction-requests-service-config
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.2
data:
  default.json: "{\n  \"PORT\": 4000,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"SWITCH_ENDPOINT\": \"http://RELEASE-NAME-centralledger-service:80\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": true,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n        \"serviceName\": \"transaction-requests\"\n        }\n      }\n    }\n  }\n}"
---
# Source: mojaloop/charts/transaction-requests-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-transaction-requests-service-sidecar
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.2
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"transaction-requests-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"RELEASE-NAME-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-12.2.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-admin
      protocol: TCP
      name: http-admin
  selector:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-12.2.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-api
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/svc-standalone.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-cep-mongodb
  labels:
    app: cep-mongodb
    chart: mongodb-7.8.10
    release: "RELEASE-NAME"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
  selector:
    app: cep-mongodb
    release: "RELEASE-NAME"
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.2
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-12.1.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.1.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.1.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-12.1.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.1.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.1.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-12.1.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-zookeeper-headless
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: RELEASE-NAME
    heritage: Helm
spec:
  clusterIP: None
  ports:
    - name: client
      port: 2181
      targetPort: client
      protocol: TCP
    - name: election
      port: 3888
      targetPort: election
      protocol: TCP
    - name: server
      port: 2888
      targetPort: server
      protocol: TCP
  selector:
    app: zookeeper
    release: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: RELEASE-NAME
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: client
      port: 2181
      protocol: TCP
      targetPort: client
  selector:
    app: zookeeper
    release: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/service-brokers.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-kafka
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: RELEASE-NAME
spec:
  ports:
  - name: broker
    port: 9092
    targetPort: kafka
  selector:
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-kafka-headless
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: RELEASE-NAME
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - name: broker
    port: 9092
  clusterIP: None
  selector:
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralsettlement-handler-deferredsettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralsettlement-handler-grosssettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralsettlement-handler-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/finance-portal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.2
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: backend
      protocol: TCP
      name: http-finance-portal-backend
    - port: 80
      targetPort: frontend
      protocol: TCP
      name: http-finance-portal-ui
  selector:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.2
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: 
  selector:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.2
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: 
  selector:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-backend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-ml-testing-toolkit-backend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-backend-12.2.0
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 5000
      name: spec-api
    - port: 5050
      targetPort: 5050
      name: admin-api
  selector:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-ml-testing-toolkit-frontend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-frontend
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-frontend-12.2.0
spec:
  type: ClusterIP
  ports:
    - port: 6060
      targetPort: 6060
      name: web-ui
  selector:
    app.kubernetes.io/name: ml-testing-toolkit-frontend
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/quoting-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3002
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.2
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: "http"
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/transaction-requests-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.2
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 4000
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-12.2.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: account-lookup-service-admin
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: account-lookup-service-admin
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.2.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: account-lookup-service-admin-12.2.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until mysql -h mysql-als -P 3306 -u account_lookup --password=password  account_lookup   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
        - name: run-migration
          image: mojaloop/account-lookup-service:v11.7.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - npm run migrate
          volumeMounts:
            - name: RELEASE-NAME-account-lookup-service-admin-config-volume
              mountPath: /opt/account-lookup-service/config
      containers:
        - name: account-lookup-service-admin
          image: mojaloop/account-lookup-service:v11.7.0
          imagePullPolicy: IfNotPresent
          command: ["node", "src/index.js", "server", "--admin"]
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          ports:
            - name: http-admin
              containerPort: 4001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http-admin
          readinessProbe:
            httpGet:
              path: /health
              port: http-admin
          resources:
            {}
          volumeMounts:
          - name: RELEASE-NAME-account-lookup-service-admin-config-volume
            mountPath: /opt/account-lookup-service/config
        - name: account-lookup-service-admin-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4003
          readinessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-account-lookup-service-admin-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-account-lookup-service-admin-config-volume
          configMap:
            name: RELEASE-NAME-account-lookup-service-admin-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: RELEASE-NAME-account-lookup-service-admin-sidecar-volume
          configMap:
            name: RELEASE-NAME-account-lookup-service-admin-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-12.2.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: account-lookup-service
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: account-lookup-service
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.2.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: account-lookup-service-12.2.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until mysql -h mysql-als -P 3306 -u account_lookup --password=password  account_lookup   -e 'select * from oracleEndpoint;' ; do echo waiting for MySQL; sleep 2; done;"
      containers:
        - name: account-lookup-service
          image: "mojaloop/account-lookup-service:v11.7.0"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/index.js", "server", "--api"]
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          ports:
            - name: http-api
              containerPort: 4002
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http-api
          readinessProbe:
            httpGet:
              path: /health
              port: http-api
          resources:
            {}
          volumeMounts:
          - name: RELEASE-NAME-account-lookup-service-config-volume
            mountPath: /opt/account-lookup-service/config
          - name: jws-signing-key
            mountPath: /opt/account-lookup-service/secrets
        - name: account-lookup-service-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4003
          readinessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-account-lookup-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-account-lookup-service-config-volume
          configMap:
            name: RELEASE-NAME-account-lookup-service-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: jws-signing-key
          secret:
            secretName: RELEASE-NAME-account-lookup-service-jws-signing-key
        - name: RELEASE-NAME-account-lookup-service-sidecar-volume
          configMap:
            name: RELEASE-NAME-account-lookup-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/deployment-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-cep-mongodb
  labels:
    app: cep-mongodb
    chart: mongodb-7.8.10
    release: "RELEASE-NAME"
    heritage: "Helm"
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: cep-mongodb
      release: "RELEASE-NAME"
  template:
    metadata:
      labels:
        app: cep-mongodb
        release: "RELEASE-NAME"
        chart: mongodb-7.8.10
    spec:
      securityContext:
        fsGroup: 1001      
      initContainers:
      containers:
      - name: RELEASE-NAME-cep-mongodb
        image: docker.io/bitnami/mongodb:4.0.3
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-cep-mongodb
              key: mongodb-password
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: RELEASE-NAME-cep-mongodb
              key: mongodb-root-password
        - name: MONGODB_USERNAME
          value: "mojaloop"
        - name: MONGODB_SYSTEM_LOG_VERBOSITY
          value: "0"
        - name: MONGODB_DISABLE_SYSTEM_LOG
          value: "no"
        - name: MONGODB_DATABASE
          value: "mojaloop"
        - name: MONGODB_ENABLE_IPV6
          value: "yes"
        - name: MONGODB_ENABLE_DIRECTORY_PER_DB
          value: "no"
        ports:
        - name: mongodb
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
          subPath: 
        resources:
          {}
      volumes:
      - name: data
        emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centraleventprocessor
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centraleventprocessor
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 11.0.2
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centraleventprocessor-11.0.2
    spec:
      initContainers:
        - name: wait-for-mongodb
          image: bitnami/mongodb:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "mongo mongodb://RELEASE-NAME-cep-mongodb:27017 --eval \"db.adminCommand('ping')\""
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:

      containers:
        - name: centraleventprocessor
          image: "mojaloop/central-event-processor:v11.0.2"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 3080
            initialDelaySeconds: 30
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3080
            initialDelaySeconds: 30
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-centraleventprocessor-config-volume
              mountPath: /opt/central-event-processor/config
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
      volumes:
        - name: RELEASE-NAME-centraleventprocessor-config-volume
          configMap:
            name: RELEASE-NAME-centraleventprocessor-config
            items:
              - key: default.json
                path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-12.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-admin-transfer
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-admin-transfer
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.1.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-admin-transfer-12.1.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-admin-transfer
          image: "mojaloop/central-ledger:v13.12.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--admin"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: RELEASE-NAME-centralledger-handler-admin-transfer-config-volume
            mountPath: /opt/central-ledger/config
      volumes:
        - name: RELEASE-NAME-centralledger-handler-admin-transfer-config-volume
          configMap:
            name: RELEASE-NAME-centralledger-handler-admin-transfer-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-timeout
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-timeout
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.1.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-timeout-12.1.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-timeout
          image: "mojaloop/central-ledger:v13.12.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--timeout"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: RELEASE-NAME-centralledger-handler-timeout-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-timeout-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-centralledger-handler-timeout-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-centralledger-handler-timeout-config-volume
          configMap:
            name: RELEASE-NAME-centralledger-handler-timeout-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: RELEASE-NAME-centralledger-handler-timeout-sidecar-volume
          configMap:
            name: RELEASE-NAME-centralledger-handler-timeout-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-fulfil
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-fulfil
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.1.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-fulfil-12.1.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-fulfil
          image: "mojaloop/central-ledger:v13.12.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--fulfil"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: RELEASE-NAME-centralledger-handler-transfer-fulfil-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-transfer-fulfil-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-centralledger-handler-transfer-fulfil-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-centralledger-handler-transfer-fulfil-config-volume
          configMap:
            name: RELEASE-NAME-centralledger-handler-transfer-fulfil-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: RELEASE-NAME-centralledger-handler-transfer-fulfil-sidecar-volume
          configMap:
            name: RELEASE-NAME-centralledger-handler-transfer-fulfil-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-12.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-get
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-get
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.1.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-get-12.1.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-get
          image: "mojaloop/central-ledger:v13.12.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--get"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: RELEASE-NAME-centralledger-handler-transfer-get-config-volume
            mountPath: /opt/central-ledger/config
      volumes:
        - name: RELEASE-NAME-centralledger-handler-transfer-get-config-volume
          configMap:
            name: RELEASE-NAME-centralledger-handler-transfer-get-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-position
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-position
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.1.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-position-12.1.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-position
          image: "mojaloop/central-ledger:v13.12.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--position"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: RELEASE-NAME-centralledger-handler-transfer-position-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-transfer-position-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-centralledger-handler-transfer-position-sidecar-volum
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-centralledger-handler-transfer-position-config-volume
          configMap:
            name: RELEASE-NAME-centralledger-handler-transfer-position-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: RELEASE-NAME-centralledger-handler-transfer-position-sidecar-volum
          configMap:
            name: RELEASE-NAME-centralledger-handler-transfer-position-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-prepare
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-prepare
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.1.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-prepare-12.1.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-prepare
          image: "mojaloop/central-ledger:v13.12.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--prepare"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: RELEASE-NAME-centralledger-handler-transfer-prepare-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-transfer-prepare-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-centralledger-handler-transfer-prepare-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-centralledger-handler-transfer-prepare-config-volume
          configMap:
            name: RELEASE-NAME-centralledger-handler-transfer-prepare-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: RELEASE-NAME-centralledger-handler-transfer-prepare-sidecar-volume
          configMap:
            name: RELEASE-NAME-centralledger-handler-transfer-prepare-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-12.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-service
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-service
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.1.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-service-12.1.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
        - name: run-migration
          image: mojaloop/central-ledger:v13.12.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - npm run migrate
          env:
            - name: "CLEDG_MIGRATIONS__RUN_DATA_MIGRATIONS"
              value: "true"
          volumeMounts:
            - name: RELEASE-NAME-centralledger-service-config-volume
              mountPath: /opt/central-ledger/config
      containers:
        - name: centralledger-service
          image: mojaloop/central-ledger:v13.12.1
          imagePullPolicy: IfNotPresent
          command: ["node", "src/api/index.js"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: RELEASE-NAME-centralledger-service-config-volume
            mountPath: /opt/central-ledger/config
      volumes:
        - name: RELEASE-NAME-centralledger-service-config-volume
          configMap:
            name: RELEASE-NAME-centralledger-service-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/deployment-kafka-exporter.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-kafka-exporter
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-monitor
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: RELEASE-NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka-monitor
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9308"
      labels:
        helm.sh/chart: kafka-0.21.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: kafka-monitor
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      containers:
      - image: "danielqsj/kafka-exporter:v1.0.1"
        name: kafka-exporter
        args:
          - --kafka.server=RELEASE-NAME-kafka:9092
          - --web.listen-address=:9308
        ports:
          - containerPort: 9308
        resources:
          {}
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralsettlement-handler-deferredsettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-handler-deferredsettlement-13.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralsettlement-handler-deferredsettlement
          image: "mojaloop/central-settlement:v13.4.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "h", "--deferredSettlement"]
          ports:
            - name: http-api
              containerPort: 3007
          readinessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          env: 
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: 
          volumeMounts:
          - name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-cfg-vol
            mountPath: /opt/central-settlement/config
          - name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-rules-vol
            mountPath: "/opt/central-settlement/scripts/grosssettlementTemp"
        - name: centralsettlement-handler-deferredsettlement-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-sidecar-vol
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-cfg-vol
          configMap:
            name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-config
            items:
            - key: default.json
              path: default.json
    #            - key: knexfile.js
    #              path: knexfile.js
        - name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-sidecar-vol
          configMap:
            name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-sidecar
            items:
            - key: default.json
              path: default.json
        - name: RELEASE-NAME-centralsettlement-handler-deferredsettlement-rules-vol
          emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralsettlement-handler-grosssettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement-handler-grosssettlement
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement-handler-grosssettlement
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-handler-grosssettlement-13.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralsettlement-handler-grosssettlement
          image: "mojaloop/central-settlement:v13.4.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "h", "--grossSettlement"]
          ports:
            - name: http-api
              containerPort: 3007
          readinessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          env: 
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: 
          volumeMounts:
          - name: RELEASE-NAME-centralsettlement-handler-grosssettlement-cfg-vol
            mountPath: /opt/central-settlement/config
          - name: RELEASE-NAME-centralsettlement-handler-grosssettlement-rules-vol
            mountPath: "/opt/central-settlement/scripts/grosssettlementTemp"
        - name: centralsettlement-handler-grosssettlement-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-centralsettlement-handler-grosssettlement-sidecar-vol
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-centralsettlement-handler-grosssettlement-cfg-vol
          configMap:
            name: RELEASE-NAME-centralsettlement-handler-grosssettlement-config
            items:
            - key: default.json
              path: default.json
    #            - key: knexfile.js
    #              path: knexfile.js
        - name: RELEASE-NAME-centralsettlement-handler-grosssettlement-sidecar-vol
          configMap:
            name: RELEASE-NAME-centralsettlement-handler-grosssettlement-sidecar
            items:
            - key: default.json
              path: default.json
        - name: RELEASE-NAME-centralsettlement-handler-grosssettlement-rules-vol
          emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralsettlement-handler-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement-handler-rules
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement-handler-rules
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-handler-rules-13.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralsettlement-handler-rules
          image: "mojaloop/central-settlement:v13.4.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "h", "--rules"]
          ports:
            - name: http-api
              containerPort: 3007
          readinessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          env: 
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: 
          volumeMounts:
          - name: RELEASE-NAME-centralsettlement-handler-rules-cfg-vol
            mountPath: /opt/central-settlement/config
          - name: RELEASE-NAME-centralsettlement-handler-rules-rules-vol
            mountPath: "/opt/central-settlement/scripts/grosssettlementTemp"
        - name: centralsettlement-handler-rules-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-centralsettlement-handler-rules-sidecar-vol
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-centralsettlement-handler-rules-cfg-vol
          configMap:
            name: RELEASE-NAME-centralsettlement-handler-rules-config
            items:
            - key: default.json
              path: default.json
    #            - key: knexfile.js
    #              path: knexfile.js
        - name: RELEASE-NAME-centralsettlement-handler-rules-sidecar-vol
          configMap:
            name: RELEASE-NAME-centralsettlement-handler-rules-sidecar
            items:
            - key: default.json
              path: default.json
        - name: RELEASE-NAME-centralsettlement-handler-rules-rules-vol
          configMap:
            name: RELEASE-NAME-centralsettlement-handler-rules-rules
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement-service
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement-service
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-service-13.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralsettlement-service
          image: "mojaloop/central-settlement:v13.4.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/api/index.js"]
          ports:
            - name: http-api
              containerPort: 3007
          readinessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          env: 
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: 
          volumeMounts:
          - name: RELEASE-NAME-centralsettlement-service-cfg-vol
            mountPath: /opt/central-settlement/config
          - name: RELEASE-NAME-centralsettlement-service-rules-vol
            mountPath: "/opt/central-settlement/scripts/grosssettlementTemp"
        - name: centralsettlement-service-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-centralsettlement-service-sidecar-vol
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-centralsettlement-service-cfg-vol
          configMap:
            name: RELEASE-NAME-centralsettlement-service-config
            items:
            - key: default.json
              path: default.json
    #            - key: knexfile.js
    #              path: knexfile.js
        - name: RELEASE-NAME-centralsettlement-service-sidecar-vol
          configMap:
            name: RELEASE-NAME-centralsettlement-service-sidecar
            items:
            - key: default.json
              path: default.json
        - name: RELEASE-NAME-centralsettlement-service-rules-vol
          emptyDir: {}
---
# Source: mojaloop/charts/finance-portal/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.2
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: finance-portal
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: finance-portal
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      initContainers:
      containers:
      - name: backend
        image: "mojaloop/finance-portal-backend-service:v15.0.2"
        imagePullPolicy: IfNotPresent
        ports:
        - name: backend
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: backend
        readinessProbe:
          httpGet:
            path: /
            port: backend
        envFrom:
        - configMapRef:
            name: RELEASE-NAME-finance-portal
        - secretRef:
            name: RELEASE-NAME-finance-portal
        volumeMounts:
          - name: RELEASE-NAME-finance-portal-secrets-volume
            mountPath: /opt/finance-portal-backend-service/secrets
            readOnly: true
        resources:
      - name: frontend
        image: "mojaloop/finance-portal-ui:v10.4.3"
        imagePullPolicy: IfNotPresent
        ports:
        - name: frontend
          containerPort: 80
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: frontend
        readinessProbe:
          httpGet:
            path: /
            port: frontend
        envFrom:
        - configMapRef:
            name: RELEASE-NAME-finance-portal
        - secretRef:
            name: RELEASE-NAME-finance-portal
      ## Pod scheduling preferences.
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      affinity: {}

      ## Node labels for pod assignment
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
      nodeSelector: {}

      ## Set toleration for scheduler
      ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      tolerations: []
      volumes:
        - name: RELEASE-NAME-finance-portal-secrets-volume
          secret:
            secretName: RELEASE-NAME-finance-portal-certs
            defaultMode: 511
      imagePullSecrets:
      - name: pull-secrets
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-api-adapter-handler-notification
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-api-adapter-handler-notification
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 11.0.2
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-api-adapter-handler-notification-11.0.2
      annotations:
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: ml-api-adapter-handler-notification
          image: "mojaloop/ml-api-adapter:v11.1.6"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--notification"]
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-ml-api-adapter-handler-notification-config-volume
              mountPath: /opt/ml-api-adapter/config
            - name: jws-signing-key
              mountPath: /opt/ml-api-adapter/secrets
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
        - name: ml-api-adapter-handler-notification-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-ml-api-adapter-handler-notification-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: jws-signing-key
          secret:
            secretName: RELEASE-NAME-ml-api-adapter-handler-notification-jws-signing-key
        - name: RELEASE-NAME-ml-api-adapter-handler-notification-config-volume
          configMap:
            name: RELEASE-NAME-ml-api-adapter-handler-notification-config
            items:
              - key: default.json
                path: default.json
        - name: RELEASE-NAME-ml-api-adapter-handler-notification-sidecar-volume
          configMap:
            name: RELEASE-NAME-ml-api-adapter-handler-notification-sidecar
            items:
              - key: default.json
                path: default.json
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-api-adapter-service
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-api-adapter-service
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 11.0.2
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-api-adapter-service-11.0.2
      annotations:
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server RELEASE-NAME-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: ml-api-adapter-service
          image: "mojaloop/ml-api-adapter:v11.1.6"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/api/index.js"]
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-ml-api-adapter-service-config-volume
              mountPath: /opt/ml-api-adapter/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
        - name: ml-api-adapter-service-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-ml-api-adapter-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-ml-api-adapter-service-config-volume
          configMap:
            name: RELEASE-NAME-ml-api-adapter-service-config
            items:
            - key: default.json
              path: default.json
        - name: RELEASE-NAME-ml-api-adapter-service-sidecar-volume
          configMap:
            name: RELEASE-NAME-ml-api-adapter-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-frontend/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-ml-testing-toolkit-frontend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-frontend
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-frontend-12.2.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-testing-toolkit-frontend
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-testing-toolkit-frontend
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.2.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-testing-toolkit-frontend-12.2.0
    spec:
      containers:
        - name: ml-testing-toolkit-frontend
          image: "mojaloop/ml-testing-toolkit-ui:v13.2.2"
          imagePullPolicy: IfNotPresent
          command: ["sh", "/usr/share/nginx/start.sh"]
          ports:
            - containerPort: 6060
          envFrom:
          - configMapRef:
              name: RELEASE-NAME-ml-testing-toolkit-frontend-config
---
# Source: mojaloop/charts/quoting-service/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quoting-service
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: quoting-service
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: quoting-service-12.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
      containers:
        - name: quoting-service
          image: "mojaloop/quoting-service:v12.0.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-api
              containerPort: 3002
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: 
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0

          volumeMounts:
          - name: RELEASE-NAME-quoting-service-config-volume
            mountPath: /opt/quoting-service/config
          - name: jws-signing-key
            mountPath: /opt/quoting-service/secrets
        - name: quoting-service-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-quoting-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: info
      volumes:
        - name: jws-signing-key
          secret:
            secretName: RELEASE-NAME-quoting-service-jws-signing-key
        - name: RELEASE-NAME-quoting-service-config-volume
          configMap:
            name: RELEASE-NAME-quoting-service-config
            items:
            - key: default.json
              path: default.json
#            - key: knexfile.js
#              path: knexfile.js
            - key: rules.json
              path: rules.json
        - name: RELEASE-NAME-quoting-service-sidecar-volume
          configMap:
            name: RELEASE-NAME-quoting-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/simulator/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: simulator
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: simulator
        app.kubernetes.io/instance: RELEASE-NAME
      annotations:
        checksum/config: fc9a0f6ac94c5895796843cae7573e1d9ce58736bce691a4261bdf3740d2e394
        prometheus.io/port: "8444"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: simulator
          image: "mojaloop/simulator:v11.1.2"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8444
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 8444
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 8444
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: LOG_LEVEL
            - name: PARTIES_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: PARTIES_ENDPOINT
            - name: QUOTES_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: QUOTES_ENDPOINT
            - name: TRANSFERS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: TRANSFERS_ENDPOINT
            - name: BULK_TRANSFERS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: BULK_TRANSFERS_ENDPOINT
            - name: TRANSACTION_REQUESTS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: TRANSACTION_REQUESTS_ENDPOINT
            - name: TRANSFERS_FULFIL_RESPONSE_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: TRANSFERS_FULFIL_RESPONSE_DISABLED
            - name: TRANSFERS_FULFILMENT
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: TRANSFERS_FULFILMENT
            - name: TRANSFERS_CONDITION
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: TRANSFERS_CONDITION
            - name: TRANSFERS_ILPPACKET
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: TRANSFERS_ILPPACKET
            - name: MOCK_JWS_SIGNATURE
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: MOCK_JWS_SIGNATURE
            - name: METRICS_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: METRICS_DISABLED
            - name: METRICS_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: METRICS_PREFIX
            - name: METRICS_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: METRICS_TIMEOUT
            - name: METRICS_SERVICENAME
              valueFrom:
                configMapKeyRef:
                  name: RELEASE-NAME-simulator-config
                  key: METRICS_SERVICENAME
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojasim"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "false"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: log,trace
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
---
# Source: mojaloop/charts/transaction-requests-service/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: RELEASE-NAME-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: transaction-requests-service
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: transaction-requests-service
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 11.0.2
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: transaction-requests-service-11.0.2
    spec:
      initContainers: []
      containers:
        - name: transaction-requests-service
          image: "mojaloop/transaction-requests-service:v11.1.5"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/index.js", "api"]
          ports:
            - name: http-api
              containerPort: 4000
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: 
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: 
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: 
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 
          volumeMounts:
            - name: RELEASE-NAME-transaction-requests-service-config-volume
              mountPath: /opt/transaction-requests-service/config
        - name: transaction-requests-service-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: RELEASE-NAME-transaction-requests-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: RELEASE-NAME-transaction-requests-service-config-volume
          configMap:
            name: RELEASE-NAME-transaction-requests-service-config
            items:
              - key: default.json
                path: default.json
        - name: RELEASE-NAME-transaction-requests-service-sidecar-volume
          configMap:
            name: RELEASE-NAME-transaction-requests-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: RELEASE-NAME
    heritage: Helm
    component: server
spec:
  serviceName: RELEASE-NAME-zookeeper-headless
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
      release: RELEASE-NAME
      component: server
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zookeeper
        release: RELEASE-NAME
        component: server
    spec:
      terminationGracePeriodSeconds: 1800
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:

        - name: zookeeper
          image: "zookeeper:3.5.5"
          imagePullPolicy: IfNotPresent
          command: 
             - "/bin/bash"
             - "-xec"
             - "/config-scripts/run"
          ports:
            - name: client
              containerPort: 2181
              protocol: TCP
            - name: election
              containerPort: 3888
              protocol: TCP
            - name: server
              containerPort: 2888
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - sh
                - /config-scripts/ok
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - sh
                - /config-scripts/ready
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          env:
            - name: ZK_REPLICAS
              value: "1"
            - name: JMXAUTH
              value: "false"
            - name: JMXDISABLE
              value: "false"
            - name: JMXPORT
              value: "1099"
            - name: JMXSSL
              value: "false"
            - name: ZK_HEAP_SIZE
              value: "1G"
            - name: ZK_SYNC_LIMIT
              value: "10"
            - name: ZK_TICK_TIME
              value: "2000"
            - name: ZOO_AUTOPURGE_PURGEINTERVAL
              value: "0"
            - name: ZOO_AUTOPURGE_SNAPRETAINCOUNT
              value: "3"
            - name: ZOO_INIT_LIMIT
              value: "5"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOO_PORT
              value: "2181"
            - name: ZOO_STANDALONE_ENABLED
              value: "false"
            - name: ZOO_TICK_TIME
              value: "2000"
          resources:
            {}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config-scripts
      volumes:
        - name: config
          configMap:
            name: RELEASE-NAME-zookeeper
            defaultMode: 0555
        - name: data
          emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-kafka
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: RELEASE-NAME
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka-broker
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: RELEASE-NAME
  serviceName: RELEASE-NAME-kafka-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: OnDelete
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
      labels:
        helm.sh/chart: kafka-0.21.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: kafka-broker
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      containers:
      - name: metrics
        image: "solsson/kafka-prometheus-jmx-exporter@sha256:a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8"
        command:
        - sh
        - -exc
        - |
          trap "exit 0" TERM; \
          while :; do \
          java \
          -XX:+UnlockExperimentalVMOptions \
          -XX:+UseCGroupMemoryLimitForHeap \
          -XX:MaxRAMFraction=1 \
          -XshowSettings:vm \
          -jar \
          jmx_prometheus_httpserver.jar \
          "5556" \
          /etc/jmx-kafka/jmx-kafka-prometheus.yml & \
          wait $! || sleep 3; \
          done
        ports:
        - containerPort: 5556
          name: prometheus
        resources:
          {}
        volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-kafka
      - name: kafka-broker
        image: "confluentinc/cp-kafka:5.0.1"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          exec:
            command:
              - sh
              - -ec
              - /usr/bin/jps | /bin/grep -q SupportedKafka
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: kafka
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 5555
          name: jmx
        resources:
          {}
        env:
        - name: JMX_PORT
          value: "5555"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_HEAP_OPTS
          value: -Xmx1G -Xms1G
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "RELEASE-NAME-zookeeper:2181"
        - name: KAFKA_LOG_DIRS
          value: "/opt/kafka/data/logs"
        - name: "KAFKA_AUTO_CREATE_TOPICS_ENABLE"
          value: "true"
        - name: "KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE"
          value: "false"
        - name: "KAFKA_DEFAULT_REPLICATION_FACTOR"
          value: "1"
        - name: "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR"
          value: "1"
        - name: KAFKA_JMX_PORT
          value: "5555"
        # This is required because the Downward API does not yet support identification of
        # pod numbering in statefulsets. Thus, we are required to specify a command which
        # allows us to extract the pod ID for usage as the Kafka Broker ID.
        # See: https://github.com/kubernetes/kubernetes/issues/31218
        command:
        - sh
        - -exc
        - |
          unset KAFKA_PORT && \
          export KAFKA_BROKER_ID=${POD_NAME##*-} && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_IP}:9092 && \
          exec /etc/confluent/docker/run
        volumeMounts:
        - name: datadir
          mountPath: "/opt/kafka/data"
      volumes:
      - name: datadir
        emptyDir: {}
      - name: jmx-config
        configMap:
          name: RELEASE-NAME-kafka-metrics
      terminationGracePeriodSeconds: 60
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-backend/templates/statefulset.yaml
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: RELEASE-NAME-ml-testing-toolkit-backend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-backend-12.2.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-testing-toolkit-backend
      app.kubernetes.io/instance: RELEASE-NAME
  serviceName: RELEASE-NAME-ml-testing-toolkit-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-testing-toolkit-backend
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: 12.2.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-testing-toolkit-backend-12.2.0
    spec:
      initContainers:
      containers:
        - name: ml-testing-toolkit-backend
          image: "mojaloop/ml-testing-toolkit:v13.2.2"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "cd /opt/mojaloop-testing-toolkit; if [ -f /opt/default_config/user_config.json ]; then cp /opt/default_config/user_config.json spec_files; fi; if [ -f /opt/default_config/system_config.json ]; then cp /opt/default_config/system_config.json spec_files; fi; npm run start;"]
          ports:
            - containerPort: 5000
            - containerPort: 5050
          volumeMounts:
            - name: RELEASE-NAME-ml-testing-toolkit-backend-volume-extra-environments
              mountPath: /opt/mojaloop-testing-toolkit/examples/environments/hub-k8s-cgs-environment.json
              subPath: hub-k8s-cgs-environment.json
            - name: RELEASE-NAME-ml-testing-toolkit-backend-volume-extra-environments
              mountPath: /opt/mojaloop-testing-toolkit/examples/environments/hub-k8s-default-environment.json
              subPath: hub-k8s-default-environment.json
            - name: RELEASE-NAME-ml-testing-toolkit-backend-volume-config-default
              mountPath: /opt/default_config
      volumes:
        - name: RELEASE-NAME-ml-testing-toolkit-backend-volume-config-default
          configMap:
            name: RELEASE-NAME-ml-testing-toolkit-backend-config-default
            items:
              - key: system_config.json
                path: system_config.json
              - key: user_config.json
                path: user_config.json
        - name: RELEASE-NAME-ml-testing-toolkit-backend-volume-extra-environments
          configMap:
            name: RELEASE-NAME-ml-testing-toolkit-backend-config-extra-environments
            items:
              - key: hub-k8s-cgs-environment.json
                path: hub-k8s-cgs-environment.json
              - key: hub-k8s-default-environment.json
                path: hub-k8s-default-environment.json
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-12.2.0
spec:
  rules:
    - host: "account-lookup-service-admin.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-account-lookup-service-admin
              servicePort: http-admin
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-12.2.0
spec:
  rules:
    - host: "account-lookup-service.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-account-lookup-service
              servicePort: http-api
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.2
spec:
  rules:
    - host: "central-event-processor.local"
      http:
        paths:
          - path: 
            backend:
              serviceName: RELEASE-NAME-centraleventprocessor
              servicePort: http
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-12.1.0
  annotations:
spec:
  rules:
    - host: central-ledger-admin-transfer.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-centralledger-handler-admin-transfer
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.1.0
  annotations:
spec:
  rules:
    - host: central-ledger-timeout.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-centralledger-handler-timeout
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.1.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-fulfil.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-centralledger-handler-transfer-fulfil
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-12.1.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-get.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-centralledger-handler-transfer-get
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.1.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-position.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-centralledger-handler-transfer-position
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.1.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-prepare.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-centralledger-handler-transfer-prepare
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-12.1.0
  annotations:
spec:
  rules:
    - host: central-ledger.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-centralledger-service
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-13.0.0
  annotations:
spec:
  rules:
    - host: central-settlement-service.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-centralsettlement-service
              servicePort: 80
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.2
  annotations:
spec:
  rules:
    - host: ml-api-adapter-notification.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-ml-api-adapter-handler-notification
              servicePort: 80
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.2
  annotations:
spec:
  rules:
    - host: ml-api-adapter.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-ml-api-adapter-service
              servicePort: 80
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-backend/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-ml-testing-toolkit-backend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-backend-12.2.0
  annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "8m"
spec:
  rules:
    - host: testing-toolkit.local
      http:
        paths:
          - path: /api/
            backend:
              serviceName: RELEASE-NAME-ml-testing-toolkit-backend
              servicePort: 5050
          - path: /socket.io/
            backend:
              serviceName: RELEASE-NAME-ml-testing-toolkit-backend
              servicePort: 5050
    - host: testing-toolkit-specapi.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-ml-testing-toolkit-backend
              servicePort: 5000
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-frontend/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-ml-testing-toolkit-frontend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-frontend
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-frontend-12.2.0
  annotations:
spec:
  rules:
    - host: testing-toolkit.local
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-ml-testing-toolkit-frontend
              servicePort: 6060
---
# Source: mojaloop/charts/simulator/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.2
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: dev2-simulator.mojaloop.live
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-simulator
              servicePort: http
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/tests/ttk-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: RELEASE-NAME-ml-ttk-test-setup
  labels:
    helm.sh/chart: ml-ttk-test-setup-12.2.0
    app.kubernetes.io/name: ml-ttk-test-setup
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "13.2.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  restartPolicy: Never
  containers:
  - name: ml-ttk-test-setup
    image: "mojaloop/ml-testing-toolkit:v13.2.2"
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args:
    - echo "Downloading the test collection...";
      wget https://github.com/mojaloop/testing-toolkit-test-cases/archive/v13.0.1.zip -O downloaded-test-collections.zip;
      mkdir tmp_test_cases;
      unzip -d tmp_test_cases -o downloaded-test-collections.zip;
      npm run cli -- -c cli-default-config.json -e cli-testcase-environment.json -i tmp_test_cases/testing-toolkit-test-cases-13.0.1/collections/hub/provisioning -u http://RELEASE-NAME-ml-testing-toolkit-backend:5050 --report-format html --report-auto-filename-enable true --extra-summary-information="Test Suite:GP Tests,Environment:Development";
      echo "Done";
    envFrom:
    - secretRef:
        name: RELEASE-NAME-ml-ttk-test-setup-aws-creds
    volumeMounts:
      - name: RELEASE-NAME-ml-ttk-test-setup-volume-testcase-environment-file
        mountPath: /opt/mojaloop-testing-toolkit/cli-testcase-environment.json
        subPath: cli-testcase-environment.json
      - name: RELEASE-NAME-ml-ttk-test-setup-volume-config-file-defaults
        mountPath: /opt/mojaloop-testing-toolkit/cli-default-config.json
        subPath: cli-default-config.json
  
  volumes:
  - name: RELEASE-NAME-ml-ttk-test-setup-volume-config-file-defaults
    configMap:
      name: RELEASE-NAME-ml-ttk-test-setup-config-file-defaults
      items:
        - key: cli-default-config.json
          path: cli-default-config.json
  - name: RELEASE-NAME-ml-ttk-test-setup-volume-testcase-environment-file
    configMap:
      name: RELEASE-NAME-ml-ttk-test-setup-config-testcase-environment-file
      items:
        - key: cli-testcase-environment.json
          path: cli-testcase-environment.json
---
# Source: mojaloop/charts/ml-ttk-test-validation/templates/tests/ttk-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: RELEASE-NAME-ml-ttk-test-validation
  labels:
    helm.sh/chart: ml-ttk-test-validation-12.2.0
    app.kubernetes.io/name: ml-ttk-test-validation
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "13.2.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
    helm.sh/hook-weight: "-4"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  restartPolicy: Never
  containers:
  - name: ml-ttk-test-validation
    image: "mojaloop/ml-testing-toolkit:v13.2.2"
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args:
    - echo "Downloading the test collection...";
      wget https://github.com/mojaloop/testing-toolkit-test-cases/archive/v13.0.1.zip -O downloaded-test-collections.zip;
      mkdir tmp_test_cases;
      unzip -d tmp_test_cases -o downloaded-test-collections.zip;
      npm run cli -- -c cli-default-config.json -e cli-testcase-environment.json -i tmp_test_cases/testing-toolkit-test-cases-13.0.1/collections/hub/golden_path -u http://RELEASE-NAME-ml-testing-toolkit-backend:5050 --report-format html --report-auto-filename-enable true --extra-summary-information="Test Suite:GP Tests,Environment:Development";
      echo "Done";
    envFrom:
    - secretRef:
        name: RELEASE-NAME-ml-ttk-test-validation-aws-creds
    volumeMounts:
      - name: RELEASE-NAME-ml-ttk-test-validation-volume-testcase-environment-file
        mountPath: /opt/mojaloop-testing-toolkit/cli-testcase-environment.json
        subPath: cli-testcase-environment.json
      - name: RELEASE-NAME-ml-ttk-test-validation-volume-config-file-defaults
        mountPath: /opt/mojaloop-testing-toolkit/cli-default-config.json
        subPath: cli-default-config.json
  
  volumes:
  - name: RELEASE-NAME-ml-ttk-test-validation-volume-config-file-defaults
    configMap:
      name: RELEASE-NAME-ml-ttk-test-validation-config-file-defaults
      items:
        - key: cli-default-config.json
          path: cli-default-config.json
  - name: RELEASE-NAME-ml-ttk-test-validation-volume-testcase-environment-file
    configMap:
      name: RELEASE-NAME-ml-ttk-test-validation-config-testcase-environment-file
      items:
        - key: cli-testcase-environment.json
          path: cli-testcase-environment.json
