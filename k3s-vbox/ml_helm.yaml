NAME: mojaloop1
LAST DEPLOYED: Tue Jun 29 00:40:28 2021
NAMESPACE: ml-app
STATUS: pending-install
REVISION: 1
USER-SUPPLIED VALUES:
account-lookup-service:
  account-lookup-service:
    config:
      db_host: mysql-als
      db_password: password
      db_port: 3306
  account-lookup-service-admin:
    config:
      db_host: mysql-als
      db_password: password
      db_port: 3306
  mysql:
    enabled: false
central:
  centralledger:
    centralledger-handler-admin-transfer:
      config:
        db_host: mysql-cl
        db_password: password
        db_port: 3306
    centralledger-handler-timeout:
      config:
        db_host: mysql-cl
        db_password: password
        db_port: 3306
    centralledger-handler-transfer-fulfil:
      config:
        db_host: mysql-cl
        db_password: password
        db_port: 3306
    centralledger-handler-transfer-get:
      config:
        db_host: mysql-cl
        db_password: password
        db_port: 3306
    centralledger-handler-transfer-position:
      config:
        db_host: mysql-cl
        db_password: password
        db_port: 3306
    centralledger-handler-transfer-prepare:
      config:
        db_host: mysql-cl
        db_password: password
        db_port: 3306
    centralledger-service:
      config:
        db_host: mysql-cl
        db_password: password
        db_port: 3306
      containers:
        api:
          image:
            tag: v13.1.1
    kafka:
      enabled: true
    mysql:
      enabled: false
  centralsettlement:
    centralsettlement-handler-settlementwindow:
      config:
        db_host: mysql-cl
        db_password: password
        db_port: 3306
    centralsettlement-service:
      config:
        db_host: mysql-cl
        db_password: password
        db_port: 3306
  enabled: true
emailnotifier:
  enabled: false
finance-portal:
  backend:
    ingress:
      enabled: false
  enabled: false
  frontend:
    ingress:
      enabled: false
finance-portal-settlement-management:
  enabled: false
ml-api-adapter:
  enabled: true
ml-testing-toolkit:
  enabled: false
  ml-testing-toolkit-backend:
    config:
      user_config.json:
        CALLBACK_RESOURCE_ENDPOINTS:
          enabled: true
          endpoints:
          - endpoint: http://dev2-account-lookup.mojaloop.live
            method: put
            path: /parties/{Type}/{ID}
          - endpoint: http://dev2-quoting-service.mojaloop.live
            method: put
            path: /quotes/{ID}
          - endpoint: http://dev2-ml-api-adapter.mojaloop.live
            method: put
            path: /transfers/{ID}
        FSPID: testingtoolkitdfsp
        ILP_SECRET: secret
        TRANSFERS_VALIDATION_CONDITION: true
        TRANSFERS_VALIDATION_ILP_PACKET: true
        TRANSFERS_VALIDATION_WITH_PREVIOUS_QUOTES: true
    enabled: false
    ingress:
      enabled: false
      hosts:
        dev2-testing-toolkit-specapi.mojaloop.live:
          paths:
          - /
          port: 5000
        dev2-testing-toolkit.mojaloop.live:
          paths:
          - /api/
          - /socket.io/
          port: 5050
  ml-testing-toolkit-frontend:
    config:
      API_BASE_URL: http://dev2-testing-toolkit.mojaloop.live
    enabled: false
    ingress:
      enabled: false
      hosts:
        dev2-testing-toolkit.mojaloop.live:
          paths:
          - /
          port: 6060
ml-ttk-posthook-setup:
  config:
    testCasesPathInZip: testing-toolkit-test-cases-master/collections/hub/provisioning
    testCasesZipUrl: https://github.com/mojaloop/testing-toolkit-test-cases/archive/master.zip
  postInstallHook:
    enabled: false
    weight: -5
ml-ttk-posthook-tests:
  config:
    environmentName: DEV2
    testCasesPathInZip: testing-toolkit-test-cases-master/collections/hub/sequence
    testCasesZipUrl: https://github.com/mojaloop/testing-toolkit-test-cases/archive/master.zip
    testSuiteName: Test run after deployment
  configCreds: null
  configFileDefaults:
    slackFailedImage: https://mojaloop-oss-qa-results.s3-us-west-2.amazonaws.com/ttk-tests/assets/cancel-47588_640.png
    slackPassedImage: https://mojaloop-oss-qa-results.s3-us-west-2.amazonaws.com/ttk-tests/assets/accept-47587_640.png
  postInstallHook:
    enabled: false
    weight: -4
ml-ttk-test-validation:
  tests:
    enabled: false
mojaloop-bulk:
  bulk-api-adapter:
    bulk-api-adapter-handler-notification:
      config:
        central_services_host: $release_name-centralledger-service
        central_services_port: 80
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
        security:
          callback:
            rejectUnauthorized: true
      enabled: false
      image:
        command: '["node", "src/handlers/index.js", "handler", "--notification"]'
        pullPolicy: Always
        repository: mojaloop/bulk-api-adapter
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath: /
        hosts:
          api: bulk-api-adapter-notification.local
        tls: null
      init:
        enabled: true
        image:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15
      metrics:
        config:
          defaultLabels:
            serviceName: bulk-handler-notification
          prefix: moja_
          timeout: 5000
        enabled: true
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      replicaCount: 1
      resources: {}
      service:
        externalPort: 80
        internalPort: 8088
        type: ClusterIP
    bulk-api-adapter-service:
      config:
        central_services_host: $release_name-centralledger-service
        central_services_port: 80
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
        security:
          callback:
            rejectUnauthorized: true
      enabled: false
      image:
        command: '["node", "src/api/index.js"]'
        pullPolicy: Always
        repository: mojaloop/bulk-api-adapter
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath: /
        hosts:
          api: dev2-bulk-api-adapter.mojaloop.live
        tls: null
      init:
        enabled: true
        image:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15
      metrics:
        config:
          defaultLabels:
            serviceName: bulk-service
          prefix: moja_
          timeout: 5000
        enabled: true
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      replicaCount: 1
      resources: {}
      service:
        externalPort: 80
        internalPort: 8088
        type: ClusterIP
  bulk-centralledger:
    cl-handler-bulk-transfer-fulfil:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_disabled: false
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--bulkfulfil"]'
            pullPolicy: Always
            repository: mojaloop/central-ledger
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: false
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-bulkfulfil.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-bulkfulfil
          prefix: moja_
          timeout: 5000
        enabled: true
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    cl-handler-bulk-transfer-prepare:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_disabled: false
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--bulkprepare"]'
            pullPolicy: Always
            repository: mojaloop/central-ledger
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: false
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-bulkprepare.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-bulkprepare
          prefix: moja_
          timeout: 5000
        enabled: true
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    cl-handler-bulk-transfer-processing:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_disabled: false
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--bulkprocessing"]'
            pullPolicy: Always
            repository: mojaloop/central-ledger
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: false
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-bulkprocessing.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-bulkprocessing
          prefix: moja_
          timeout: 5000
        enabled: true
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
  enabled: false
  mongodb:
    additionalLabels: {}
    affinity: {}
    clusterDomain: cluster.local
    configmap: null
    enabled: true
    image:
      pullPolicy: Always
      registry: docker.io
      repository: bitnami/mongodb
      tag: 4.0.3
    livenessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    metrics:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: forekshub/percona-mongodb-exporter
        tag: latest
      podAnnotations:
        prometheus.io/port: "9216"
        prometheus.io/scrape: "true"
      serviceMonitor:
        additionalLabels: {}
        alerting:
          rules: {}
        enabled: false
    mongodbDatabase: mlos
    mongodbEnableIPv6: true
    mongodbExtraFlags: []
    mongodbPassword: password
    mongodbUsername: mojaloop
    nameOverride: centralledger-obj
    nodeSelector: {}
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      size: 8Gi
    podAnnotations: {}
    podLabels: {}
    readinessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    replicaSet:
      enabled: false
      name: rs0
      pdb:
        minAvailable:
          arbiter: 1
          primary: 1
          secondary: 1
      replicas:
        arbiter: 1
        secondary: 1
      useHostnames: true
    resources: {}
    securityContext:
      enabled: true
      fsGroup: 1001
      runAsUser: 1001
    service:
      annotations: {}
      port: 27017
      type: ClusterIP
    tolerations: []
    usePassword: true
mojaloop-simulator:
  enabled: false
quoting-service:
  config:
    db_host: mysql-cl
    db_password: password
    db_port: 3306
  ingress:
    annotations: {}
    enabled: false
    externalPath: /
    hosts:
      api: quoting-service.local
    tls: []
simulator:
  affinity: {}
  config:
    LOG_LEVEL: info
    MOCK_JWS_SIGNATURE: abcJjvNrkyK2KBieDUbGfhaBUn75aDUATNF4joqA8OLs4QgSD7i6EO8BIdy6Crph3LnXnTM20Ai1Z6nt0zliS_qPPLU9_vi6qLb15FOkl64DQs9hnfoGeo2tcjZJ88gm19uLY_s27AJqC1GH1B8E2emLrwQMDMikwQcYvXoyLrL7LL3CjaLMKdzR7KTcQi1tCK4sNg0noIQLpV3eA61kess
    PARTIES_SERVICE_ENDPOINT: http://$release_name-account-lookup-service
    QUOTES_SERVICE_ENDPOINT: http://$release_name-quoting-service
    TRANSFERS_CONDITION: HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks
    TRANSFERS_FULFIL_RESPONSE_DISABLED: false
    TRANSFERS_FULFILMENT: XoSz1cL0tljJSCp_VtIYmPNw-zFUgGfbUqf69AagUzY
    TRANSFERS_ILPPACKET: AQAAAAAAAADIEHByaXZhdGUucGF5ZWVmc3CCAiB7InRyYW5zYWN0aW9uSWQiOiIyZGY3NzRlMi1mMWRiLTRmZjctYTQ5NS0yZGRkMzdhZjdjMmMiLCJxdW90ZUlkIjoiMDNhNjA1NTAtNmYyZi00NTU2LThlMDQtMDcwM2UzOWI4N2ZmIiwicGF5ZWUiOnsicGFydHlJZEluZm8iOnsicGFydHlJZFR5cGUiOiJNU0lTRE4iLCJwYXJ0eUlkZW50aWZpZXIiOiIyNzcxMzgwMzkxMyIsImZzcElkIjoicGF5ZWVmc3AifSwicGVyc29uYWxJbmZvIjp7ImNvbXBsZXhOYW1lIjp7fX19LCJwYXllciI6eyJwYXJ0eUlkSW5mbyI6eyJwYXJ0eUlkVHlwZSI6Ik1TSVNETiIsInBhcnR5SWRlbnRpZmllciI6IjI3NzEzODAzOTExIiwiZnNwSWQiOiJwYXllcmZzcCJ9LCJwZXJzb25hbEluZm8iOnsiY29tcGxleE5hbWUiOnt9fX0sImFtb3VudCI6eyJjdXJyZW5jeSI6IlVTRCIsImFtb3VudCI6IjIwMCJ9LCJ0cmFuc2FjdGlvblR5cGUiOnsic2NlbmFyaW8iOiJERVBPU0lUIiwic3ViU2NlbmFyaW8iOiJERVBPU0lUIiwiaW5pdGlhdG9yIjoiUEFZRVIiLCJpbml0aWF0b3JUeXBlIjoiQ09OU1VNRVIiLCJyZWZ1bmRJbmZvIjp7fX19
    TRANSFERS_SERVICE_ENDPOINT: http://$release_name-ml-api-adapter-service
  enabled: true
  image:
    pullPolicy: Always
    repository: mojaloop/simulator
  imagePullSecrets: []
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    enabled: false
    hosts:
    - dev2-simulator.mojaloop.live
    path: /
    tls: []
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 8444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 15
  metrics:
    defaultLabels:
      serviceName: simulator
    enabled: true
    prefix: moja_
    timeout: 5000
  nodeSelector: {}
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 8444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 15
  replicaCount: 1
  resources: {}
  service:
    port: 80
    targetPort: http
    type: ClusterIP
  tolerations: []
transaction-requests-service:
  ingress:
    annotations: {}
    enabled: false
    externalPath: /
    hosts:
      api: transaction-request-service.local
    tls: []
  resources: {}

COMPUTED VALUES:
account-lookup-service:
  account-lookup-service:
    affinity: {}
    config:
      central_services_host: $release_name-centralledger-service
      central_services_port: 80
      db_acquire_timeout_millis: 30000
      db_connection_pool_max: 30
      db_connection_pool_min: 10
      db_create_retry_interval_millis: 200
      db_create_timeout_millis: 30000
      db_database: account_lookup
      db_debug: false
      db_destroy_timeout_millis: 5000
      db_driver: mysql
      db_host: mysql-als
      db_idle_timeout_millis: 30000
      db_password: password
      db_port: 3306
      db_reap_interval_millis: 1000
      db_type: mysql
      db_user: account_lookup
      display_routes: true
      end_point_cache:
        expiresIn: 180000
        generateTimeout: 30000
      endpointSecurity:
        fspiopSourceSigningName: switch
        jwsSign: true
        jwsSigningKey: |-
          -----BEGIN PRIVATE KEY-----
          MIIEugIBADANBgkqhkiG9w0BAQEFAASCBKQwggSgAgEAAoIBAQDuB5HuHRH5BqI/
          VAC/ixm6lz8kJmigIB5jMxLrhB9cgqM+pb0O+is88VRHdxtw8eKG3nvrZYy/4nsJ
          z32qo4sOIMqHWTlZgbURVK4FAUEZ/qn63UnXJ1YVqT4UGg31BBj2c1JdlxG2t4JV
          DvzGrI2/ia/t4gYZCWrQz6a8OClBIaXu2t6EGFnysyS+1YDWtNIHO+z0lvAY9oad
          5MZPHN51o04eIoLO0tPfkz0+NDs4ECwUWuFAg8yo1hxnvSoERiCAwEbFgq2wDe1+
          oBhOpusd4VastD/TEqO8RhrwTodddOMKzapJPrQJuvTkrpkmkPOGE8DgIVHsULLR
          UYEMKvTVAgMBAAECgf94Meq77xrcFg8sSqe5eNHYP39tvaWyqE7mY/slvpNDH5Pl
          D/p21akS156E32BEJuYPk/TLiI2kMWjnvbHvNgr9tq8x3ToyTjtrg5clq8Hr1Ozo
          FnFiqkVHMFPFPQZEVU64CQPA33DixuWjMWS3YINfCAinErBry0PiNZGmuFi1K/wy
          e1z2F9WfG3IEBEe3NaeXwN55ZPJve0LtneJy3YqNwMg2FpPKBRHFV4lKTaU/hqhC
          NK6HQoEXN4Y9AQHn53Fl8n0iNO3qx0Tb7EuGNFmZ2xTlpDKAp8M+BA5Qm5YDkbd6
          OoxbGj2YxZncbG+RsvICtVMLqIytubvYREY9WGkCgYEA+K64xhJzWV3cGc8/90ko
          TryGMBj1ly5TNa1YyOQxl5z4Glc0aI8a+1vJGEAA+c/OEhMR8MRn3+QfV2LJOI5X
          V8Zo2Ger6Ln99LBddTh2HXL3M60cMgs8MYGuJ75g5R/UHnJBLo7NFyVddCOMT3hc
          AYSDN3XCw9ycqTw2/mJHB9kCgYEA9QiaCfTtnXdjMqLeYbp2uQEyyO6IZs956ym7
          sEQMwx/3wnlE9eiJ6iQxZfddkfOCyV/4MMAlYfpTBQFg7Cwb32Xrv3Ezy0HfZrnt
          5Nj4SVQWuOXJhdfC9dmTF+cvBeP+vC6PyDbikxdCo9+05chxS7I3MLxCue4qxy0C
          QfQIE10CgYA+kHacHng2u45sT9/f7t/dL0DzSNRAvL7iekIkCIURh8RDnDzrMVWw
          d18YYsHcF5PYqEOTN1aK1XGtIoVNXUJMKvaluy9c1a42qUhZ/WJ59jqLHbpCPOFf
          8yhFh3gJLQDIyCXt+K9Qa24fkfHy7Gz5VMVOZqohbJddXHDZfxAvwQKBgAdU947+
          tjF1BhHYz8Cq3KySfZuHj6tL4AEKYaRXlO4twbMe/9I/4AiShqvfZ/xbBfnSllGX
          Hkc9P0iyDt1iQH9BxHkZAQy+7tlbDORBHcTL8FYeAhawKxRCK2WWtFB/zvqAhire
          gY8XLhZLNlV91u4F6iLaL0DzAHKvRRcGH0u9AoGATNigZgbRRHJC21JucHeE0tP7
          HjGALvb4qn1o0oDHsxNY8i6vVNw9YeQpZaJhceuRHJTGcsq2dJSXpYwIhIVs/8RK
          bKbkEndra96L6FRZN8LYBl8zbRUPx39ojGeSbFliQv1eaoA/1DDhCiC2NlcSmbJl
          ecaG/Oyo/S+eM8nR7mc=
          -----END PRIVATE KEY-----
      error_handling:
        include_cause_extension: false
        truncate_extensions: true
      kafka_host: $release_name-kafka
      kafka_partitioner: murmur2_random
      kafka_port: 9092
      log_level: info
      log_transport: file
      run_migrations: false
    containers:
      admin:
        image:
          command: '["node", "src/index.js", "server", "--admin"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/account-lookup-service
          tag: v11.2.1
        service:
          ports:
            api:
              name: http-admin
              port: 4001
      api:
        image:
          command: '["node", "src/index.js", "server", "--api"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/account-lookup-service
          tag: v11.2.1
        service:
          ports:
            api:
              name: http-api
              port: 4002
    enabled: true
    fullnameOverride: ""
    global: {}
    ingress:
      annotations: {}
      enabled: true
      hosts:
      - account-lookup-service.local
      path: /
      tls: []
    init:
      enabled: true
      mysql:
        command: until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e 'select * from oracleEndpoint;' ; do echo waiting for MySQL; sleep 2; done;
        enabled: true
        name: wait-for-mysql
        pullPolicy: IfNotPresent
        repository: mysql
        tag: latest
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 60
      periodSeconds: 15
    metrics:
      config:
        defaultLabels:
          serviceName: account-lookup-service
        prefix: moja_
        timeout: 5000
      enabled: true
    nameOverride: ""
    nodeSelector: {}
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 60
      periodSeconds: 15
    replicaCount: 1
    resources: {}
    service:
      port: 80
      type: ClusterIP
    sidecar:
      config:
        event_log_filter: audit:*, log:info, log:warn, log:error
        event_log_grpc_host: localhost
        event_log_grpc_port: 50051
        event_log_metadata_only: true
        log_filter: error, warn, info
        log_level: info
      enabled: true
      image:
        command: '["npm", "run", "start"]'
        pullPolicy: IfNotPresent
        repository: mojaloop/event-sidecar
        tag: v11.0.0
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      service:
        internalPort: 4003
    tolerations: []
  account-lookup-service-admin:
    affinity: {}
    config:
      central_services_host: $release_name-centralledger-service
      central_services_port: 80
      db_acquire_timeout_millis: 30000
      db_connection_pool_max: 30
      db_connection_pool_min: 10
      db_create_retry_interval_millis: 200
      db_create_timeout_millis: 30000
      db_database: account_lookup
      db_debug: false
      db_destroy_timeout_millis: 5000
      db_driver: mysql
      db_host: mysql-als
      db_idle_timeout_millis: 30000
      db_password: password
      db_port: 3306
      db_reap_interval_millis: 1000
      db_type: mysql
      db_user: account_lookup
      display_routes: true
      end_point_cache:
        expiresIn: 180000
        generateTimeout: 30000
      endpointSecurity:
        fspiopSourceSigningName: switch
        jwsSign: false
        jwsSigningKey: null
      error_handling:
        include_cause_extension: false
        truncate_extensions: true
      kafka_host: $release_name-kafka
      kafka_partitioner: murmur2_random
      kafka_port: 9092
      log_level: info
      log_transport: file
      run_migrations: false
    containers:
      admin:
        image:
          command: '["node", "src/index.js", "server", "--admin"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/account-lookup-service
          tag: v11.2.1
        service:
          ports:
            api:
              name: http-admin
              port: 4001
      api:
        image:
          command: '["node", "src/index.js", "server", "--api"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/account-lookup-service
          tag: v11.2.1
        service:
          ports:
            api:
              name: http-api
              port: 4002
    enabled: true
    fullnameOverride: ""
    global: {}
    ingress:
      annotations: {}
      enabled: true
      hosts:
      - account-lookup-service-admin.local
      path: /
      tls: []
    init:
      enabled: true
      migration:
        command: npm run migrate
        enabled: true
        name: run-migration
      mysql:
        command: until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;
        enabled: true
        name: wait-for-mysql
        pullPolicy: IfNotPresent
        repository: mysql
        tag: latest
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 60
      periodSeconds: 15
    metrics:
      config:
        defaultLabels:
          serviceName: account-lookup-service-admin
        prefix: moja_
        timeout: 5000
      enabled: true
    nameOverride: ""
    nodeSelector: {}
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 60
      periodSeconds: 15
    replicaCount: 1
    resources: {}
    service:
      port: 80
      type: ClusterIP
    sidecar:
      config:
        event_log_filter: audit:*, log:info, log:warn, log:error
        event_log_grpc_host: localhost
        event_log_grpc_port: 50051
        event_log_metadata_only: true
        log_filter: error, warn, info
        log_level: info
      enabled: true
      image:
        command: '["npm", "run", "start"]'
        pullPolicy: IfNotPresent
        repository: mojaloop/event-sidecar
        tag: v11.0.0
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      service:
        internalPort: 4003
    tolerations: []
  als-oracle-pathfinder:
    affinity: {}
    config:
      db:
        account_lookup:
          database: account_lookup
          host: $release_name-account-lookup-mysql
          password: OdonPianoX
          port: "3306"
          user: account_lookup
        central_ledger:
          database: central_ledger
          host: $release_name-centralledger-mysql
          password: oyMxgZChuu
          port: "3306"
          user: central_ledger
        driver: mysql
        type: mysql
      log_level: info
      pathfinder:
        host: localhost
        port: 7007
        queryTimeoutMs: 10000
        tls:
          certs:
            client_cert: |-
              -----BEGIN CERTIFICATE-----
              MIIDejCCAmICCQClh6JWji+/NjANBgkqhkiG9w0BAQsFADB/MQswCQYDVQQGEwJV
              UzEQMA4GA1UECAwHQWxhYmFtYTETMBEGA1UEBwwKTW9udGdvbWVyeTENMAsGA1UE
              CgwEVGVzdDENMAsGA1UECwwEVGVzdDENMAsGA1UEAwwEVGVzdDEcMBoGCSqGSIb3
              DQEJARYNdGVzdEB0ZXN0LmNvbTAeFw0xOTEwMjkxNTMwNTFaFw0yOTEwMjYxNTMw
              NTFaMH8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdBbGFiYW1hMRMwEQYDVQQHDApN
              b250Z29tZXJ5MQ0wCwYDVQQKDARUZXN0MQ0wCwYDVQQLDARUZXN0MQ0wCwYDVQQD
              DARUZXN0MRwwGgYJKoZIhvcNAQkBFg10ZXN0QHRlc3QuY29tMIIBIjANBgkqhkiG
              9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4MU4ipis7vrhsJl6Ad0hIF/nEGjTPG/6KliG
              E1eaAVxOc/Pgw43quKjt846Aqwd9YoMp2NAx74xvZ4OnbMwSpjDQGRQbMY7Hiubs
              UiJMqrst6S5AQqPHJoaErknVjRov0NyAUjia3HThtkqrRT52xTnTGYwc49zt+BKo
              G4iurv40hfOTe4b7g3A64CVNEZe7t+qPbAIew9MU1X3OD3D0hzKZ8MstqebLbSPV
              IflnzU+8Acg4mrMvSdf6OOveUUbf7r4QmfC9AerNVia/GcAvbG/GU+WEOnJfp+8X
              Av+gfS0aM2pUbdrXLi/NxWnvw6bh8e+pjbBcli8roWmroRbFPwIDAQABMA0GCSqG
              SIb3DQEBCwUAA4IBAQApH4oz7CWXzor91aU7bcdD5Ec/Z5QNDKXVrBcF5r+g83yz
              bBphZrvDq+wOVigQ/JfmuAzRtK05WIpvxd22kvsKrDoViG9B+x+wDQm0tP0vY1Cp
              EChdJLE1tAktRL49r8pzpOaUU7NrhYLP1tWrDDsCC3fPUwZzx9quem0xSYmC0BpT
              Ug+hxw3uH7bsGhQkQnGrAoEwrsyq8M3lbw0pIUvq2S7t8lpHZvM5Ldkp5DM7SlJg
              gBabAqScAeoqssFv4bsWINawn/7JvmFEb4kwep6pIf9Lh/rkCgsgyq2xEh/9LXNs
              eCgyt9zbdU2HwsWnoOUEJ0Z4157ykgOkECCGErKl
              -----END CERTIFICATE-----
            client_key: |-
              -----BEGIN PRIVATE KEY-----
              MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDgxTiKmKzu+uGw
              mXoB3SEgX+cQaNM8b/oqWIYTV5oBXE5z8+DDjeq4qO3zjoCrB31igynY0DHvjG9n
              g6dszBKmMNAZFBsxjseK5uxSIkyquy3pLkBCo8cmhoSuSdWNGi/Q3IBSOJrcdOG2
              SqtFPnbFOdMZjBzj3O34EqgbiK6u/jSF85N7hvuDcDrgJU0Rl7u36o9sAh7D0xTV
              fc4PcPSHMpnwyy2p5sttI9Uh+WfNT7wByDiasy9J1/o4695RRt/uvhCZ8L0B6s1W
              Jr8ZwC9sb8ZT5YQ6cl+n7xcC/6B9LRozalRt2tcuL83Fae/DpuHx76mNsFyWLyuh
              aauhFsU/AgMBAAECggEAWgPhvu+h4hsrI1Rznid2ysZdfR7d6chWgXruRvTAQmc7
              LAixLN+67rUIho+9S8E2H6uzqJbISM0PGH+LH3Eiztehn0mEEnbBxwjv/3ypA37u
              xgG1znpUmUMqA7qiAV5JY/XKliMBMeTFOAHzUUnQuu+LcSHBuCeUTdL66/vzKTT4
              oCKwB1vcnzfL5NS/7ownAgLsjNj3pgORRAY9sTDzUkjwrrN/m5nEfghycAcyXHDJ
              lQprc0xX4TI/Vd9ZkG+khAznkRaXiPJ1P1TwadgK5m53Imt2H3F0lmrhNCrul/l7
              F0Uf2tfNHHgSjyoGQkPryuqyf2NcMiUY1d4uCsnWEQKBgQDziD3gBkjguQZUc3Yb
              DqiCtaLkavndmRTPaAyUk95dUuiVEMhnDm8L7T+03PhVDjtXdy4PQUm61xr/Kw4J
              1VUArbIjzcs+OEGNvq99stThRBvszwNRSWS4kYIur3+ggddrewtL7s+hiAqeK88L
              n6vG4/eSKWJBQwF1001siKf7/QKBgQDsRxXGZkf+yVsuL/hSiadwRdD/OJ1O7gr2
              j8za6izaUX1anXLdPrvtOkdCgEC0Iy6hY0FMi0GWzklpY4SvZuxXlK6QkKB3SCE9
              E8RuOSFLouuaxgiau8MnAEUTkInTC+9foOa8znuOGC0JmzztlFf7P7CF8PoNTb4n
              x4a9dQSE6wKBgAjPfgWT1KEksIDvqG80KY6JCbqf0ChfOGyEhCf/7YSM0lNKRyXL
              VOMmky507BsPp7/zVNxCbWtwCs7+fMSITkn2/sHi2R6IJH7/ThQLGz6HG0eG+cTA
              Ff/Da+VKfiCNcgC2c+MsYaCjblbomNX/0dQhPTyxeJeJ2AyuN1fc3c71AoGBAIA2
              tsc5e3nz9AmlOEA5uGWBTT8hjqNlIwfW0pg8mOhDbh188PbD8yBxDng0tmfJ66Ti
              Am4x5v6ZpFaPDVJNLJT99pg2Ew2HU5ocHuydDcdIekc7jTHCD80bJWDPfyrKADRJ
              UMxF0+AwmEftOGvHotKRJg4YzOfpNvXJHQGz/SbPAoGAALJa010eqPHuZKQxpW4z
              4dpt1Fr16cbLnmIk16zxnvPbPJeCtEx8IkwgLIWP6zPOESIGBTslGMq6xIgYaOXZ
              G8S+fLF3J9sfE2gCJR1JSBXdlyWmcKJdyvhRt168hxVW1N4uHJ2KBA3vUhC/kRvh
              3XDCWsEkXqU0KRzt+TkWVOQ=
              -----END PRIVATE KEY-----
            pathfinder_cert: |-
              -----BEGIN CERTIFICATE-----
              MIIDejCCAmICCQClh6JWji+/NjANBgkqhkiG9w0BAQsFADB/MQswCQYDVQQGEwJV
              UzEQMA4GA1UECAwHQWxhYmFtYTETMBEGA1UEBwwKTW9udGdvbWVyeTENMAsGA1UE
              CgwEVGVzdDENMAsGA1UECwwEVGVzdDENMAsGA1UEAwwEVGVzdDEcMBoGCSqGSIb3
              DQEJARYNdGVzdEB0ZXN0LmNvbTAeFw0xOTEwMjkxNTMwNTFaFw0yOTEwMjYxNTMw
              NTFaMH8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdBbGFiYW1hMRMwEQYDVQQHDApN
              b250Z29tZXJ5MQ0wCwYDVQQKDARUZXN0MQ0wCwYDVQQLDARUZXN0MQ0wCwYDVQQD
              DARUZXN0MRwwGgYJKoZIhvcNAQkBFg10ZXN0QHRlc3QuY29tMIIBIjANBgkqhkiG
              9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4MU4ipis7vrhsJl6Ad0hIF/nEGjTPG/6KliG
              E1eaAVxOc/Pgw43quKjt846Aqwd9YoMp2NAx74xvZ4OnbMwSpjDQGRQbMY7Hiubs
              UiJMqrst6S5AQqPHJoaErknVjRov0NyAUjia3HThtkqrRT52xTnTGYwc49zt+BKo
              G4iurv40hfOTe4b7g3A64CVNEZe7t+qPbAIew9MU1X3OD3D0hzKZ8MstqebLbSPV
              IflnzU+8Acg4mrMvSdf6OOveUUbf7r4QmfC9AerNVia/GcAvbG/GU+WEOnJfp+8X
              Av+gfS0aM2pUbdrXLi/NxWnvw6bh8e+pjbBcli8roWmroRbFPwIDAQABMA0GCSqG
              SIb3DQEBCwUAA4IBAQApH4oz7CWXzor91aU7bcdD5Ec/Z5QNDKXVrBcF5r+g83yz
              bBphZrvDq+wOVigQ/JfmuAzRtK05WIpvxd22kvsKrDoViG9B+x+wDQm0tP0vY1Cp
              EChdJLE1tAktRL49r8pzpOaUU7NrhYLP1tWrDDsCC3fPUwZzx9quem0xSYmC0BpT
              Ug+hxw3uH7bsGhQkQnGrAoEwrsyq8M3lbw0pIUvq2S7t8lpHZvM5Ldkp5DM7SlJg
              gBabAqScAeoqssFv4bsWINawn/7JvmFEb4kwep6pIf9Lh/rkCgsgyq2xEh/9LXNs
              eCgyt9zbdU2HwsWnoOUEJ0Z4157ykgOkECCGErKl
              -----END CERTIFICATE-----
            pathfinder_intermediate_cert: |-
              -----BEGIN CERTIFICATE-----
              MIIDejCCAmICCQClh6JWji+/NjANBgkqhkiG9w0BAQsFADB/MQswCQYDVQQGEwJV
              UzEQMA4GA1UECAwHQWxhYmFtYTETMBEGA1UEBwwKTW9udGdvbWVyeTENMAsGA1UE
              CgwEVGVzdDENMAsGA1UECwwEVGVzdDENMAsGA1UEAwwEVGVzdDEcMBoGCSqGSIb3
              DQEJARYNdGVzdEB0ZXN0LmNvbTAeFw0xOTEwMjkxNTMwNTFaFw0yOTEwMjYxNTMw
              NTFaMH8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdBbGFiYW1hMRMwEQYDVQQHDApN
              b250Z29tZXJ5MQ0wCwYDVQQKDARUZXN0MQ0wCwYDVQQLDARUZXN0MQ0wCwYDVQQD
              DARUZXN0MRwwGgYJKoZIhvcNAQkBFg10ZXN0QHRlc3QuY29tMIIBIjANBgkqhkiG
              9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4MU4ipis7vrhsJl6Ad0hIF/nEGjTPG/6KliG
              E1eaAVxOc/Pgw43quKjt846Aqwd9YoMp2NAx74xvZ4OnbMwSpjDQGRQbMY7Hiubs
              UiJMqrst6S5AQqPHJoaErknVjRov0NyAUjia3HThtkqrRT52xTnTGYwc49zt+BKo
              G4iurv40hfOTe4b7g3A64CVNEZe7t+qPbAIew9MU1X3OD3D0hzKZ8MstqebLbSPV
              IflnzU+8Acg4mrMvSdf6OOveUUbf7r4QmfC9AerNVia/GcAvbG/GU+WEOnJfp+8X
              Av+gfS0aM2pUbdrXLi/NxWnvw6bh8e+pjbBcli8roWmroRbFPwIDAQABMA0GCSqG
              SIb3DQEBCwUAA4IBAQApH4oz7CWXzor91aU7bcdD5Ec/Z5QNDKXVrBcF5r+g83yz
              bBphZrvDq+wOVigQ/JfmuAzRtK05WIpvxd22kvsKrDoViG9B+x+wDQm0tP0vY1Cp
              EChdJLE1tAktRL49r8pzpOaUU7NrhYLP1tWrDDsCC3fPUwZzx9quem0xSYmC0BpT
              Ug+hxw3uH7bsGhQkQnGrAoEwrsyq8M3lbw0pIUvq2S7t8lpHZvM5Ldkp5DM7SlJg
              gBabAqScAeoqssFv4bsWINawn/7JvmFEb4kwep6pIf9Lh/rkCgsgyq2xEh/9LXNs
              eCgyt9zbdU2HwsWnoOUEJ0Z4157ykgOkECCGErKl
              -----END CERTIFICATE-----
          client_cert_path: /opt/als-oracle-pathfinder/secrets/client_cert.pem
          client_key_path: /opt/als-oracle-pathfinder/secrets/client_key.pem
          intermediate_cert_path: /opt/als-oracle-pathfinder/secrets/pathfinder_intermediate_cert.pem
          rejectUnauthorized: false
          root_cert_path: /opt/als-oracle-pathfinder/secrets/pathfinder_cert.pem
    enabled: false
    global: {}
    image:
      command: '["node", "/opt/als-oracle-pathfinder/src/index.js"]'
      imagePullSecrets: []
      pullPolicy: IfNotPresent
      repository: mojaloop/als-oracle-pathfinder
      tag: v11.0.0
    ingress:
      annotations: {}
      enabled: true
      externalPath: /
      hosts:
        api: als-oracle-pathfinder.local
      tls: []
    init:
      enabled: true
      initMysql:
        accountLookup:
          command: mysql -h $db_host -P $db_port -u $db_user --password=$db_password $db_database -e "SET @service_name='$service_name'; source /opt/als-oracle-pathfinder/init-account-lookup.sql;";
          enabled: true
          name: init-account-lookup-mysql
          pullPolicy: IfNotPresent
          repository: mojaloop/als-oracle-pathfinder
          tag: latest
        centralLedger:
          command: mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -e "SET @service_name='$service_name'; source /opt/als-oracle-pathfinder/init-central-ledger.sql;";
          enabled: true
          name: init-central-ledger-mysql
          pullPolicy: IfNotPresent
          repository: mojaloop/als-oracle-pathfinder
          tag: latest
      populateMysql:
        command: echo 'Nothing configured to be populated. Continuing...';
        enabled: true
        name: populate-mysql-tables
        pullPolicy: IfNotPresent
        repository: mysql
        tag: latest
      waitForMysql:
        command: until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;
        name: wait-for-mysql
        pullPolicy: IfNotPresent
        repository: mysql
        tag: latest
    livenessProbe:
      enabled: true
      httpGet:
        path: /
      initialDelaySeconds: 45
      periodSeconds: 15
    nodeSelector: {}
    readinessProbe:
      enabled: true
      httpGet:
        path: /
      initialDelaySeconds: 45
      periodSeconds: 15
    replicaCount: 1
    resources: {}
    service:
      annotations: {}
      external:
        enabled: false
        ip: 10.0.2.2
        ports:
          provisioning:
            externalPort: 3000
            name: http-api
      name: http-api
      port: 80
      type: ClusterIP
    tolerations: []
  enabled: true
  global: {}
  mysql:
    allowRootFrom: '%'
    configFiles:
      node.cnf: |
        [mysqld]
        datadir=/var/lib/mysql
        default_storage_engine=InnoDB
        binlog_format=ROW
        innodb_flush_log_at_trx_commit  = 1
        innodb_flush_method             = O_DIRECT
        innodb_file_per_table           = 1
        innodb_autoinc_lock_mode=2
        bind_address = 0.0.0.0
        wsrep_slave_threads=2
        wsrep_cluster_address=gcomm://
        wsrep_provider=/usr/lib/galera3/libgalera_smm.so
        wsrep_cluster_name=galera
        wsrep_sst_method=xtrabackup-v2
        pxc_strict_mode=DISABLED
        max_connections=999
        max_user_connections=994
        thread_cache_size=999
    enabled: false
    global: {}
    image:
      pullPolicy: IfNotPresent
      repository: percona/percona-xtradb-cluster
      tag: 5.7.19
    logTail: true
    metricsExporter:
      argsOverrides: []
      commandOverrides: []
      enabled: true
      tag: v0.11.0
    mysqlDatabase: account_lookup
    mysqlPassword: OdonPianoX
    mysqlUser: account_lookup
    nameOverride: account-lookup-mysql
    nodeSelector: {}
    persistence:
      accessMode: ReadWriteOnce
      enabled: false
      size: 8Gi
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    prometheus:
      operator:
        enabled: false
        prometheusRule:
          enabled: true
          labels: {}
        serviceMonitor:
          interval: 10s
    replicas: 1
    service:
      externalIPs: []
      percona:
        headless: false
      port: 3306
      type: ClusterIP
    ssl:
      enabled: false
      secret: mysql-ssl-certs
    tolerations: []
central:
  centraleventprocessor:
    affinity: {}
    config:
      PORT: 3080
      central_ledger_admin_host: $release_name-centralledger-service
      central_ledger_admin_port: 80
      hub_participant:
        name: hub
      kafka_host: $release_name-kafka
      kafka_port: 9092
      log_level: info
      log_transport: file
      mongo_database: mojaloop
      mongo_host: $release_name-cep-mongodb
      mongo_password: password
      mongo_port: 27017
      mongo_user: mojaloop
    global:
      config: {}
    image:
      pullPolicy: IfNotPresent
      repository: mojaloop/central-event-processor
      tag: v11.0.1
    ingress:
      annotations: {}
      enabled: true
      externalPath: /
      hosts:
        api: central-event-processor.local
      tls: []
    init:
      enabled: true
      kafka:
        command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
        env: {}
        name: wait-for-kafka
        pullPolicy: IfNotPresent
        repository: solsson/kafka
        tag: latest
      mongodb:
        command: mongo mongodb://$mongo_host:$mongo_port --eval "db.adminCommand('ping')"
        name: wait-for-mongodb
        pullPolicy: IfNotPresent
        repository: bitnami/mongodb
        tag: latest
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 30
      periodSeconds: 15
    mongodb:
      additionalLabels: {}
      affinity: {}
      affinityArbiter: {}
      annotations: {}
      clusterDomain: cluster.local
      configmap: null
      enabled: true
      extraVolumeMounts: []
      extraVolumeMountsArbiter: []
      extraVolumes: []
      extraVolumesArbiter: []
      global:
        config: {}
      image:
        debug: false
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: bitnami/mongodb
        tag: 4.0.3
      ingress:
        certManager: false
        enabled: false
        hosts:
        - name: mongodb.local
          path: /
        tls:
        - hosts:
          - mongodb.local
          secretName: mongodb.local-tls
      initConfigMap: {}
      labels: {}
      livenessProbe:
        enabled: true
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      metrics:
        enabled: false
        extraArgs: ""
        image:
          pullPolicy: IfNotPresent
          registry: docker.io
          repository: forekshub/percona-mongodb-exporter
          tag: latest
        livenessProbe:
          enabled: false
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        podAnnotations:
          prometheus.io/port: "9216"
          prometheus.io/scrape: "true"
        readinessProbe:
          enabled: false
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        serviceMonitor:
          additionalLabels: {}
          alerting:
            additionalLabels: {}
            rules: {}
          enabled: false
      mongodbDatabase: mojaloop
      mongodbDirectoryPerDB: false
      mongodbDisableSystemLog: false
      mongodbEnableIPv6: true
      mongodbExtraFlags: []
      mongodbPassword: password
      mongodbRootPassword: adminpass
      mongodbSystemLogVerbosity: 0
      mongodbUsername: mojaloop
      nameOverride: cep-mongodb
      nodeSelector: {}
      persistence:
        accessModes:
        - ReadWriteOnce
        annotations: {}
        enabled: false
        mountPath: /bitnami/mongodb
        size: 8Gi
        subPath: ""
      podAnnotations: {}
      podLabels: {}
      readinessProbe:
        enabled: true
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      replicaSet:
        enabled: false
        name: rs0
        pdb:
          enabled: true
          minAvailable:
            arbiter: 1
            primary: 1
            secondary: 1
        replicas:
          arbiter: 1
          secondary: 1
        useHostnames: true
      resources: {}
      resourcesArbiter: {}
      securityContext:
        enabled: true
        fsGroup: 1001
        runAsUser: 1001
      service:
        annotations: {}
        port: 27017
        type: ClusterIP
      sidecars: []
      sidecarsArbiter: []
      tolerations: []
      updateStrategy:
        type: RollingUpdate
      usePassword: true
      useStatefulSet: false
      volumePermissions:
        enabled: false
        image:
          pullPolicy: Always
          registry: docker.io
          repository: bitnami/minideb
          tag: buster
        resources: {}
    nodeSelector: {}
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 30
      periodSeconds: 15
    replicaCount: 1
    resources: {}
    service:
      annotations: {}
      external:
        enabled: false
        ip: 10.0.2.2
        ports:
          api:
            externalPort: 3080
            name: central-event-processor
      externalPort: 80
      internalPort: 3080
      name: central-event-processor
      type: ClusterIP
    tolerations: []
  centralledger:
    centralledger-handler-admin-transfer:
      affinity: {}
      config:
        cache_enabled: false
        cache_expires_in_ms: 1000
        cache_max_byte_size: 10000000
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: mysql-cl
        db_idle_timeout_millis: 30000
        db_password: password
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        event_async_override: log,trace
        event_log_filter: audit:*, log:warn, log:error
        event_log_metadata_only: false
        event_trace_state_enabled: true
        event_trace_vendor: mojaloop
        event_traceid_per_vendor: false
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_partitioner: murmur2_random
        kafka_port: 9092
        log_filter: error, warn, info
        log_level: info
        log_transport: file
        objstore_disabled: true
        objstore_uri: mongodb://$release_name-centralledger-obj:27017/mlos
        resource_versions: transfers=1.0,participants=1.0,quotes=1.0
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--admin"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-ledger
            tag: v13.0.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      global: {}
      ingress:
        annotations: {}
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-admin-transfer.local
        tls: []
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: IfNotPresent
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-admin-transfer
          prefix: moja_
          timeout: 5000
        enabled: false
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
      sidecar:
        config:
          event_log_filter: audit:*, log:info, log:warn, log:error
          event_log_grpc_host: localhost
          event_log_grpc_port: 50051
          event_log_metadata_only: true
          log_filter: error, warn, info
          log_level: info
        enabled: false
        image:
          command: '["npm", "run", "start"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/event-sidecar
          tag: v11.0.0
        livenessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 90
          periodSeconds: 15
        readinessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 120
          periodSeconds: 15
        service:
          internalPort: 4001
      tolerations: []
    centralledger-handler-timeout:
      affinity: {}
      config:
        cache_enabled: false
        cache_expires_in_ms: 1000
        cache_max_byte_size: 10000000
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: mysql-cl
        db_idle_timeout_millis: 30000
        db_password: password
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        event_async_override: log,trace
        event_log_filter: audit:*, log:warn, log:error
        event_log_metadata_only: false
        event_trace_state_enabled: true
        event_trace_vendor: mojaloop
        event_traceid_per_vendor: false
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_partitioner: murmur2_random
        kafka_port: 9092
        log_filter: error, warn, info
        log_level: info
        log_transport: file
        objstore_disabled: true
        objstore_uri: mongodb://$release_name-centralledger-obj:27017/mlos
        resource_versions: transfers=1.0,participants=1.0,quotes=1.0
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--timeout"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-ledger
            tag: v13.0.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      global: {}
      ingress:
        annotations: {}
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-timeout.local
        tls: []
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: IfNotPresent
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-timeout
          prefix: moja_
          timeout: 5000
        enabled: false
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
      sidecar:
        config:
          event_log_filter: audit:*, log:info, log:warn, log:error
          event_log_grpc_host: localhost
          event_log_grpc_port: 50051
          event_log_metadata_only: true
          log_filter: error, warn, info
          log_level: info
        enabled: true
        image:
          command: '["npm", "run", "start"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/event-sidecar
          tag: v11.0.0
        livenessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 90
          periodSeconds: 15
        readinessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 120
          periodSeconds: 15
        service:
          internalPort: 4001
      tolerations: []
    centralledger-handler-transfer-fulfil:
      affinity: {}
      config:
        cache_enabled: false
        cache_expires_in_ms: 1000
        cache_max_byte_size: 10000000
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: mysql-cl
        db_idle_timeout_millis: 30000
        db_password: password
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        event_async_override: log,trace
        event_log_filter: audit:*, log:warn, log:error
        event_log_metadata_only: false
        event_trace_state_enabled: true
        event_trace_vendor: mojaloop
        event_traceid_per_vendor: false
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_partitioner: murmur2_random
        kafka_port: 9092
        log_filter: error, warn, info
        log_level: info
        log_transport: file
        objstore_disabled: true
        objstore_uri: mongodb://$release_name-centralledger-obj:27017/mlos
        resource_versions: transfers=1.0,participants=1.0,quotes=1.0
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--fulfil"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-ledger
            tag: v13.0.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      global: {}
      ingress:
        annotations: {}
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-fulfil.local
        tls: []
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: IfNotPresent
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-fulfil
          prefix: moja_
          timeout: 5000
        enabled: true
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
      sidecar:
        config:
          event_log_filter: audit:*, log:info, log:warn, log:error
          event_log_grpc_host: localhost
          event_log_grpc_port: 50051
          event_log_metadata_only: true
          log_filter: error, warn, info
          log_level: info
        enabled: true
        image:
          command: '["npm", "run", "start"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/event-sidecar
          tag: v11.0.0
        livenessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 90
          periodSeconds: 15
        readinessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 120
          periodSeconds: 15
        service:
          internalPort: 4001
      tolerations: []
    centralledger-handler-transfer-get:
      affinity: {}
      config:
        cache_enabled: false
        cache_expires_in_ms: 1000
        cache_max_byte_size: 10000000
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: mysql-cl
        db_idle_timeout_millis: 30000
        db_password: password
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        event_async_override: log,trace
        event_log_filter: audit:*, log:warn, log:error
        event_log_metadata_only: false
        event_trace_state_enabled: true
        event_trace_vendor: mojaloop
        event_traceid_per_vendor: false
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_partitioner: murmur2_random
        kafka_port: 9092
        log_filter: error, warn, info
        log_level: info
        log_transport: file
        objstore_disabled: true
        objstore_uri: mongodb://$release_name-centralledger-obj:27017/mlos
        resource_versions: transfers=1.0,participants=1.0,quotes=1.0
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--get"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-ledger
            tag: v13.0.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      global: {}
      ingress:
        annotations: {}
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-get.local
        tls: []
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: IfNotPresent
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-get
          prefix: moja_
          timeout: 5000
        enabled: false
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
      sidecar:
        config:
          event_log_filter: audit:*, log:info, log:warn, log:error
          event_log_grpc_host: localhost
          event_log_grpc_port: 50051
          event_log_metadata_only: true
          log_filter: error, warn, info
          log_level: info
        enabled: false
        image:
          command: '["npm", "run", "start"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/event-sidecar
          tag: v11.0.0
        livenessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 90
          periodSeconds: 15
        readinessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 120
          periodSeconds: 15
        service:
          internalPort: 4001
      tolerations: []
    centralledger-handler-transfer-position:
      affinity: {}
      config:
        cache_enabled: false
        cache_expires_in_ms: 1000
        cache_max_byte_size: 10000000
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: mysql-cl
        db_idle_timeout_millis: 30000
        db_password: password
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        event_async_override: log,trace
        event_log_filter: audit:*, log:warn, log:error
        event_log_metadata_only: false
        event_trace_state_enabled: true
        event_trace_vendor: mojaloop
        event_traceid_per_vendor: false
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_partitioner: murmur2_random
        kafka_port: 9092
        log_filter: error, warn, info
        log_level: info
        log_transport: file
        objstore_disabled: true
        objstore_uri: mongodb://$release_name-centralledger-obj:27017/mlos
        resource_versions: transfers=1.0,participants=1.0,quotes=1.0
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--position"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-ledger
            tag: v13.0.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      global: {}
      ingress:
        annotations: {}
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-position.local
        tls: []
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: IfNotPresent
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-position
          prefix: moja_
          timeout: 5000
        enabled: true
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
      sidecar:
        config:
          event_log_filter: audit:*, log:info, log:warn, log:error
          event_log_grpc_host: localhost
          event_log_grpc_port: 50051
          event_log_metadata_only: true
          log_filter: error, warn, info
          log_level: info
        enabled: true
        image:
          command: '["npm", "run", "start"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/event-sidecar
          tag: v11.0.0
        livenessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 90
          periodSeconds: 15
        readinessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 120
          periodSeconds: 15
        service:
          internalPort: 4001
      tolerations: []
    centralledger-handler-transfer-prepare:
      affinity: {}
      config:
        cache_enabled: false
        cache_expires_in_ms: 1000
        cache_max_byte_size: 10000000
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: mysql-cl
        db_idle_timeout_millis: 30000
        db_password: password
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        enable_on_us_transfers: false
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        event_async_override: log,trace
        event_log_filter: audit:*, log:warn, log:error
        event_log_metadata_only: false
        event_trace_state_enabled: true
        event_trace_vendor: mojaloop
        event_traceid_per_vendor: false
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_partitioner: murmur2_random
        kafka_port: 9092
        log_filter: error, warn, info
        log_level: info
        log_transport: file
        objstore_disabled: true
        objstore_uri: mongodb://$release_name-centralledger-obj:27017/mlos
        resource_versions: transfers=1.0,participants=1.0,quotes=1.0
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--prepare"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-ledger
            tag: v13.0.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      global: {}
      ingress:
        annotations: {}
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-prepare.local
        tls: []
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: IfNotPresent
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-prepare
          prefix: moja_
          timeout: 5000
        enabled: true
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
      sidecar:
        config:
          event_log_filter: audit:*, log:info, log:warn, log:error
          event_log_grpc_host: localhost
          event_log_grpc_port: 50051
          event_log_metadata_only: true
          log_filter: error, warn, info
          log_level: info
        enabled: true
        image:
          command: '["npm", "run", "start"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/event-sidecar
          tag: v11.0.0
        livenessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 90
          periodSeconds: 15
        readinessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 120
          periodSeconds: 15
        service:
          internalPort: 4001
      tolerations: []
    centralledger-service:
      affinity: {}
      config:
        cache_enabled: false
        cache_expires_in_ms: 1000
        cache_max_byte_size: 10000000
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: mysql-cl
        db_idle_timeout_millis: 30000
        db_password: password
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        event_async_override: log,trace
        event_log_filter: audit:*, log:warn, log:error
        event_log_metadata_only: false
        event_trace_state_enabled: true
        event_trace_vendor: mojaloop
        event_traceid_per_vendor: false
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_partitioner: murmur2_random
        kafka_port: 9092
        log_events_locally_enabled: false
        log_filter: error, warn, info
        log_level: info
        log_transport: file
        objstore_disabled: true
        objstore_uri: mongodb://$release_name-centralledger-obj:27017/mlos
        resource_versions: transfers=1.0,participants=1.0,quotes=1.0
      containers:
        api:
          image:
            command: '["node", "src/api/index.js"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-ledger
            tag: v13.1.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      global: {}
      ingress:
        annotations: {}
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger.local
        tls: []
        type: http
      init:
        enabled: true
        migration:
          command: npm run migrate
          config:
            run_data_migration: true
          enabled: true
          name: run-migration
        mysql:
          command: until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: IfNotPresent
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-service
          prefix: moja_
          timeout: 5000
        enabled: true
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
      sidecar:
        config:
          event_log_filter: audit:*, log:info, log:warn, log:error
          event_log_grpc_host: localhost
          event_log_grpc_port: 50051
          event_log_metadata_only: true
          log_filter: error, warn, info
          log_level: info
        enabled: false
        image:
          command: '["npm", "run", "start"]'
          pullPolicy: IfNotPresent
          repository: mojaloop/event-sidecar
          tag: v11.0.0
        livenessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 90
          periodSeconds: 15
        readinessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 120
          periodSeconds: 15
        service:
          internalPort: 4001
      tolerations: []
    enabled: true
    global: {}
    kafka:
      additionalPorts: {}
      affinity: {}
      configJob:
        backoffLimit: 6
      configurationOverrides:
        confluent.support.metrics.enable: false
        default.replication.factor: 1
        offsets.topic.replication.factor: 1
      enabled: true
      envOverrides: {}
      external:
        distinct: false
        dns:
          useExternal: true
          useInternal: false
        domain: cluster.local
        enabled: false
        firstListenerPort: 31090
        init:
          image: lwolf/kubectl_deployer
          imagePullPolicy: IfNotPresent
          imageTag: "0.4"
        loadBalancerIP: []
        loadBalancerSourceRanges: []
        servicePort: 19092
        type: NodePort
      global: {}
      headless:
        port: 9092
      image: confluentinc/cp-kafka
      imagePullPolicy: IfNotPresent
      imageTag: 5.0.1
      jmx:
        configMap:
          enabled: true
          overrideConfig: {}
          overrideName: ""
        port: 5555
        whitelistObjectNames:
        - kafka.controller:*
        - kafka.server:*
        - java.lang:*
        - kafka.network:*
        - kafka.log:*
      kafkaHeapOptions: -Xmx1G -Xms1G
      logSubPath: logs
      nameOverride: kafka
      nodeSelector: {}
      persistence:
        enabled: false
        mountPath: /opt/kafka/data
        size: 1Gi
      podAnnotations: {}
      podDisruptionBudget: {}
      podLabels: {}
      podManagementPolicy: OrderedReady
      prometheus:
        jmx:
          enabled: true
          image: solsson/kafka-prometheus-jmx-exporter@sha256
          imageTag: a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8
          interval: 10s
          port: 5556
          resources: {}
          scrapeTimeout: 10s
        kafka:
          affinity: {}
          enabled: true
          image: danielqsj/kafka-exporter
          imageTag: v1.0.1
          interval: 10s
          nodeSelector: {}
          port: 9308
          resources: {}
          scrapeTimeout: 10s
          tolerations: []
        operator:
          enabled: false
          prometheusRule:
            enabled: false
            namespace: monitoring
            releaseNamespace: false
            rules:
            - alert: KafkaNoActiveControllers
              annotations:
                message: The number of active controllers in {{ "{{" }} $labels.namespace {{ "}}" }} is less than 1. This usually means that some of the Kafka nodes aren't communicating properly. If it doesn't resolve itself you can try killing the pods (one by one whilst monitoring the under-replicated partitions graph).
              expr: max(kafka_controller_kafkacontroller_activecontrollercount_value) by (namespace) < 1
              for: 5m
              labels:
                severity: critical
            - alert: KafkaMultipleActiveControllers
              annotations:
                message: The number of active controllers in {{ "{{" }} $labels.namespace {{ "}}" }} is greater than 1. This usually means that some of the Kafka nodes aren't communicating properly. If it doesn't resolve itself you can try killing the pods (one by one whilst monitoring the under-replicated partitions graph).
              expr: max(kafka_controller_kafkacontroller_activecontrollercount_value) by (namespace) > 1
              for: 5m
              labels:
                severity: critical
            selector:
              prometheus: kube-prometheus
          serviceMonitor:
            namespace: monitoring
            releaseNamespace: false
            selector:
              prometheus: kube-prometheus
      rbac:
        enabled: true
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      replicas: 1
      resources: {}
      securityContext: {}
      terminationGracePeriodSeconds: 60
      testsEnabled: false
      tolerations: []
      topics: []
      updateStrategy:
        type: OnDelete
      zookeeper:
        affinity: {}
        command:
        - /bin/bash
        - -xec
        - /config-scripts/run
        enabled: true
        env:
          JMXAUTH: "false"
          JMXDISABLE: "false"
          JMXPORT: 1099
          JMXSSL: "false"
          ZK_HEAP_SIZE: 1G
          ZK_SYNC_LIMIT: 10
          ZK_TICK_TIME: 2000
          ZOO_AUTOPURGE_PURGEINTERVAL: 0
          ZOO_AUTOPURGE_SNAPRETAINCOUNT: 3
          ZOO_INIT_LIMIT: 5
          ZOO_MAX_CLIENT_CNXNS: 60
          ZOO_PORT: 2181
          ZOO_STANDALONE_ENABLED: false
          ZOO_TICK_TIME: 2000
        exporters:
          jmx:
            config:
              lowercaseOutputName: false
              rules:
              - name: zookeeper_$2
                pattern: org.apache.ZooKeeperService<name0=ReplicatedServer_id(\d+)><>(\w+)
              - labels:
                  replicaId: $2
                name: zookeeper_$3
                pattern: org.apache.ZooKeeperService<name0=ReplicatedServer_id(\d+), name1=replica.(\d+)><>(\w+)
              - labels:
                  memberType: $3
                  replicaId: $2
                name: zookeeper_$4
                pattern: org.apache.ZooKeeperService<name0=ReplicatedServer_id(\d+), name1=replica.(\d+), name2=(\w+)><>(\w+)
              - labels:
                  memberType: $3
                  replicaId: $2
                name: zookeeper_$4_$5
                pattern: org.apache.ZooKeeperService<name0=ReplicatedServer_id(\d+), name1=replica.(\d+), name2=(\w+), name3=(\w+)><>(\w+)
              startDelaySeconds: 30
            enabled: false
            env: {}
            image:
              pullPolicy: IfNotPresent
              repository: sscaling/jmx-prometheus-exporter
              tag: 0.3.0
            livenessProbe:
              failureThreshold: 8
              httpGet:
                path: /metrics
                port: jmxxp
              initialDelaySeconds: 30
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 60
            path: /metrics
            ports:
              jmxxp:
                containerPort: 9404
                protocol: TCP
            readinessProbe:
              failureThreshold: 8
              httpGet:
                path: /metrics
                port: jmxxp
              initialDelaySeconds: 30
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 60
            resources: {}
            serviceMonitor:
              interval: 30s
              scheme: http
              scrapeTimeout: 30s
          zookeeper:
            config:
              logLevel: info
              resetOnScrape: "true"
            enabled: false
            env: {}
            image:
              pullPolicy: IfNotPresent
              repository: josdotso/zookeeper-exporter
              tag: v1.1.2
            livenessProbe:
              failureThreshold: 8
              httpGet:
                path: /metrics
                port: zookeeperxp
              initialDelaySeconds: 30
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 60
            path: /metrics
            ports:
              zookeeperxp:
                containerPort: 9141
                protocol: TCP
            readinessProbe:
              failureThreshold: 8
              httpGet:
                path: /metrics
                port: zookeeperxp
              initialDelaySeconds: 30
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 60
            resources: {}
            serviceMonitor:
              interval: 30s
              scheme: http
              scrapeTimeout: 30s
        global: {}
        headless:
          annotations: {}
        heap: 1G
        image:
          PullPolicy: IfNotPresent
          pullPolicy: IfNotPresent
          repository: zookeeper
          tag: 3.5.5
        imagePullPolicy: IfNotPresent
        jobs:
          chroots:
            activeDeadlineSeconds: 300
            backoffLimit: 5
            completions: 1
            config:
              create: []
            enabled: false
            env: []
            parallelism: 1
            resources: {}
            restartPolicy: Never
        nodeSelector: {}
        persistence:
          accessMode: ReadWriteOnce
          enabled: false
          size: 5Gi
        podAnnotations: {}
        podDisruptionBudget:
          maxUnavailable: 1
        podLabels: {}
        port: 2181
        ports:
          client:
            containerPort: 2181
            protocol: TCP
          election:
            containerPort: 3888
            protocol: TCP
          server:
            containerPort: 2888
            protocol: TCP
        priorityClassName: ""
        prometheus:
          serviceMonitor:
            enabled: false
            selector: {}
        replicaCount: 1
        resources: {}
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        service:
          annotations: {}
          ports:
            client:
              port: 2181
              protocol: TCP
              targetPort: client
          type: ClusterIP
        terminationGracePeriodSeconds: 1800
        tolerations: []
        updateStrategy:
          type: RollingUpdate
        url: ""
    mysql:
      allowRootFrom: '%'
      configFiles:
        node.cnf: |
          [mysqld]
          datadir=/var/lib/mysql
          default_storage_engine=InnoDB
          binlog_format=ROW
          innodb_flush_log_at_trx_commit  = 1
          innodb_flush_method             = O_DIRECT
          innodb_file_per_table           = 1
          innodb_autoinc_lock_mode=2
          bind_address = 0.0.0.0
          wsrep_slave_threads=2
          wsrep_cluster_address=gcomm://
          wsrep_provider=/usr/lib/galera3/libgalera_smm.so
          wsrep_cluster_name=galera
          wsrep_sst_method=xtrabackup-v2
          pxc_strict_mode=DISABLED
      enabled: false
      global: {}
      image:
        pullPolicy: IfNotPresent
        repository: percona/percona-xtradb-cluster
        tag: 5.7.19
      logTail: true
      metricsExporter:
        argsOverrides: []
        commandOverrides: []
        enabled: true
        tag: v0.11.0
      mysqlDatabase: central_ledger
      mysqlPassword: oyMxgZChuu
      mysqlUser: central_ledger
      nameOverride: centralledger-mysql
      nodeSelector: {}
      persistence:
        accessMode: ReadWriteOnce
        enabled: false
        size: 8Gi
      podAnnotations: {}
      podDisruptionBudget:
        enabled: false
        maxUnavailable: 1
      prometheus:
        operator:
          enabled: false
          prometheusRule:
            enabled: true
            labels: {}
          serviceMonitor:
            interval: 10s
      replicas: 1
      service:
        externalIPs: []
        percona:
          headless: false
        port: 3306
        type: ClusterIP
      ssl:
        enabled: false
        secret: mysql-ssl-certs
      tolerations: []
    nameOverride: centralledger
    percona-xtradb-cluster:
      allowRootFrom: '%'
      configFiles:
        node.cnf: |+
          [mysqld]
          datadir=/var/lib/mysql
          default_storage_engine=InnoDB
          binlog_format=ROW
          innodb_flush_log_at_trx_commit  = 0
          innodb_flush_method             = O_DIRECT
          innodb_file_per_table           = 1
          innodb_autoinc_lock_mode=2
          bind_address = 0.0.0.0
          wsrep_slave_threads=2
          wsrep_cluster_address=gcomm://
          wsrep_provider=/usr/lib/galera3/libgalera_smm.so
          wsrep_cluster_name=galera
          wsrep_sst_method=xtrabackup-v2

      global: {}
      image:
        pullPolicy: IfNotPresent
        repository: percona/percona-xtradb-cluster
        tag: 5.7.19
      logTail: true
      metricsExporter:
        argsOverrides: []
        commandOverrides: []
        enabled: false
      nodeSelector: {}
      persistence:
        accessMode: ReadWriteOnce
        enabled: false
        size: 8Gi
      podAnnotations: {}
      podDisruptionBudget:
        enabled: false
        maxUnavailable: 1
      prometheus:
        operator:
          enabled: false
          prometheusRule:
            enabled: true
            labels: {}
          serviceMonitor:
            interval: 10s
      replicas: 3
      service:
        percona:
          headless: false
      ssl:
        enabled: false
        secret: mysql-ssl-certs
      tolerations: []
  centralsettlement:
    centralsettlement-handler-settlementwindow:
      affinity: {}
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: mysql-cl
        db_idle_timeout_millis: 30000
        db_password: password
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        handlers:
          api:
            disabled: false
          disabled: false
          settings:
            scripts_folder: scripts/transferSettlementTemp
        hub_participant:
          id: 1
          name: hub
        kafka:
          consumer:
            notification:
              close:
                config:
                  options:
                    batchSize: 1
                    consumeTimeout: 1000
                    messageAsJSON: true
                    messageCharset: utf8
                    mode: 2
                    pollFrequency: 10
                    recursiveTimeout: 100
                    sync: true
                  rdkafkaConf:
                    socket_keepalive_enable: true
              event:
                config:
                  options:
                    batchSize: 1
                    consumeTimeout: 1000
                    messageAsJSON: true
                    messageCharset: utf8
                    mode: 2
                    pollFrequency: 10
                    recursiveTimeout: 100
                    sync: true
                  rdkafkaConf:
                    socket_keepalive_enable: true
            settlementwindow:
              close:
                config:
                  options:
                    batchSize: 1
                    consumeTimeout: 1000
                    messageAsJSON: true
                    messageCharset: utf8
                    mode: 2
                    pollFrequency: 10
                    recursiveTimeout: 100
                    sync: true
                  rdkafkaConf:
                    socket_keepalive_enable: true
          producer:
            notification:
              event:
                config:
                  options:
                    messageCharset: utf8
                  rdkafkaConf:
                    api_version_request: true
                    batch_num_messages: 100
                    broker_version_fallback: 0.10.1.0
                    compression_codec: none
                    dr_cb: false
                    event_cb: true
                    message_send_max_retries: 2
                    queue_buffering_max_ms: 1
                    retry_backoff_ms: 100
                    socket_blocking_max_ms: 1
                    socket_keepalive_enable: true
                  topicConf:
                    partitioner: murmur2_random
                    request_required_acks: all
            settlementwindow:
              close:
                config:
                  options:
                    messageCharset: utf8
                  rdkafkaConf:
                    dr_cb: true
                    event_cb: true
                    socket_keepalive_enable: true
                  topicConf:
                    partitioner: murmur2_random
                    request_required_acks: all
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        log_transport: file
        rules: {}
        window_aggregation:
          retry_count: 3
          retry_interval: 3000
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "h", "--settlementwindow"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-settlement
            tag: v12.0.3
          livenessProbe:
            enabled: true
            httpGet:
              path: /v2/health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /v2/health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            annotations: {}
            external:
              enabled: false
              ip: 10.0.2.2
              ports:
                api:
                  externalPort: 3007
                  name: http-api
            ports:
              api:
                externalPort: 80
                internalPort: 3007
                name: http-api
            type: ClusterIP
      enabled: true
      global: {}
      ingress:
        annotations: {}
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-settlement-settlementwindow.local
        tls: []
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-settlement-handler-settlementwindow
          prefix: moja_
          timeout: 5000
        enabled: false
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3007
              name: http-api
        ports:
          api:
            externalPort: 80
            internalPort: 3007
            name: http-api
        type: ClusterIP
      sidecar:
        enabled: false
      tolerations: []
    centralsettlement-handler-transfersettlement:
      affinity: {}
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        handlers:
          api:
            disabled: false
          disabled: false
          settings:
            scripts_folder: scripts/transferSettlementTemp
        hub_participant:
          id: 1
          name: hub
        kafka:
          consumer:
            notification:
              close:
                config:
                  options:
                    batchSize: 1
                    consumeTimeout: 1000
                    messageAsJSON: true
                    messageCharset: utf8
                    mode: 2
                    pollFrequency: 10
                    recursiveTimeout: 100
                    sync: true
                  rdkafkaConf:
                    socket_keepalive_enable: true
              event:
                config:
                  options:
                    batchSize: 1
                    consumeTimeout: 1000
                    messageAsJSON: true
                    messageCharset: utf8
                    mode: 2
                    pollFrequency: 10
                    recursiveTimeout: 100
                    sync: true
                  rdkafkaConf:
                    socket_keepalive_enable: true
            settlementwindow:
              close:
                config:
                  options:
                    batchSize: 1
                    consumeTimeout: 1000
                    messageAsJSON: true
                    messageCharset: utf8
                    mode: 2
                    pollFrequency: 10
                    recursiveTimeout: 100
                    sync: true
                  rdkafkaConf:
                    socket_keepalive_enable: true
          producer:
            notification:
              event:
                config:
                  options:
                    messageCharset: utf8
                  rdkafkaConf:
                    api_version_request: true
                    batch_num_messages: 100
                    broker_version_fallback: 0.10.1.0
                    compression_codec: none
                    dr_cb: false
                    event_cb: true
                    message_send_max_retries: 2
                    queue_buffering_max_ms: 1
                    retry_backoff_ms: 100
                    socket_blocking_max_ms: 1
                    socket_keepalive_enable: true
                  topicConf:
                    partitioner: murmur2_random
                    request_required_acks: all
            settlementwindow:
              close:
                config:
                  options:
                    messageCharset: utf8
                  rdkafkaConf:
                    dr_cb: true
                    event_cb: true
                    socket_keepalive_enable: true
                  topicConf:
                    partitioner: murmur2_random
                    request_required_acks: all
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        log_transport: file
        rules:
          interchangeFeeCalculation.js: |
            /* eslint-disable no-undef */
            // ********************************************************
            // Name: Interchange fee calculation
            // Type: notification
            // Action: commit
            // Status: success
            // Start: 2020-06-01T00:00:00.000Z
            // End: 2100-12-31T23:59:59.999Z
            // Description: This script calculates the interchange fees between DFSPs where the account type is "Wallet"
            // ********************************************************

            // ## Globals:
            // payload: The contents of the message from the Kafka topic.
            // transfer: The transfer object.

            // # Functions:
            // ## Data retrieval functions:
            // getTransfer(transferId): Retrieves a mojaloop transfer from the central-ledger API.

            // ## Helper functions:
            // getExtensionValue(list, key): Gets a value from an extension list
            // log(message): allows the script to log to standard out for debugging purposes

            // Math functions:
            // multiply(number1, number2, decimalPlaces): Uses ml-number to handle multiplication of money values

            // Ledger functions:
            // addLedgerEntry: Adds a debit and credit ledger entry to the specified account to the specified DFSPs

            log('Running - interchangeFeeCalculation')

            log(JSON.stringify(transfer))
            const payerFspId = transfer.payer.partyIdInfo.fspId
            const payeeFspId = transfer.payee.partyIdInfo.fspId

            if ((payeeFspId !== payerFspId) &&
              (getExtensionValue(transfer.payee.partyIdInfo.extensionList.extension, 'accountType') === 'Wallet' &&
                getExtensionValue(transfer.payer.partyIdInfo.extensionList.extension, 'accountType') === 'Wallet') &&
              (transfer.transactionType.scenario === 'TRANSFER' &&
                transfer.transactionType.initiator === 'PAYER' &&
                transfer.transactionType.initiatorType === 'CONSUMER')) {
              log(`Adding an interchange fee for Wallet to Wallet from ${payerFspId} to ${payeeFspId}`)
              addLedgerEntry(payload.id, 'INTERCHANGE_FEE', // Ledger account type Id
                'INTERCHANGE_FEE', // Ledger entry type Id
                multiply(transfer.amount.amount, 0.006, 2),
                transfer.amount.currency,
                payerFspId,
                payeeFspId)
            }
        window_aggregation:
          retry_count: 3
          retry_interval: 3000
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "h", "--transfersettlement"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-settlement
            tag: v12.0.3
          livenessProbe:
            enabled: true
            httpGet:
              path: /v2/health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /v2/health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            annotations: {}
            external:
              enabled: false
              ip: 10.0.2.2
              ports:
                api:
                  externalPort: 3007
                  name: http-api
            ports:
              api:
                externalPort: 80
                internalPort: 3007
                name: http-api
            type: ClusterIP
      enabled: false
      global: {}
      ingress:
        annotations: {}
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-settlement-transfersettlement.local
        tls: []
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-settlement-handler-transfersettlement
          prefix: moja_
          timeout: 5000
        enabled: false
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3007
              name: http-api
        ports:
          api:
            externalPort: 80
            internalPort: 3007
            name: http-api
        type: ClusterIP
      sidecar:
        enabled: false
      tolerations: []
    centralsettlement-service:
      affinity: {}
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: mysql-cl
        db_idle_timeout_millis: 30000
        db_password: password
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        handlers:
          api:
            disabled: false
          disabled: true
          settings:
            scripts_folder: scripts/transferSettlementTemp
        hub_participant:
          id: 1
          name: hub
        kafka:
          consumer:
            notification:
              close:
                config:
                  options:
                    batchSize: 1
                    consumeTimeout: 1000
                    messageAsJSON: true
                    messageCharset: utf8
                    mode: 2
                    pollFrequency: 10
                    recursiveTimeout: 100
                    sync: true
                  rdkafkaConf:
                    socket_keepalive_enable: true
              event:
                config:
                  options:
                    batchSize: 1
                    consumeTimeout: 1000
                    messageAsJSON: true
                    messageCharset: utf8
                    mode: 2
                    pollFrequency: 10
                    recursiveTimeout: 100
                    sync: true
                  rdkafkaConf:
                    socket_keepalive_enable: true
            settlementwindow:
              close:
                config:
                  options:
                    batchSize: 1
                    consumeTimeout: 1000
                    messageAsJSON: true
                    messageCharset: utf8
                    mode: 2
                    pollFrequency: 10
                    recursiveTimeout: 100
                    sync: true
                  rdkafkaConf:
                    socket_keepalive_enable: true
          producer:
            notification:
              event:
                config:
                  options:
                    messageCharset: utf8
                  rdkafkaConf:
                    api_version_request: true
                    batch_num_messages: 100
                    broker_version_fallback: 0.10.1.0
                    compression_codec: none
                    dr_cb: false
                    event_cb: true
                    message_send_max_retries: 2
                    queue_buffering_max_ms: 1
                    retry_backoff_ms: 100
                    socket_blocking_max_ms: 1
                    socket_keepalive_enable: true
                  topicConf:
                    partitioner: murmur2_random
                    request_required_acks: all
            settlementwindow:
              close:
                config:
                  options:
                    messageCharset: utf8
                  rdkafkaConf:
                    dr_cb: true
                    event_cb: true
                    socket_keepalive_enable: true
                  topicConf:
                    partitioner: murmur2_random
                    request_required_acks: all
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        log_transport: file
        rules: {}
        window_aggregation:
          retry_count: 3
          retry_interval: 3000
      containers:
        api:
          image:
            command: '["node", "src/api/index.js"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-settlement
            tag: v12.0.3
          livenessProbe:
            enabled: true
            httpGet:
              path: /v2/health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /v2/health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            annotations: {}
            external:
              enabled: false
              ip: 10.0.2.2
              ports:
                api:
                  externalPort: 3007
                  name: http-api
            ports:
              api:
                externalPort: 80
                internalPort: 3007
                name: http-api
            type: ClusterIP
      enabled: true
      global: {}
      ingress:
        annotations: {}
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-settlement-service.local
        tls: []
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-settlement-service
          prefix: moja_
          timeout: 5000
        enabled: false
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3007
              name: http-api
        ports:
          api:
            externalPort: 80
            internalPort: 3007
            name: http-api
        type: ClusterIP
      sidecar:
        enabled: false
      tolerations: []
    global: {}
    kafka:
      additionalPorts: {}
      affinity: {}
      configJob:
        backoffLimit: 6
      configurationOverrides:
        confluent.support.metrics.enable: false
      enabled: false
      envOverrides: {}
      external:
        distinct: false
        dns:
          useExternal: true
          useInternal: false
        domain: cluster.local
        enabled: false
        firstListenerPort: 31090
        init:
          image: lwolf/kubectl_deployer
          imagePullPolicy: IfNotPresent
          imageTag: "0.4"
        loadBalancerIP: []
        loadBalancerSourceRanges: []
        servicePort: 19092
        type: NodePort
      global: {}
      headless:
        port: 9092
      image: confluentinc/cp-kafka
      imagePullPolicy: IfNotPresent
      imageTag: 5.0.1
      jmx:
        configMap:
          enabled: true
          overrideConfig: {}
          overrideName: ""
        port: 5555
        whitelistObjectNames:
        - kafka.controller:*
        - kafka.server:*
        - java.lang:*
        - kafka.network:*
        - kafka.log:*
      kafkaHeapOptions: -Xmx1G -Xms1G
      logSubPath: logs
      nodeSelector: {}
      persistence:
        enabled: true
        mountPath: /opt/kafka/data
        size: 1Gi
      podAnnotations: {}
      podDisruptionBudget: {}
      podLabels: {}
      podManagementPolicy: OrderedReady
      prometheus:
        jmx:
          enabled: false
          image: solsson/kafka-prometheus-jmx-exporter@sha256
          imageTag: a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8
          interval: 10s
          port: 5556
          resources: {}
          scrapeTimeout: 10s
        kafka:
          affinity: {}
          enabled: false
          image: danielqsj/kafka-exporter
          imageTag: v1.2.0
          interval: 10s
          nodeSelector: {}
          port: 9308
          resources: {}
          scrapeTimeout: 10s
          tolerations: []
        operator:
          enabled: false
          prometheusRule:
            enabled: false
            namespace: monitoring
            releaseNamespace: false
            rules:
            - alert: KafkaNoActiveControllers
              annotations:
                message: The number of active controllers in {{ "{{" }} $labels.namespace {{ "}}" }} is less than 1. This usually means that some of the Kafka nodes aren't communicating properly. If it doesn't resolve itself you can try killing the pods (one by one whilst monitoring the under-replicated partitions graph).
              expr: max(kafka_controller_kafkacontroller_activecontrollercount_value) by (namespace) < 1
              for: 5m
              labels:
                severity: critical
            - alert: KafkaMultipleActiveControllers
              annotations:
                message: The number of active controllers in {{ "{{" }} $labels.namespace {{ "}}" }} is greater than 1. This usually means that some of the Kafka nodes aren't communicating properly. If it doesn't resolve itself you can try killing the pods (one by one whilst monitoring the under-replicated partitions graph).
              expr: max(kafka_controller_kafkacontroller_activecontrollercount_value) by (namespace) > 1
              for: 5m
              labels:
                severity: critical
            selector:
              prometheus: kube-prometheus
          serviceMonitor:
            namespace: monitoring
            releaseNamespace: false
            selector:
              prometheus: kube-prometheus
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      replicas: 3
      resources: {}
      securityContext: {}
      terminationGracePeriodSeconds: 60
      testsEnabled: true
      tolerations: []
      topics: []
      updateStrategy:
        type: OnDelete
      zookeeper:
        affinity: {}
        command:
        - /bin/bash
        - -xec
        - /config-scripts/run
        enabled: true
        env:
          JMXAUTH: "false"
          JMXDISABLE: "false"
          JMXPORT: 1099
          JMXSSL: "false"
          ZK_HEAP_SIZE: 1G
          ZK_SYNC_LIMIT: 10
          ZK_TICK_TIME: 2000
          ZOO_AUTOPURGE_PURGEINTERVAL: 0
          ZOO_AUTOPURGE_SNAPRETAINCOUNT: 3
          ZOO_INIT_LIMIT: 5
          ZOO_MAX_CLIENT_CNXNS: 60
          ZOO_PORT: 2181
          ZOO_STANDALONE_ENABLED: false
          ZOO_TICK_TIME: 2000
        exporters:
          jmx:
            config:
              lowercaseOutputName: false
              rules:
              - name: zookeeper_$2
                pattern: org.apache.ZooKeeperService<name0=ReplicatedServer_id(\d+)><>(\w+)
              - labels:
                  replicaId: $2
                name: zookeeper_$3
                pattern: org.apache.ZooKeeperService<name0=ReplicatedServer_id(\d+), name1=replica.(\d+)><>(\w+)
              - labels:
                  memberType: $3
                  replicaId: $2
                name: zookeeper_$4
                pattern: org.apache.ZooKeeperService<name0=ReplicatedServer_id(\d+), name1=replica.(\d+), name2=(\w+)><>(\w+)
              - labels:
                  memberType: $3
                  replicaId: $2
                name: zookeeper_$4_$5
                pattern: org.apache.ZooKeeperService<name0=ReplicatedServer_id(\d+), name1=replica.(\d+), name2=(\w+), name3=(\w+)><>(\w+)
              startDelaySeconds: 30
            enabled: false
            env: {}
            image:
              pullPolicy: IfNotPresent
              repository: sscaling/jmx-prometheus-exporter
              tag: 0.3.0
            livenessProbe:
              failureThreshold: 8
              httpGet:
                path: /metrics
                port: jmxxp
              initialDelaySeconds: 30
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 60
            path: /metrics
            ports:
              jmxxp:
                containerPort: 9404
                protocol: TCP
            readinessProbe:
              failureThreshold: 8
              httpGet:
                path: /metrics
                port: jmxxp
              initialDelaySeconds: 30
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 60
            resources: {}
            serviceMonitor:
              interval: 30s
              scheme: http
              scrapeTimeout: 30s
          zookeeper:
            config:
              logLevel: info
              resetOnScrape: "true"
            enabled: false
            env: {}
            image:
              pullPolicy: IfNotPresent
              repository: josdotso/zookeeper-exporter
              tag: v1.1.2
            livenessProbe:
              failureThreshold: 8
              httpGet:
                path: /metrics
                port: zookeeperxp
              initialDelaySeconds: 30
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 60
            path: /metrics
            ports:
              zookeeperxp:
                containerPort: 9141
                protocol: TCP
            readinessProbe:
              failureThreshold: 8
              httpGet:
                path: /metrics
                port: zookeeperxp
              initialDelaySeconds: 30
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 60
            resources: {}
            serviceMonitor:
              interval: 30s
              scheme: http
              scrapeTimeout: 30s
        global: {}
        headless:
          annotations: {}
        image:
          PullPolicy: IfNotPresent
          pullPolicy: IfNotPresent
          repository: zookeeper
          tag: 3.5.5
        jobs:
          chroots:
            activeDeadlineSeconds: 300
            backoffLimit: 5
            completions: 1
            config:
              create: []
            enabled: false
            env: []
            parallelism: 1
            resources: {}
            restartPolicy: Never
        nodeSelector: {}
        persistence:
          accessMode: ReadWriteOnce
          enabled: false
          size: 5Gi
        podAnnotations: {}
        podDisruptionBudget:
          maxUnavailable: 1
        podLabels: {}
        port: 2181
        ports:
          client:
            containerPort: 2181
            protocol: TCP
          election:
            containerPort: 3888
            protocol: TCP
          server:
            containerPort: 2888
            protocol: TCP
        priorityClassName: ""
        prometheus:
          serviceMonitor:
            enabled: false
            selector: {}
        replicaCount: 3
        resources: {}
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        service:
          annotations: {}
          ports:
            client:
              port: 2181
              protocol: TCP
              targetPort: client
          type: ClusterIP
        terminationGracePeriodSeconds: 1800
        tolerations: []
        updateStrategy:
          type: RollingUpdate
        url: ""
    mysql:
      allowRootFrom: '%'
      configFiles:
        node.cnf: |+
          [mysqld]
          datadir=/var/lib/mysql
          default_storage_engine=InnoDB
          binlog_format=ROW
          innodb_flush_log_at_trx_commit  = 0
          innodb_flush_method             = O_DIRECT
          innodb_file_per_table           = 1
          innodb_autoinc_lock_mode=2
          bind_address = 0.0.0.0
          wsrep_slave_threads=2
          wsrep_cluster_address=gcomm://
          wsrep_provider=/usr/lib/galera3/libgalera_smm.so
          wsrep_cluster_name=galera
          wsrep_sst_method=xtrabackup-v2

      enabled: false
      global: {}
      image:
        pullPolicy: IfNotPresent
        repository: percona/percona-xtradb-cluster
        tag: 5.7.19
      logTail: true
      metricsExporter:
        argsOverrides: []
        commandOverrides: []
        enabled: false
      nodeSelector: {}
      persistence:
        accessMode: ReadWriteOnce
        enabled: false
        size: 8Gi
      podAnnotations: {}
      podDisruptionBudget:
        enabled: false
        maxUnavailable: 1
      prometheus:
        operator:
          enabled: false
          prometheusRule:
            enabled: true
            labels: {}
          serviceMonitor:
            interval: 10s
      replicas: 3
      service:
        percona:
          headless: false
      ssl:
        enabled: false
        secret: mysql-ssl-certs
      tolerations: []
    percona-xtradb-cluster:
      allowRootFrom: '%'
      configFiles:
        node.cnf: |+
          [mysqld]
          datadir=/var/lib/mysql
          default_storage_engine=InnoDB
          binlog_format=ROW
          innodb_flush_log_at_trx_commit  = 0
          innodb_flush_method             = O_DIRECT
          innodb_file_per_table           = 1
          innodb_autoinc_lock_mode=2
          bind_address = 0.0.0.0
          wsrep_slave_threads=2
          wsrep_cluster_address=gcomm://
          wsrep_provider=/usr/lib/galera3/libgalera_smm.so
          wsrep_cluster_name=galera
          wsrep_sst_method=xtrabackup-v2

      global: {}
      image:
        pullPolicy: IfNotPresent
        repository: percona/percona-xtradb-cluster
        tag: 5.7.19
      logTail: true
      metricsExporter:
        argsOverrides: []
        commandOverrides: []
        enabled: false
      nodeSelector: {}
      persistence:
        accessMode: ReadWriteOnce
        enabled: false
        size: 8Gi
      podAnnotations: {}
      podDisruptionBudget:
        enabled: false
        maxUnavailable: 1
      prometheus:
        operator:
          enabled: false
          prometheusRule:
            enabled: true
            labels: {}
          serviceMonitor:
            interval: 10s
      replicas: 3
      service:
        percona:
          headless: false
      ssl:
        enabled: false
        secret: mysql-ssl-certs
      tolerations: []
  enabled: true
  global: {}
emailnotifier:
  config:
    PORT: 3081
    email:
      ciphers: SSLv3
      host: smtp.gmail.com
      pass: pass
      port: 587
      user: user@gmail.com
    hub_participant:
      name: hub
    kafka_host: $release_name-kafka
    kafka_port: 9092
    log_level: info
    log_transport: file
  enabled: false
  image:
    pullPolicy: IfNotPresent
    repository: mojaloop/email-notifier
    tag: v9.5.0
  ingress:
    annotations: {}
    enabled: true
    externalPath: /
    hosts:
      api: email-notifier.local
    tls: []
  init:
    enabled: true
    kafka:
      command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
      env: {}
      name: wait-for-kafka
      pullPolicy: IfNotPresent
      repository: solsson/kafka
      tag: latest
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 30
    periodSeconds: 15
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 30
    periodSeconds: 15
  replicaCount: 1
  resources: {}
  service:
    annotations: {}
    external:
      enabled: false
      ip: 10.0.2.2
      ports:
        api:
          externalPort: 3081
          name: email-notifier
    externalPort: 80
    internalPort: 3081
    name: email-notifier
    type: ClusterIP
finance-portal:
  JWTKeys:
    first_key.key: |-
      -----BEGIN RSA PUBLIC KEY-----
      MIICXQIBAAKBgQCyQ80uaA1DKxjwuGgetuHiXoZxpQ/Twyj/9a5zeMCfZlAvreCs
      8MhCm17OuQkYkiIpoEwn3DUDXAO03kUg9Hg5pd5ObnTZdWoBKWR1t/U2R4xU6v2w
      KLn9KyK/cA/79wzaiMZS+H+j+pt9ZjgdpKOcn3XK8bOURIVEsSNu8+yZ/wIDAQAB
      AoGAULdvj9wwaSH6DIFLL+EaHYA0ev/Ez1tWVLN/NqzN9z8B/tzJ1zS9UJ9+Sbcx
      3azJiDSbVw8X9/nxebOM9JONXbcCMeJX5MqsBzrR89vTHo9ir91u7LDVBEo+bsrS
      ufTQdT1etUOggwWssU4JLoQB7L7QoFhBTndAc6AwmB1t6pECQQDHBe01qgTQwF4H
      zjnpBKPUlYX5Ma+6VDvSG/yFdJeA58TrF3oBBnET9ZTmy4mDLQaO88wsAx0kduaB
      H8tuoCUvAkEA5UyIpG2djRCyCRkENJLn9qpCaSOwaO43D189KqGzW9nHihMNczha
      akAIa3ULp8AoqPFKOFk+v2jGYwPHSatEMQJBAK9vr/wAFSKWj8y9oxqetnPsIh7a
      B5duLRU3Ck/xyKMeqty44xkIPqFjd5BClsME66UTj0S0sfm0vdfQ2Rh5Ho0CQAaz
      PM7pMRBdK4aeh4Ptwv9vLC+cTlxSkaNOWiAzx2TosS70rZDvVZ0DL/vL2MJXGBkP
      q+aHnRDEw/9CrgEWExECQQCT7jFthoPs29A981euHfZ+bXMFEI48PFgw13cmyWnM
      HijF+4E/XtD11WJkIuDCmHal/oRtcbIO/cCk15xbWZkD
      -----END RSA PUBLIC KEY-----
    second_key.key: |-
      -----BEGIN RSA PUBLIC KEY-----
      MIICXQIBAAKBgQCyQ80uaA1DKxjwuGgetuHiXoZxpQ/Twyj/9a5zeMCfZlAvreCs
      8MhCm17OuQkYkiIpoEwn3DUDXAO03kUg9Hg5pd5ObnTZdWoBKWR1t/U2R4xU6v2w
      KLn9KyK/cA/79wzaiMZS+H+j+pt9ZjgdpKOcn3XK8bOURIVEsSNu8+yZ/wIDAQAB
      AoGAULdvj9wwaSH6DIFLL+EaHYA0ev/Ez1tWVLN/NqzN9z8B/tzJ1zS9UJ9+Sbcx
      3azJiDSbVw8X9/nxebOM9JONXbcCMeJX5MqsBzrR89vTHo9ir91u7LDVBEo+bsrS
      ufTQdT1etUOggwWssU4JLoQB7L7QoFhBTndAc6AwmB1t6pECQQDHBe01qgTQwF4H
      zjnpBKPUlYX5Ma+6VDvSG/yFdJeA58TrF3oBBnET9ZTmy4mDLQaO88wsAx0kduaB
      H8tuoCUvAkEA5UyIpG2djRCyCRkENJLn9qpCaSOwaO43D189KqGzW9nHihMNczha
      akAIa3ULp8AoqPFKOFk+v2jGYwPHSatEMQJBAK9vr/wAFSKWj8y9oxqetnPsIh7a
      B5duLRU3Ck/xyKMeqty44xkIPqFjd5BClsME66UTj0S0sfm0vdfQ2Rh5Ho0CQAaz
      PM7pMRBdK4aeh4Ptwv9vLC+cTlxSkaNOWiAzx2TosS70rZDvVZ0DL/vL2MJXGBkP
      q+aHnRDEw/9CrgEWExECQQCT7jFthoPs29A981euHfZ+bXMFEI48PFgw13cmyWnM
      HijF+4E/XtD11WJkIuDCmHal/oRtcbIO/cCk15xbWZkD
      -----END RSA PUBLIC KEY-----
    third_key.key: |-
      -----BEGIN RSA PUBLIC KEY-----
      MIICXQIBAAKBgQCyQ80uaA1DKxjwuGgetuHiXoZxpQ/Twyj/9a5zeMCfZlAvreCs
      8MhCm17OuQkYkiIpoEwn3DUDXAO03kUg9Hg5pd5ObnTZdWoBKWR1t/U2R4xU6v2w
      KLn9KyK/cA/79wzaiMZS+H+j+pt9ZjgdpKOcn3XK8bOURIVEsSNu8+yZ/wIDAQAB
      AoGAULdvj9wwaSH6DIFLL+EaHYA0ev/Ez1tWVLN/NqzN9z8B/tzJ1zS9UJ9+Sbcx
      3azJiDSbVw8X9/nxebOM9JONXbcCMeJX5MqsBzrR89vTHo9ir91u7LDVBEo+bsrS
      ufTQdT1etUOggwWssU4JLoQB7L7QoFhBTndAc6AwmB1t6pECQQDHBe01qgTQwF4H
      zjnpBKPUlYX5Ma+6VDvSG/yFdJeA58TrF3oBBnET9ZTmy4mDLQaO88wsAx0kduaB
      H8tuoCUvAkEA5UyIpG2djRCyCRkENJLn9qpCaSOwaO43D189KqGzW9nHihMNczha
      akAIa3ULp8AoqPFKOFk+v2jGYwPHSatEMQJBAK9vr/wAFSKWj8y9oxqetnPsIh7a
      B5duLRU3Ck/xyKMeqty44xkIPqFjd5BClsME66UTj0S0sfm0vdfQ2Rh5Ho0CQAaz
      PM7pMRBdK4aeh4Ptwv9vLC+cTlxSkaNOWiAzx2TosS70rZDvVZ0DL/vL2MJXGBkP
      q+aHnRDEw/9CrgEWExECQQCT7jFthoPs29A981euHfZ+bXMFEI48PFgw13cmyWnM
      HijF+4E/XtD11WJkIuDCmHal/oRtcbIO/cCk15xbWZkD
      -----END RSA PUBLIC KEY-----
  affinity: {}
  backend:
    env: dev
    image:
      port: 3000
      pullPolicy: IfNotPresent
      repository: mojaloop/finance-portal-backend-service
      tag: v10.5.1
    ingress:
      annotations: {}
      enabled: false
      externalPath: /admin-portal-backend/(.*)
      hosts:
        api: finance-portal.local
    init:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        repository: mojaloop/finance-portal-backend-service
        tag: v10.5.1
    service:
      port: 3000
  config:
    BypassAuth: "true"
    InsecureCookie: "false"
    azureLogAnalytics:
      authTokenEndpoint: https://login.microsoftonline.com
      clientId: ec3b168c-91db-4aa0-a7d3-ea9f6f999999
      clientSecret: secret
      grantType: client_credentials
      kafkaMessagePattern: Producer.sendMessage::messageProtocol:'({.*?})'
      logApiEndpoint: https://api.loganalytics.io/v1/
      redirectUri: http://localhost:5000
      resource: https://api.loganalytics.io/
      searchQueryTemplate:
        regex: search '(.*)' | where LogEntry matches regex '.*Producer.sendMessage::messageProtocol:.*' | where LogEntry matches regex '.*transferId.*' | where LogEntry matches regex '.*fspiop-signature.*' | take 1 | project LogEntry
        template: search '{{transferId}}' | where LogEntry matches regex '.*Producer.sendMessage::messageProtocol:.*' | where LogEntry matches regex '.*transferId.*' | where LogEntry matches regex '.*fspiop-signature.*' | take 1 | project LogEntry
      tenantId: ec3b168c-91db-4aa0-a7d3-ea9f6f999999
      workspaceId: e16d055b-7a9a-4e9b-bb4b-abcdef999999
    centralLedgerEndpoint: $release_name-centralledger-service
    centralSettlementsEndpoint: $release_name-centralsettlement/v1
    corsReflectOrigin: "false"
    db_database: central_ledger
    db_host: $release_name-centralledger-mysql
    db_password: oyMxgZChuu
    db_port: "3306"
    db_user: central_ledger
    externalSettlementsEndpoint: $release_name-external-settlement-server
    fxpEndpoint: $release_name-fxp-server
    is_populate:
      authentication:
        credentials:
          password: admin
          username: admin
        type: basic
      http:
        endpoint: something
        timeout: 30000
      name: $release_name-ispopulate
    isOauthEnabled: false
    jasperPassword: password
    jasperUser: user
    oauthClientKey: testkey
    oauthClientSecret: testsecret
    oauthLoginPath: /oauth2/token
    oauthPort: 9443
    oauthServer: https://localhost
    oauthTokenRevoke: /oauth2/revoke
    oauthTokenValidationPath: /oauth2/introspect
    oauthUserInfo: /oauth2/userinfo
    report1: something
    report2: something
    settlementManagementEndpoint: $release_name-finance-portal-settlement-management
    settlementManagementPort: "5000"
  enabled: false
  frontend:
    image:
      port: 80
      pullPolicy: IfNotPresent
      repository: mojaloop/finance-portal-ui
      tag: v10.4.3
    ingress:
      annotations: {}
      enabled: false
      externalPath: /(.*)
      hosts:
        api: finance-portal.local
    service:
      port: 80
  global: {}
  imageCredentials:
    enabled: false
    name: pull-secrets
  nodeSelector: {}
  service:
    type: ClusterIP
  tolerations: []
finance-portal-settlement-management:
  config:
    db_database: central_ledger
    db_host: $release_name-centralledger-mysql
    db_password: oyMxgZChuu
    db_port: "3306"
    db_protocol: mysql
    db_user: central_ledger
  enabled: false
  imageCredentials:
    name: pull-secrets
  operatorSettlement:
    image:
      pullPolicy: IfNotPresent
      repository: mojaloop/operator-settlement
      tag: v11.0.0
    ingress:
      annotations: {}
      enabled: true
      externalPath: /
      hosts:
        api: operator-settlement.local
      tls: []
    init:
      command: mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database < /opt/operator-settlement/init.sql
      enabled: true
      image:
        pullPolicy: IfNotPresent
        repository: mojaloop/operator-settlement
        tag: v11.0.0
    service:
      port: 80
  service:
    type: ClusterIP
  settlementManagement:
    config:
      CENTRAL_LEDGER_SERVICE_ADMIN_PORT: "80"
      CENTRAL_LEDGER_SERVICE_NAME: $release_name-centralledger-service
      MIN_WINDOW_AGE_MS: "5000"
      OPERATOR_SETTLEMENTS_SERVICE_NAME: $release_name-finance-portal-settlement-management
      OPERATOR_SETTLEMENTS_SERVICE_PORT: "80"
      SETTLEMENTS_SERVICE_NAME: $release_name-centralsettlement
      SETTLEMENTS_SERVICE_PORT: "80"
    image:
      pullPolicy: IfNotPresent
      repository: mojaloop/settlement-management
      tag: v11.0.0
    ingress:
      annotations: {}
      enabled: false
      externalPath: /
      hosts:
        api: settlement-management.local
      tls: []
    init:
      command: mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database < /opt/settlement-management/init.sql
      enabled: true
      image:
        pullPolicy: IfNotPresent
        repository: mojaloop/settlement-management
        tag: v11.0.0
    service:
      port: 5000
global: {}
ml-api-adapter:
  enabled: true
  global: {}
  ml-api-adapter-handler-notification:
    affinity: {}
    config:
      central_services_health_endpoint_param: /health
      central_services_host: $release_name-centralledger-service
      central_services_port: 80
      endpoint_cache_expiresInMs: 180000
      endpoint_cache_generateTimeoutMs: 30000
      endpointSecurity:
        fspiopSourceSigningName: switch
        jwsSign: true
        jwsSigningKey: |-
          -----BEGIN PRIVATE KEY-----
          MIIEugIBADANBgkqhkiG9w0BAQEFAASCBKQwggSgAgEAAoIBAQDuB5HuHRH5BqI/
          VAC/ixm6lz8kJmigIB5jMxLrhB9cgqM+pb0O+is88VRHdxtw8eKG3nvrZYy/4nsJ
          z32qo4sOIMqHWTlZgbURVK4FAUEZ/qn63UnXJ1YVqT4UGg31BBj2c1JdlxG2t4JV
          DvzGrI2/ia/t4gYZCWrQz6a8OClBIaXu2t6EGFnysyS+1YDWtNIHO+z0lvAY9oad
          5MZPHN51o04eIoLO0tPfkz0+NDs4ECwUWuFAg8yo1hxnvSoERiCAwEbFgq2wDe1+
          oBhOpusd4VastD/TEqO8RhrwTodddOMKzapJPrQJuvTkrpkmkPOGE8DgIVHsULLR
          UYEMKvTVAgMBAAECgf94Meq77xrcFg8sSqe5eNHYP39tvaWyqE7mY/slvpNDH5Pl
          D/p21akS156E32BEJuYPk/TLiI2kMWjnvbHvNgr9tq8x3ToyTjtrg5clq8Hr1Ozo
          FnFiqkVHMFPFPQZEVU64CQPA33DixuWjMWS3YINfCAinErBry0PiNZGmuFi1K/wy
          e1z2F9WfG3IEBEe3NaeXwN55ZPJve0LtneJy3YqNwMg2FpPKBRHFV4lKTaU/hqhC
          NK6HQoEXN4Y9AQHn53Fl8n0iNO3qx0Tb7EuGNFmZ2xTlpDKAp8M+BA5Qm5YDkbd6
          OoxbGj2YxZncbG+RsvICtVMLqIytubvYREY9WGkCgYEA+K64xhJzWV3cGc8/90ko
          TryGMBj1ly5TNa1YyOQxl5z4Glc0aI8a+1vJGEAA+c/OEhMR8MRn3+QfV2LJOI5X
          V8Zo2Ger6Ln99LBddTh2HXL3M60cMgs8MYGuJ75g5R/UHnJBLo7NFyVddCOMT3hc
          AYSDN3XCw9ycqTw2/mJHB9kCgYEA9QiaCfTtnXdjMqLeYbp2uQEyyO6IZs956ym7
          sEQMwx/3wnlE9eiJ6iQxZfddkfOCyV/4MMAlYfpTBQFg7Cwb32Xrv3Ezy0HfZrnt
          5Nj4SVQWuOXJhdfC9dmTF+cvBeP+vC6PyDbikxdCo9+05chxS7I3MLxCue4qxy0C
          QfQIE10CgYA+kHacHng2u45sT9/f7t/dL0DzSNRAvL7iekIkCIURh8RDnDzrMVWw
          d18YYsHcF5PYqEOTN1aK1XGtIoVNXUJMKvaluy9c1a42qUhZ/WJ59jqLHbpCPOFf
          8yhFh3gJLQDIyCXt+K9Qa24fkfHy7Gz5VMVOZqohbJddXHDZfxAvwQKBgAdU947+
          tjF1BhHYz8Cq3KySfZuHj6tL4AEKYaRXlO4twbMe/9I/4AiShqvfZ/xbBfnSllGX
          Hkc9P0iyDt1iQH9BxHkZAQy+7tlbDORBHcTL8FYeAhawKxRCK2WWtFB/zvqAhire
          gY8XLhZLNlV91u4F6iLaL0DzAHKvRRcGH0u9AoGATNigZgbRRHJC21JucHeE0tP7
          HjGALvb4qn1o0oDHsxNY8i6vVNw9YeQpZaJhceuRHJTGcsq2dJSXpYwIhIVs/8RK
          bKbkEndra96L6FRZN8LYBl8zbRUPx39ojGeSbFliQv1eaoA/1DDhCiC2NlcSmbJl
          ecaG/Oyo/S+eM8nR7mc=
          -----END PRIVATE KEY-----
      error_handling:
        include_cause_extension: false
        truncate_extensions: true
      event_async_override: log,trace
      event_log_filter: audit:*, log:warn, log:error
      event_log_metadata_only: false
      event_trace_state_enabled: true
      event_trace_vendor: mojaloop
      event_traceid_per_vendor: false
      kafka_host: $release_name-kafka
      kafka_partitioner: murmur2_random
      kafka_port: 9092
      log_filter: error, warn, info
      log_level: info
      log_transport: file
      max_callback_time_lag_dilation_milliseconds: 100
      max_fulfil_timeout_duration_seconds: 240
      resource_versions: transfers=1.0,participants=1.0,quotes=1.0
      security:
        callback:
          rejectUnauthorized: true
      send_transfer_confirmation_to_payee: false
    enabled: true
    global: {}
    image:
      command: '["node", "src/handlers/index.js", "handler", "--notification"]'
      pullPolicy: IfNotPresent
      repository: mojaloop/ml-api-adapter
      tag: v11.1.4
    ingress:
      annotations: {}
      enabled: true
      externalPath: /
      hosts:
        api: ml-api-adapter-notification.local
      tls: []
    init:
      enabled: true
      image:
        command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
        env: {}
        name: wait-for-kafka
        pullPolicy: IfNotPresent
        repository: solsson/kafka
        tag: latest
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 90
      periodSeconds: 15
    metrics:
      config:
        defaultLabels:
          serviceName: ml-handler-notification
        prefix: moja_
        timeout: 5000
      enabled: true
    nodeSelector: {}
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 120
      periodSeconds: 15
    replicaCount: 1
    resources: {}
    service:
      externalPort: 80
      internalPort: 3000
      type: ClusterIP
    sidecar:
      config:
        event_log_filter: audit:*, log:info, log:warn, log:error
        event_log_grpc_host: localhost
        event_log_grpc_port: 50051
        event_log_metadata_only: true
        log_filter: error, warn, info
        log_level: info
      enabled: true
      image:
        command: '["npm", "run", "start"]'
        pullPolicy: IfNotPresent
        repository: mojaloop/event-sidecar
        tag: v11.0.0
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      service:
        internalPort: 4001
    tolerations: []
  ml-api-adapter-service:
    affinity: {}
    config:
      central_services_health_endpoint_param: /health
      central_services_host: $release_name-centralledger-service
      central_services_port: 80
      error_handling:
        include_cause_extension: false
        truncate_extensions: true
      event_async_override: log,trace
      event_log_filter: audit:*, log:warn, log:error
      event_log_metadata_only: false
      event_trace_state_enabled: true
      event_trace_vendor: mojaloop
      event_traceid_per_vendor: false
      kafka_host: $release_name-kafka
      kafka_partitioner: murmur2_random
      kafka_port: 9092
      log_filter: error, warn, info
      log_level: info
      log_transport: file
      max_callback_time_lag_dilation_milliseconds: 100
      max_fulfil_timeout_duration_seconds: 240
      resource_versions: transfers=1.0,participants=1.0,quotes=1.0
      security:
        callback:
          rejectUnauthorized: true
    enabled: true
    global: {}
    image:
      command: '["node", "src/api/index.js"]'
      pullPolicy: IfNotPresent
      repository: mojaloop/ml-api-adapter
      tag: v11.1.4
    ingress:
      annotations: {}
      enabled: true
      externalPath: /
      hosts:
        api: ml-api-adapter.local
      tls: []
    init:
      enabled: true
      image:
        command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
        env: {}
        name: wait-for-kafka
        pullPolicy: IfNotPresent
        repository: solsson/kafka
        tag: latest
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 90
      periodSeconds: 15
    metrics:
      config:
        defaultLabels:
          serviceName: ml-service
        prefix: moja_
        timeout: 5000
      enabled: true
    nodeSelector: {}
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 120
      periodSeconds: 15
    replicaCount: 1
    resources: {}
    service:
      externalPort: 80
      internalPort: 3000
      type: ClusterIP
    sidecar:
      config:
        event_log_filter: audit:*, log:info, log:warn, log:error
        event_log_grpc_host: localhost
        event_log_grpc_port: 50051
        event_log_metadata_only: true
        log_filter: error, warn, info
        log_level: info
      enabled: true
      image:
        command: '["npm", "run", "start"]'
        pullPolicy: IfNotPresent
        repository: mojaloop/event-sidecar
        tag: v11.0.0
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      service:
        internalPort: 4001
    tolerations: []
ml-testing-toolkit:
  enabled: false
  ml-testing-toolkit-backend:
    config:
      user_config.json:
        CALLBACK_RESOURCE_ENDPOINTS:
          enabled: true
          endpoints:
          - endpoint: http://dev2-account-lookup.mojaloop.live
            method: put
            path: /parties/{Type}/{ID}
          - endpoint: http://dev2-quoting-service.mojaloop.live
            method: put
            path: /quotes/{ID}
          - endpoint: http://dev2-ml-api-adapter.mojaloop.live
            method: put
            path: /transfers/{ID}
        FSPID: testingtoolkitdfsp
        ILP_SECRET: secret
        TRANSFERS_VALIDATION_CONDITION: true
        TRANSFERS_VALIDATION_ILP_PACKET: true
        TRANSFERS_VALIDATION_WITH_PREVIOUS_QUOTES: true
    enabled: false
    extraEnvironments:
      hub-k8s-local-environment.json:
        inputValues:
          BASE_CENTRAL_LEDGER_ADMIN: ""
          CALLBACK_ENDPOINT_BASE_URL: http://$release_name-ml-testing-toolkit-backend:5000
          ENABLE_JWS_SIGNING: true
          ENABLE_JWS_VALIDATION: false
          ENABLE_PROTECTED_HEADERS_VALIDATION: true
          ENABLE_WS_ASSERTIONS: true
          HOST_ACCOUNT_LOOKUP_ADMIN: http://$release_name-account-lookup-service-admin
          HOST_ACCOUNT_LOOKUP_SERVICE: http://$release_name-account-lookup-service
          HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN: http://$release_name-account-lookup-service-admin
          HOST_BULK_ADAPTER: http://$release_name-bulk-api-adapter-service
          HOST_CENTRAL_LEDGER: http://$release_name-centralledger-service
          HOST_CENTRAL_SETTLEMENT: http://$release_name-centralsettlement-service/v2
          HOST_LEGACY_SIMULATOR: http://$release_name-simulator
          HOST_ML_API_ADAPTER: http://$release_name-ml-api-adapter-service
          HOST_QUOTING_SERVICE: http://$release_name-quoting-service
          HOST_SIMULATOR: http://$release_name-simulator
          HOST_TRANSACTION_REQUESTS_SERVICE: http://$release_name-transaction-requests-service
          HUB_OPERATOR_BEARER_TOKEN: NOT_APPLICABLE
          NORESPONSE_SIMPAYEE_NAME: noresponsepayeefsp
          ON_US_TRANSFERS_ENABLED: false
          PAYEEFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payeefsp-backend:3003
          PAYEEFSP_CALLBACK_URL: http://$release_name-sim-payeefsp-scheme-adapter:4000
          PAYEEFSP_SDK_TESTAPI_URL: http://$release_name-sim-payeefsp-scheme-adapter:4002
          PAYEEFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payeefsp-scheme-adapter:4002
          PAYERFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payerfsp-backend:3003
          PAYERFSP_CALLBACK_URL: http://$release_name-sim-payerfsp-scheme-adapter:4000
          PAYERFSP_SDK_TESTAPI_URL: http://$release_name-sim-payerfsp-scheme-adapter:4002
          PAYERFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payerfsp-scheme-adapter:4002
          SIM1_JWS_KEY: |
            -----BEGIN PRIVATE KEY-----
            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
            DgoQeSng2kt5Z6mkoDIQTs7nEflb4w==
            -----END PRIVATE KEY-----
          SIM1_MSISDN: "17039811903"
          SIM1_NAME: testfsp1
          SIM2_JWS_KEY: |
            -----BEGIN PRIVATE KEY-----
            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
            Tv4G862WYeqD1fdyZaKQ3b9fAQEq1g==
            -----END PRIVATE KEY-----
          SIM2_MSISDN: "17039811904"
          SIM2_NAME: testfsp2
          SIMPAYEE_CURRENCY: USD
          SIMPAYEE_JWS_PRIVATE_KEY: |
            -----BEGIN PRIVATE KEY-----
            MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT
            7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL
            noSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi
            120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI
            IoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y
            eW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB
            T/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z
            SikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq
            m+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2
            HfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I
            WylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0
            dQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY
            JuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB
            BKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4
            SfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj
            suHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd
            7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm
            fW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH
            tl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/
            n3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+
            CPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K
            FfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct
            0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ
            sHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa
            uutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW
            uu1pxuWD0gTJxFkp6u4YIAhw
            -----END PRIVATE KEY-----
          SIMPAYEE_JWS_PUB_KEY: |
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE
            sgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw
            IpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW
            Ngf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj
            vVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ
            LmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3
            FwIDAQAB
            -----END PUBLIC KEY-----
          SIMPAYEE_MSISDN: "17039811902"
          SIMPAYEE_NAME: payeefsp
          SIMPAYER_CURRENCY: USD
          SIMPAYER_JWS_PRIVATE_KEY: |
            -----BEGIN PRIVATE KEY-----
            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6
            jM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E
            vCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I
            eoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7
            kx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC
            QWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/
            sAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt
            A7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj
            a4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X
            KaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii
            yWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n
            xOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR
            RbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B
            dXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ
            uomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht
            vJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS
            gGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium
            sgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW
            6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR
            8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/
            kmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI
            iuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX
            7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa
            +fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4
            zXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF
            iNK0yCENMhSoOTtbT9tmGi0=
            -----END PRIVATE KEY-----
          SIMPAYER_MSISDN: "17039811901"
          SIMPAYER_NAME: payerfsp
          SIMPLE_ROUTING_MODE_ENABLED: true
          TEST_NOTIFICATIONS: true
          TESTFSP1_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp1-backend:3003
          TESTFSP1_CALLBACK_URL: http://$release_name-sim-testfsp1-scheme-adapter:4000
          TESTFSP1_JWS_PUB_KEY: |
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v
            dCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG
            42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6
            NRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa
            h9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os
            xQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by
            UQIDAQAB
            -----END PUBLIC KEY-----
          TESTFSP1_SDK_TESTAPI_URL: http://$release_name-sim-testfsp1-scheme-adapter:4002
          TESTFSP1_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp1-scheme-adapter:4002
          TESTFSP2_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp2-backend:3003
          TESTFSP2_CALLBACK_URL: http://$release_name-sim-testfsp2-scheme-adapter:4000
          TESTFSP2_JWS_PUB_KEY: |-
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y
            l5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5
            +ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG
            YedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H
            Ja+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6
            WZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+
            AQIDAQAB
            -----END PUBLIC KEY-----
          TESTFSP2_SDK_TESTAPI_URL: http://$release_name-sim-testfsp2-scheme-adapter:4002
          TESTFSP2_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp2-scheme-adapter:4002
          TTKFSP_JWS_KEY: |
            -----BEGIN PRIVATE KEY-----
            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
            DktFAP1w3ruycnE/t+/H8rDVJGPTHc8=
            -----END PRIVATE KEY-----
          WS_ASSERTION_TIMEOUT: 5000
          accept: application/vnd.interoperability.parties+json;version=1.0
          acceptParticipants: application/vnd.interoperability.participants+json;version=1.0
          acceptQuotes: application/vnd.interoperability.quotes+json;version=1.0
          acceptTransfers: application/vnd.interoperability.transfers+json;version=1.0
          accountId: "6"
          amount: "100"
          batchToIdValue1: "27713803066"
          batchToIdValue2: "27713803067"
          condition: n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU
          contentTransfers: application/vnd.interoperability.transfers+json;version=1.0
          contentType: application/vnd.interoperability.parties+json;version=1.0
          contentTypeParticipants: application/vnd.interoperability.participants+json;version=1.0
          contentTypeQuotes: application/vnd.interoperability.quotes+json;version=1.0
          currency: USD
          currency2: USD
          expectedAuthorizationsVersion: "1.0"
          expectedParticipantsVersion: "1.0"
          expectedPartiesVersion: "1.0"
          expectedQuotesVersion: "1.0"
          expectedTransactionRequestsVersion: "1.0"
          expectedTransfersVersion: "1.0"
          fromDOB: "1984-01-01"
          fromFirstName: Firstname-Test
          fromFspId: testingtoolkitdfsp
          fromIdType: MSISDN
          fromIdValue: "44123456789"
          fromLastName: Lastname-Test
          fspiopSignature: '{"signature":"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\",\"protectedHeader\":\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ"}'
          fundsInPrepareAmount: ""
          fundsInPrepareTransferId: ""
          homeTransactionId: 123ABC
          hub_operator: NOT_APPLICABLE
          hubEmail: some.email@gmail.com
          ilpPacket: AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA
          invalidFulfillment: _3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----
          invalidToIdType: ACCOUNT_ID
          invalidToIdValue: "27713803099"
          mobileSimPayeeFsp: greenbankfsp
          mobileSimPayerFsp: pinkbankfsp
          note: test
          payeeIdType: MSISDN
          payeeIdentifier: "17039811902"
          payeefsp: payeefsp
          payeefspEmail: some.email@gmail.com
          payerIdType: MSISDN
          payerIdentifier: "17039811901"
          payerfsp: testingtoolkitdfsp
          payerfspEmail: some.email@gmail.com
          payerfspSettlementAccountBalanceAfterFundsIn: ""
          payerfspSettlementAccountBalanceBeforeFundsIn: ""
          payerfspSettlementAccountId: ""
          receiverMSISDN: "27713803912"
          testfsp1Email: some.email@gmail.com
          testfsp1IdType: MSISDN
          testfsp1Identifier: "17039811903"
          testfsp1MSISDN: "17039811903"
          testfsp2Email: some.email@gmail.com
          testfsp2IdType: MSISDN
          testfsp2Identifier: "17039811904"
          testfsp2MSISDN: "17039811904"
          toFspId: payeefsp
          toIdType: MSISDN
          toIdValue: "27713803912"
          toIdValueDelete: "27713803913"
          validCondition: GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM
          validCondition2: kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms
          validFulfillment: UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA
          validIlpPacket2: AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA
    ingress:
      enabled: false
      hosts:
        adminApi:
          host: testing-toolkit.local
          paths:
          - /api/
          - /socket.io/
          port: 5050
        dev2-testing-toolkit-specapi.mojaloop.live:
          paths:
          - /
          port: 5000
        dev2-testing-toolkit.mojaloop.live:
          paths:
          - /api/
          - /socket.io/
          port: 5050
        specApi:
          host: testing-toolkit-specapi.local
          paths:
          - /
          port: 5000
  ml-testing-toolkit-frontend:
    config:
      API_BASE_URL: http://dev2-testing-toolkit.mojaloop.live
    enabled: false
    ingress:
      enabled: false
      hosts:
        dev2-testing-toolkit.mojaloop.live:
          paths:
          - /
          port: 6060
        ui:
          host: testing-toolkit.local
          paths:
          - /
          port: 6060
ml-ttk-cronjob-tests:
  config:
    environmentName: Development
    testCasesPathInZip: testing-toolkit-test-cases-12.0.0/collections/hub/golden_path
    testCasesZipUrl: https://github.com/mojaloop/testing-toolkit-test-cases/archive/v12.0.0.zip
    testSuiteName: GP Tests
    ttkBackendURL: http://$release_name-ml-testing-toolkit-backend:5050
  configCreds:
    AWS_ACCESS_KEY_ID: some_aws_access_key
    AWS_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY: some_aws_secret_key
  configFileDefaults:
    logLevel: "2"
    mode: outbound
  global: {}
  image:
    pullPolicy: IfNotPresent
    repository: mojaloop/ml-testing-toolkit
    tag: v11.9.4
  postInstallHook:
    deletePolicy: before-hook-creation
    enabled: false
    weight: -5
  replicaCount: 1
  resources: {}
  scheduling:
    cronSchedule: 0 8 * * *
    enabled: false
  testCaseEnvironmentFile:
    inputValues:
      BASE_CENTRAL_LEDGER_ADMIN: ""
      CALLBACK_ENDPOINT_BASE_URL: http://$release_name-ml-testing-toolkit-backend:5000
      ENABLE_JWS_SIGNING: true
      ENABLE_JWS_VALIDATION: false
      ENABLE_PROTECTED_HEADERS_VALIDATION: true
      ENABLE_WS_ASSERTIONS: true
      HOST_ACCOUNT_LOOKUP_ADMIN: http://$release_name-account-lookup-service-admin
      HOST_ACCOUNT_LOOKUP_SERVICE: http://$release_name-account-lookup-service
      HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN: http://$release_name-account-lookup-service-admin
      HOST_BULK_ADAPTER: http://$release_name-bulk-api-adapter-service
      HOST_CENTRAL_LEDGER: http://$release_name-centralledger-service
      HOST_CENTRAL_SETTLEMENT: http://$release_name-centralsettlement-service/v2
      HOST_LEGACY_SIMULATOR: http://$release_name-simulator
      HOST_ML_API_ADAPTER: http://$release_name-ml-api-adapter-service
      HOST_QUOTING_SERVICE: http://$release_name-quoting-service
      HOST_SIMULATOR: http://$release_name-simulator
      HOST_TRANSACTION_REQUESTS_SERVICE: http://$release_name-transaction-requests-service
      HUB_OPERATOR_BEARER_TOKEN: NOT_APPLICABLE
      NORESPONSE_SIMPAYEE_NAME: noresponsepayeefsp
      ON_US_TRANSFERS_ENABLED: false
      PAYEEFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payeefsp-backend:3003
      PAYEEFSP_CALLBACK_URL: http://$release_name-sim-payeefsp-scheme-adapter:4000
      PAYEEFSP_SDK_TESTAPI_URL: http://$release_name-sim-payeefsp-scheme-adapter:4002
      PAYEEFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payeefsp-scheme-adapter:4002
      PAYERFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payerfsp-backend:3003
      PAYERFSP_CALLBACK_URL: http://$release_name-sim-payerfsp-scheme-adapter:4000
      PAYERFSP_SDK_TESTAPI_URL: http://$release_name-sim-payerfsp-scheme-adapter:4002
      PAYERFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payerfsp-scheme-adapter:4002
      SIM1_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIJQgIBADANBgkqhkiG9w0BAQEFAASCCSwwggkoAgEAAoICAQDF7BOa5uMtMcyk
        hEuHXNw1/q7YTaRwyyJZLXAOl3lHnSJKPp7+USY7mSkSuyNwf6lpKaZZ6q0AnuLY
        Narkr376osEE1KNjKWUFMSPeJKqrYx7bgZOnbqvnO/XRPBnA7N8WG0JIis+N4MGt
        4YVXzojDMxU3Ghpj0Li6U8dJ6uuXYELpeiX0DV+/LcRtyb9QJr69Ezpa5x1ROly1
        mqJlfMth82NXKpQWGpRlmsBsMpxJJANL7K9672zWgmXWvClrCy4hRy7wBOLSevOI
        p3shfDXYBC0Kxay/EX4SY4geHOqyAxlEQp2zbAMo/IKtDwMfepm92dtA12vo/bfc
        yjoqM62ssrSSElQpXH3yKBYAA3lg4NAXkOWhetk6siEtYAMM+kWMqzNC9rZj0Trj
        gsxir7tHPyTxRfQxXCRSDQWCSKmFnXixWN1dj/b0CGIavG74NkSD3rh3JwPmRG1C
        5DFrFq9Oh+SlGNDdQMAYG+UWJyYIJq2e9RaXOipNIAliD7YHofWpqMnjsldPz4v2
        YsYNFL1FUd9XwpnMx+PS1Vn57QGbiJZgbp75xhkfA01mgc7MINWI/ZCmqcpu0RQJ
        qsY2JSL0Iyt7cprwok4rLp8z0GO18kpa3HwyQFhCJoUQ895egPajEfxfvY+mp9im
        H88Dn/837leIsnKL9qx8JpPv8dUqwwIDAQABAoICAAOA3KK27VS5TuMgTCcCqK0c
        oXJNkHore8wcn1BDpnK2ilUbQvlQtyVt+TBpN0hgV5dIXsRxbEuwCwjXIYJ5nFs1
        zz/mRY5SQ7rs5vYaxq4vHGW33TClDGJzLgvw4YHs/OuaJiGG6B6QNx8eIMR6cNfs
        iWXcxJSbM64YO4s0M0Y2oHbl17eCdU3+OVjHhXt1Pw+adhsuw12c+nvd66Quqmxt
        Yhs/W4l6hS0yZcpLPVxvi9w77N/jGIfwxZU7iCatzqr3Ls8k7pNS5Aj81sl9vTRb
        ZpDqgruz7THw+ZvIh/0V7bFbC+Fbh9Ua5T13tEveS9k4FZ6Orj9PLExcJiEAXsF9
        /WGN9pAXmjbULu0Usxe/0KaG3BTfzmQPH8n6Y6yNZgnhStQOdZn5dIFiIT/nfscw
        S3IDCwZZktptWG6pBgGtoTUSiWZfSDbR0mj57+VDeG3Dg+5k016KCwR4H1y3q6NV
        JKaOJlKadWgh7wCaH8Dg8Y+lHEV5TOAIPdg7nx1D/U+cNbXKbjZZ84D8CSi2Afk0
        CuR3WTXPncpsugvehyfiOBy26kmcxBz6fyi2QAKxFfZBeO9Wao1VcWnd8G9mZs6K
        VZ3qjzRODMZ8pEk8/13U3G5TqKNpFgdOzb64dMoFmTMc2fxPM9WFX+iy9n5irSdA
        bdW0sugAMrRF7Tmor1apAoIBAQDwU1I/xJWR4J/+7Z174HfrmusIFg5wu+4souVO
        FWQE903KDHbrX8DnEf4GdElDJ3qwZq1e27hSVhpwqlSMkBS0frBvyQfX3tAeevmE
        nNKFpLQiBQwQWeWV9bbXKUDEvSwxGBHEKKhAAgKRM9EJgWAkWOfMBfj/98Qo390p
        ske4ZR28w2XDrW7Ycqdo6NDjte+ziDmeMNCU7Wv5StlAt0eRJ7fXOi9lN4BSw649
        0YTNwq+3G5yHpWkdG6e4EWKuCjXz8/4vW+pPatlWXEtrZgSJwAYe3HSZw3ds/Tcw
        YHdPULoWpOHkdUOqXZ9abWPQ4bI9v1EmtRy2z6/G+tYhwud3AoIBAQDS1MDy29PM
        bbLG9oLU3dZTL+UnZ0Bp+GTSao92EOCHvco6w+/Y1+rAN7e2F5tbMMWkc1ozIQn/
        TrXvX9W75+CPsj5umj/ZXmv2o9UHurj3ENQ+jRA15uBNNdKOYyrHCWLZWi3TyKqm
        co0KSQOjk0qrn3c2asU1OwiHA7CYP0baO9X6h/kBcaRYxpdPP0XUbKlAqHiaQTdM
        Vex9J+LuIO9qnchRFuD1DYKcKJwLYeXs6tSRfh4mO+9qWpYaA3nKBsyjBvo1szak
        mmCA4DiFGZgta+2+rVCUY3tXHn52X64+JKHgd4NA/QEf/GXsgO4rvW0is6T3bKCo
        n2dKa0GOEMIVAoIBABmS5EfA5aG2Y5A/POj3xAsgWy5rGnJIrVm2o+whPpmAr5h2
        pxj5AZAVTBDnwvwQcW/gHUbg3sZ0PzAKECE9G9bxPFlI7Tq9jSwRLgg8n/J0ym5s
        VxJOXq4Mjb5rt2a4MsGurAVRxkW5cQh+mRoH2HFFvLTrVcn3Vbp7yA8t14/5wqZZ
        rLSb+hWybbouPDxfGfji4C7DRw7yDPFkU6YdWtJJhbizimOc+lzUUfBmIVm8A/La
        T1fn9D2SudBOmU+n6oHhTwU/JLn6xtH31FbDbmwyMPSLxSSvtj+02nCdc1TPZF4Q
        gbFMAT1Z5SE8Tsjlm5ASkdIqp7mUdEIaYzsIgJUCggEAKn/ewVYU9OGsJzVsHDL3
        0F8YR4Al2PbMhCoc70TprhNRH9V9lO25kbPpoZhSpehH/yWNqj7fwAqC3FUqRa2x
        c+YPdcY8VroU82wFNoCqZouK7W0MNoFq98WAw1k0N1kqBvyJvmZ2GAWBbvBW/nNj
        mwMTSfHt/RQAXQ8eWyJuSvHC6bTdOjBJW+f0enIbxn19BN6xKQ86cXXkrToMIcqb
        2Jcj2UzOXjex+36oLhc2/TI9VXLh6v0r/vlxxp6qv1HtkHOInqiYvEeuamxImHQX
        XBiknUpcsvz20RIBliUlf7tssk4FNGWMA4GinjFDUafmxxcFiybnn/Y6ISNL3LJ+
        HQKCAQEA2q493viIsIujsyDVUeW5CB94Zox30nINvOGxQ+Zt67ltyLYOLaQCp4Di
        P1GBmB5Pc78Bd7uIPzmZFvp6M1XPpA8HL2BbHaehEiRojBP8ytafMFbOAFfK7r7R
        bBHGBV2TLcuucQb5iMWCg/l5GTfX5PYUBq1nj/8QFYeflcSs8G4ndxGtl8qN2j8o
        sqBrbDbBJFidLxou0bwD7twX1fY3bOdTFxpO0cSMCxZ3wFeVoUR8mBeP87Jkno7x
        YBhb5j1KM+MPkast7nE2dczxfvzjDhr1rnsY9Yq8UHCIsFOf5krsNac1+k9zipR8
        DgoQeSng2kt5Z6mkoDIQTs7nEflb4w==
        -----END PRIVATE KEY-----
      SIM1_MSISDN: "17039811903"
      SIM1_NAME: testfsp1
      SIM2_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        Tv4G862WYeqD1fdyZaKQ3b9fAQEq1g==
        -----END PRIVATE KEY-----
      SIM2_MSISDN: "17039811904"
      SIM2_NAME: testfsp2
      SIMPAYEE_CURRENCY: USD
      SIMPAYEE_JWS_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT
        7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL
        noSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi
        120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI
        IoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y
        eW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB
        T/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z
        SikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq
        m+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2
        HfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I
        WylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0
        dQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY
        JuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB
        BKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4
        SfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj
        suHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd
        7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm
        fW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH
        tl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/
        n3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+
        CPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K
        FfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct
        0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ
        sHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa
        uutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW
        uu1pxuWD0gTJxFkp6u4YIAhw
        -----END PRIVATE KEY-----
      SIMPAYEE_JWS_PUB_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE
        sgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw
        IpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW
        Ngf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj
        vVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ
        LmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3
        FwIDAQAB
        -----END PUBLIC KEY-----
      SIMPAYEE_MSISDN: "17039811902"
      SIMPAYEE_NAME: payeefsp
      SIMPAYER_CURRENCY: USD
      SIMPAYER_JWS_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6
        jM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E
        vCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I
        eoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7
        kx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC
        QWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/
        sAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt
        A7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj
        a4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X
        KaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii
        yWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n
        xOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR
        RbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B
        dXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ
        uomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht
        vJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS
        gGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium
        sgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW
        6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR
        8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/
        kmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI
        iuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX
        7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa
        +fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4
        zXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF
        iNK0yCENMhSoOTtbT9tmGi0=
        -----END PRIVATE KEY-----
      SIMPAYER_MSISDN: "17039811901"
      SIMPAYER_NAME: payerfsp
      SIMPLE_ROUTING_MODE_ENABLED: true
      TEST_NOTIFICATIONS: true
      TESTFSP1_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp1-backend:3003
      TESTFSP1_CALLBACK_URL: http://$release_name-sim-testfsp1-scheme-adapter:4000
      TESTFSP1_JWS_PUB_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v
        dCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG
        42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6
        NRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa
        h9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os
        xQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by
        UQIDAQAB
        -----END PUBLIC KEY-----
      TESTFSP1_SDK_TESTAPI_URL: http://$release_name-sim-testfsp1-scheme-adapter:4002
      TESTFSP1_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp1-scheme-adapter:4002
      TESTFSP2_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp2-backend:3003
      TESTFSP2_CALLBACK_URL: http://$release_name-sim-testfsp2-scheme-adapter:4000
      TESTFSP2_JWS_PUB_KEY: |-
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y
        l5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5
        +ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG
        YedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H
        Ja+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6
        WZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+
        AQIDAQAB
        -----END PUBLIC KEY-----
      TESTFSP2_SDK_TESTAPI_URL: http://$release_name-sim-testfsp2-scheme-adapter:4002
      TESTFSP2_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp2-scheme-adapter:4002
      TTKFSP_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        DktFAP1w3ruycnE/t+/H8rDVJGPTHc8=
        -----END PRIVATE KEY-----
      WS_ASSERTION_TIMEOUT: 5000
      accept: application/vnd.interoperability.parties+json;version=1.0
      acceptParticipants: application/vnd.interoperability.participants+json;version=1.0
      acceptQuotes: application/vnd.interoperability.quotes+json;version=1.0
      acceptTransfers: application/vnd.interoperability.transfers+json;version=1.0
      accountId: "6"
      amount: "100"
      batchToIdValue1: "27713803066"
      batchToIdValue2: "27713803067"
      condition: n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU
      contentTransfers: application/vnd.interoperability.transfers+json;version=1.0
      contentType: application/vnd.interoperability.parties+json;version=1.0
      contentTypeParticipants: application/vnd.interoperability.participants+json;version=1.0
      contentTypeQuotes: application/vnd.interoperability.quotes+json;version=1.0
      currency: USD
      currency2: USD
      expectedAuthorizationsVersion: "1.0"
      expectedParticipantsVersion: "1.0"
      expectedPartiesVersion: "1.0"
      expectedQuotesVersion: "1.0"
      expectedTransactionRequestsVersion: "1.0"
      expectedTransfersVersion: "1.0"
      fromDOB: "1984-01-01"
      fromFirstName: Firstname-Test
      fromFspId: testingtoolkitdfsp
      fromIdType: MSISDN
      fromIdValue: "44123456789"
      fromLastName: Lastname-Test
      fspiopSignature: '{"signature":"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\",\"protectedHeader\":\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ"}'
      fundsInPrepareAmount: ""
      fundsInPrepareTransferId: ""
      homeTransactionId: 123ABC
      hub_operator: NOT_APPLICABLE
      hubEmail: some.email@gmail.com
      ilpPacket: AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA
      invalidFulfillment: _3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----
      invalidToIdType: ACCOUNT_ID
      invalidToIdValue: "27713803099"
      mobileSimPayeeFsp: greenbankfsp
      mobileSimPayerFsp: pinkbankfsp
      note: test
      payeeIdType: MSISDN
      payeeIdentifier: "17039811902"
      payeefsp: payeefsp
      payeefspEmail: some.email@gmail.com
      payerIdType: MSISDN
      payerIdentifier: "17039811901"
      payerfsp: testingtoolkitdfsp
      payerfspEmail: some.email@gmail.com
      payerfspSettlementAccountBalanceAfterFundsIn: ""
      payerfspSettlementAccountBalanceBeforeFundsIn: ""
      payerfspSettlementAccountId: ""
      receiverMSISDN: "27713803912"
      testfsp1Email: some.email@gmail.com
      testfsp1IdType: MSISDN
      testfsp1Identifier: "17039811903"
      testfsp1MSISDN: "17039811903"
      testfsp2Email: some.email@gmail.com
      testfsp2IdType: MSISDN
      testfsp2Identifier: "17039811904"
      testfsp2MSISDN: "17039811904"
      toFspId: payeefsp
      toIdType: MSISDN
      toIdValue: "27713803912"
      toIdValueDelete: "27713803913"
      validCondition: GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM
      validCondition2: kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms
      validFulfillment: UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA
      validIlpPacket2: AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA
  tests:
    deletePolicy: before-hook-creation
    enabled: false
    weight: -5
ml-ttk-posthook-setup:
  config:
    testCasesPathInZip: testing-toolkit-test-cases-master/collections/hub/provisioning
    testCasesZipUrl: https://github.com/mojaloop/testing-toolkit-test-cases/archive/master.zip
    ttkBackendURL: http://$release_name-ml-testing-toolkit-backend:5050
  postInstallHook:
    enabled: false
    weight: -5
  testCaseEnvironmentFile:
    inputValues:
      BASE_CENTRAL_LEDGER_ADMIN: ""
      CALLBACK_ENDPOINT_BASE_URL: http://$release_name-ml-testing-toolkit-backend:5000
      ENABLE_JWS_SIGNING: true
      ENABLE_JWS_VALIDATION: false
      ENABLE_PROTECTED_HEADERS_VALIDATION: true
      ENABLE_WS_ASSERTIONS: true
      HOST_ACCOUNT_LOOKUP_ADMIN: http://$release_name-account-lookup-service-admin
      HOST_ACCOUNT_LOOKUP_SERVICE: http://$release_name-account-lookup-service
      HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN: http://$release_name-account-lookup-service-admin
      HOST_BULK_ADAPTER: http://$release_name-bulk-api-adapter-service
      HOST_CENTRAL_LEDGER: http://$release_name-centralledger-service
      HOST_CENTRAL_SETTLEMENT: http://$release_name-centralsettlement-service/v2
      HOST_LEGACY_SIMULATOR: http://$release_name-simulator
      HOST_ML_API_ADAPTER: http://$release_name-ml-api-adapter-service
      HOST_QUOTING_SERVICE: http://$release_name-quoting-service
      HOST_SIMULATOR: http://$release_name-simulator
      HOST_TRANSACTION_REQUESTS_SERVICE: http://$release_name-transaction-requests-service
      HUB_OPERATOR_BEARER_TOKEN: NOT_APPLICABLE
      NORESPONSE_SIMPAYEE_NAME: noresponsepayeefsp
      ON_US_TRANSFERS_ENABLED: false
      PAYEEFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payeefsp-backend:3003
      PAYEEFSP_CALLBACK_URL: http://$release_name-sim-payeefsp-scheme-adapter:4000
      PAYEEFSP_SDK_TESTAPI_URL: http://$release_name-sim-payeefsp-scheme-adapter:4002
      PAYEEFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payeefsp-scheme-adapter:4002
      PAYERFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payerfsp-backend:3003
      PAYERFSP_CALLBACK_URL: http://$release_name-sim-payerfsp-scheme-adapter:4000
      PAYERFSP_SDK_TESTAPI_URL: http://$release_name-sim-payerfsp-scheme-adapter:4002
      PAYERFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payerfsp-scheme-adapter:4002
      SIM1_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        DgoQeSng2kt5Z6mkoDIQTs7nEflb4w==
        -----END PRIVATE KEY-----
      SIM1_MSISDN: "17039811903"
      SIM1_NAME: testfsp1
      SIM2_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIJQgIBADANBgkqhkiG9w0BAQEFAASCCSwwggkoAgEAAoICAQDO+faoQhcwWr3Z
        ppD60DkXg5ganK1Le14Z/IBx+GGQqdYVUa6hIGR0HV3HchIkUf60+ei9WyYer8ze
        7bJklfo2TiMAdWXb9+eHJ0+Vuvsb/tH5yRjbxgTpZRgygJWiKDGXrYkGKAfSagJ+
        WDd2vL9cG9W5+OyXNiitK5pHa0dj3QwS+9C/yxzqgGLlkIplEcLqdYFknoVK+mas
        YBG65B0+5NHy4soEIdGr7Nd2xINqq+2/qyghwxcBQrxktbHC+/R+odkvTLrHWuBr
        x5NnL+LAbfmfDntsUfo2nZb667IdcRFoLWlsU9jK+RaaxNFcbe+j1PY+oJQdXF52
        9JNQR6efBOtuZXD9hjV/N1zmRFCY/o8nKc05Po2RZuLS8xKv90I4uZNF78X1ZiLz
        5veBjZF+Xa6kB5ABPENVA7xuCepfPoUUIQweatF4BwjnBYmGA6WVVckD/VO6AvpU
        vFuy+BQpEQFcfoX7OrqkY2MMITotMcflVjboGdwdtvJWEhBApGp70KrDXoYIh0q4
        opt/z1jv5MveyNfhq8qPca0fovcHST1tsAS0cSaro622fILTddaeCbLt8fBLH1Dz
        wzM4TDWb0i8EgXhGnRdqz9KNukPB6YuAEaaCKoRxsxzx41HYFLtES8XhNuV2Umxl
        NboBHjKy1wycZfRvrriph/dmwNSpjQIDAQABAoICAAcxIdxCYaZlPMwTkN2aPyWd
        RbuE/rOM/53VC4yKRi+d6ym1+ySvqLXtME1GHjHDZJ+awHbV9DrkPnDvnv+GQ5m/
        +NDjA21TjajBWa9Y/jFAl0C/91xpotGOWPsmQyzNiz2bQtPjL7RkyR3lSFYYpGiZ
        sgFCkEwHzn2H8pYxONuUOn9tXxlPADv4xpb2AQ0Wgyic+ShLJtQOY+Nw+iS9mPOO
        xWnUbhMbLrsz4V/H384k17/NfXlA22uIi13Pf3QIR7xfuNl/J81WD87G8k0HWbB4
        kdAwU2MV7SUZMD4bUwbZXzK4wz1Ho5SX96xcku7MhiNx+rV95G+pvkGRaY4EU2Nv
        6g8cN/TliZKcTV445wZg6SWcgOC1Q8TlosVpP9SsbeuG9NIC8DMfLdy6qJ0tASuP
        b4z1k0jiAyb5mA5EvVyK0WjZDBNM4KwW9CU9XC7NHw5zEHJbeKmLmWiz1pNxVPu3
        gaN0iC54LjTbtTCl+m63aedwldAcjjrBclKJYGlGpbHl8MJ+fUFtPoeX8IlXwxAu
        0p0RYRjMxsNlJkS2EU/5CDC6VnFgNPNYxUfEYH89qlbH+nBgU+gmMUkxApSkvNYG
        IW4QPcbyjzVY4WiMG5JFYJ8nR6NypUSnyCNXBxNHfRyT9Ay7qNdCU7XmuXZVK6+Z
        li9YtfoJbnbUAHcxRAEJAoIBAQDtCMjG7qAfP2zAxtpZQFyte2SXfPcoVei4P+SW
        tHVTDE7IGl/RYlFAOj8oyulvOsaH+RtsiLzaKEY3jjeN8FJl3d1F1fwQN+JuGxIr
        r7P/fEmE69MHYlSou8z81DuS3ICavu8nC5q2nLJhXV9W1QY5gLMERUac1M2jiEJf
        aE0nWI59CagjtF8Xaq1uL6cv0Tyr7ORd5gt6LYL0zVChIrQaVx+LQhcy49Z6AQDw
        b4pVdSY7jrn0Q4SjvgMPTtHxvY1jN5hAvyOZGi1SUzpow7RNnYzGANd9aQNaKjJN
        qU7cBrJuLPyINMzUrdLC35yRebl/b975N5wBECA3htqbkljpAoIBAQDfiX+Bx4Qa
        J/8V4eWNyUwlg1Sq7xQe4EPiMELeEb0LD5zlUgGo4/UoWxmT84/CHlWDzScgYgUW
        at/y0fZuFCe/9IKLoR2Nqwppb1Ay+kMvbfJKdDQIhH2iFVobgracnm3duhIKX4mX
        df21dhROnZ6ZGqsHPjE6NwbRG6sg26U9gHu+LqVVUjgmRoeKZ7YT62tmpbbibLc1
        kazqZ9HkZtrjHNqpKts5VZJya/szEXIVfte+tzQoXHwNTQfFXtT9z+iNjIVxY6as
        Zj9c+vahGw+N1VPmd79FzOcMgBHwY0f8GN2gfBDPc30Ykrtugya74QxPWILBUpf+
        4QZEzLT7nWUFAoIBABeQPv1frXVNxc7oNb6Xol7wnFBe8OcGm0rttxiwOdWWrKJB
        1PKotnEPGUZB3bDcA+5yeiJw+W0qgch2D9nBYT+VLbEKk7M9CvptIIJNRjSIs3pO
        Qz1Bri7T9I3Rv1ZbK0G252lXQvsSWr1JHfgw1xySSbmL9XgTw5mVKxv272yQ5iFR
        +3AJN0bJqRICFLmxMDnbI9ydyNhNe+5AFtrd60+PB6i9WjcJ5UFdpi1AuVzDd5iG
        GMBKkf4BHqa/7Cj+8fZCCZWuKqjGrGi5s13EzsDEf8ETRljGProQ5c1InnlLBSPk
        vvn/Xblqyj/rINJpamJbyau2toB4jOtYMZUzmDkCggEAfmjeH0D5lmUJ3pEJZF3y
        XsBe7+8VXMSL/uw11CkJ06h3nEL8x0pqB/FEjKNOp4LJ7yfjuW9U2zGDBWjwx51E
        QUv/SwDImqWf1LHrE3js53RwcOQ3zJ1IApG6jBYmOHlrPdkMfKs8PtetqqFkqHSA
        DKrFDup/oiEeDMBtzL4JOrdewtTUEGTXdeWqnn05vRgDe1+5BWBfVr7Tnxco3dXA
        cHCPwtyGbmzSzTv9KQrzje5WCPbHWw+54zetblLLdeDN7MYLbGzjA1kq+eS99as8
        54M81/bdxpYyDqKaAmvSeGCDbE7cnsP7eRr5PWyTSenhMTmnb7XKWIteJSfyLNv8
        FQKCAQEAh9FvoIxoz4KvmVp+qyoXIXbq4egx4RdvNVBTWDnoQnVsnaetbzSkYPJX
        ObR7waDJd/eu8b+VnwhTiIIwzMA3ZYmV/ZNUh5YKtYXzNqphdyPpJHxN+lwSBeV0
        mbyQ+W4UzhG2t9vaFbV0UElsNFclKNzWzrTKRKAQjteFMItEKewN1Mjsb8Ckb1UV
        nQRBmAAt3prGgv27+vjGVjH39CymNhrBt8DSk/DWqmPeEYewwkiMkOUADHrPbIPi
        GWJYfY1jvUJsp75usbzG7VZ8SxDD8APOhJHIDVm4HiTsS0YcOY53i/7WirChSNne
        Tv4G862WYeqD1fdyZaKQ3b9fAQEq1g==
        -----END PRIVATE KEY-----
      SIM2_MSISDN: "17039811904"
      SIM2_NAME: testfsp2
      SIMPAYEE_CURRENCY: USD
      SIMPAYEE_JWS_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT
        7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL
        noSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi
        120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI
        IoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y
        eW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB
        T/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z
        SikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq
        m+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2
        HfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I
        WylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0
        dQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY
        JuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB
        BKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4
        SfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj
        suHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd
        7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm
        fW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH
        tl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/
        n3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+
        CPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K
        FfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct
        0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ
        sHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa
        uutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW
        uu1pxuWD0gTJxFkp6u4YIAhw
        -----END PRIVATE KEY-----
      SIMPAYEE_JWS_PUB_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE
        sgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw
        IpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW
        Ngf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj
        vVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ
        LmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3
        FwIDAQAB
        -----END PUBLIC KEY-----
      SIMPAYEE_MSISDN: "17039811902"
      SIMPAYEE_NAME: payeefsp
      SIMPAYER_CURRENCY: USD
      SIMPAYER_JWS_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6
        jM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E
        vCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I
        eoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7
        kx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC
        QWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/
        sAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt
        A7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj
        a4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X
        KaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii
        yWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n
        xOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR
        RbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B
        dXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ
        uomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht
        vJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS
        gGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium
        sgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW
        6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR
        8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/
        kmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI
        iuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX
        7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa
        +fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4
        zXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF
        iNK0yCENMhSoOTtbT9tmGi0=
        -----END PRIVATE KEY-----
      SIMPAYER_MSISDN: "17039811901"
      SIMPAYER_NAME: payerfsp
      SIMPLE_ROUTING_MODE_ENABLED: true
      TEST_NOTIFICATIONS: true
      TESTFSP1_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp1-backend:3003
      TESTFSP1_CALLBACK_URL: http://$release_name-sim-testfsp1-scheme-adapter:4000
      TESTFSP1_JWS_PUB_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v
        dCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG
        42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6
        NRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa
        h9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os
        xQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by
        UQIDAQAB
        -----END PUBLIC KEY-----
      TESTFSP1_SDK_TESTAPI_URL: http://$release_name-sim-testfsp1-scheme-adapter:4002
      TESTFSP1_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp1-scheme-adapter:4002
      TESTFSP2_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp2-backend:3003
      TESTFSP2_CALLBACK_URL: http://$release_name-sim-testfsp2-scheme-adapter:4000
      TESTFSP2_JWS_PUB_KEY: |-
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y
        l5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5
        +ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG
        YedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H
        Ja+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6
        WZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+
        AQIDAQAB
        -----END PUBLIC KEY-----
      TESTFSP2_SDK_TESTAPI_URL: http://$release_name-sim-testfsp2-scheme-adapter:4002
      TESTFSP2_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp2-scheme-adapter:4002
      TTKFSP_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIJQwIBADANBgkqhkiG9w0BAQEFAASCCS0wggkpAgEAAoICAQDPnscTEMZGXrO7
        H7nna4qgQPfODs2aV6A39ww4B2T2qeEncKk0xGTPUYAmjDO3TL4sG7Xl1Jiye9XL
        MaJxrMB4rh6Ndik8t+GiXIBOjeLVeg/uCBddTZfB/4yHpyfETbDM5QqQLsiWLyz9
        n6/O/bH8sgaygLMaTpYazaoI522bTTGBtgXf6nGNcjgypMPanbvFmE5lOls2Adjq
        QDbmC8FgnubSD5R//EULNSRnt+dxyExb7+vDcVqC0npxSxgBGHnkRIlbU6AszBpK
        2tMVGV84Qw8ibr1NSD/5n1fg/jfZfICVOcJRgw11v4+OAT3YqL7kKCUo2ChyYVWp
        H1aJ+luGs4N2KcgMsmEnA8eZmFMgXk2jJktt/kSXcJjzVg/0CAjK2c/oaPufVg+y
        KLRdBkS8FR3deCPH2xRl41f5NSB7/C2kCMcep8EZSlhJ6ZeS3A09HSJPNaA4//hN
        0o+DpqUQ2v9rwUH5OJ1YDk6xSFNDSmx/I2UEi/7JXZ5+zd0npfu5kZUQY00X7QrA
        hoxLc9zzJbYy3eSHaDsgJ4tRm68a2PpxbmwfvTF51iQwU2F30pE9Xuapbk6Hhwtk
        aQwlWohv+ZnNaJp6hsDFe+ELixdXlwi7UMvowXoD4+7AcfBe2QXLllYsZYYLaMj1
        YrKpNfThQoOYNo7UByPJOKLL9Err8QIDAQABAoICAFX3AKeAwQ//Az0eCEvtR8NN
        0y0DDRd0Y7b4eBs02JWXRk4dxDnAfZsnvD95uqoRQQajXJ/ydF0mkCGnhgK6TCFL
        uwPIoo9s9aRT155u+jZ46WKeAAqWZ5kgVhAO4pTRtDxKM6L6c/xXQTIsbc9vVMRz
        8/jx9/aTBmzHrjkslcIBZte1xd3uRSETY3h4p018FPTeOMuKK50Di8yGVRTQVjvK
        33inkc2iZvYahV3alB6VGCTTBNPyOc9EFgWV2bUObN3akOL7D62svtAypcatMDNr
        9LbFkmUO3spdMzZKHFbVSao/9Zjpgee4rthV5EUyrYNrqeMtCSY+7ghuHNdZjY5M
        E9IntIqtZTHnTXJuHR5aZhQUuRBBO8ymhzSRYLPCWTrIb2FdRVj2u2h8YOhVgo13
        3/b55Q1vJxWbUdqgxn087PvvNoznIqTphsKGivyPZ45scnwVMhVd8Pgm6V0nuoCV
        Yj32CSXFFTavZTP6c7CN3jzjSXyHlJrC4vhVD30tqV9iDeZtYE3AGuP3E3xGE7oU
        vqBzkUOk5gnYxbKpFA2kW8uY0XWmbrWR3sz+1Xw7IrQuyqMFvjnhRdpJaodkAlDa
        roefxFliyek4/SRyPcWiM0yaP6Mz6ssGg018b/fM+HemE/wtd3I6qDS9PZl3LBdv
        9aLz9XTh948/kIASRjLHAoIBAQDpqwuM1UlcQTuUmuoF0hADmBzi8eIR2JcnVVdE
        UHfu8jJ3LMzNNf5VAcjbBwTb3/gdVhD71dm9GdGGmX4bLBogGqRuEYZtDKOoHu0w
        RKUGSATob2qkLC6bI+Xg1q6XMTNxrBqqjTMCbHKuvwuwF8qTYTuP4GTaDEBpOdme
        VfWoLu9JAbQz/9NxUYqmj2FckA/v1LQ9apBu+Cnwk9/U/Yi/kGz8EuX8apfgou1b
        6fi0m/TkkbXuVEKP9CwUuWcX5TGQ5LFSqfK40eIT5AIKPhTWAwZV1iRhNh2J9kNH
        gC2yOqFswSRVJ6KsYMs7pMv2g2cwjBP8M1BudKRIxkFJbcmLAoIBAQDjdnDVq09b
        xHsv29evhx70GDl+oyNEkbhKjGqr4V7yL8wcchSdyfT8bZhSo/cBE/BRhfgBreLo
        TGUHBDWEySGfmWwMQQjorLawnAiJGerm7N497R67jmdZIgd7NwcA+XQ7N784Xbox
        9IngEvAt8hyUqJXQOSNnigLOWQoJSdyYzpsXBSjXcu/TsgozLu+FD9Gii8T+hyuo
        NhAgmj/9Vr8GhKVIkaWRPouTGA2pm2b6iJgaHWLICbUK8VFdc9XTkBuhTc7IyGHP
        1gd87cOM4AkgNp6+XMAmJqePRnBAvbDxNIdaNr/Bp2YxRw+uTa8qCpi3bAsG1qjJ
        WJHlNT/jz3fzAoIBAQDYu3jMGOyhcDQGIyYbXfrSip2Idlh8uwuARSzbRVPowqbC
        WUBgusr7J9uYJEuCcZveAf1gyLrcJf1sviP0qhRVYMDRAtpPfWCyyHSxx4nVaKl8
        uhMM0Zos9b/7qsRnohAYSEy3kp4UimhY4wTBQV/5ET/AtJ52jNSVhT3vGcXwSBBU
        BAuUC56gRcS3ttfUlh7iEcVYDeaHtxCXf2EmWj8jh58+s3y0gl360sQb88lmJB2i
        f/Biba8LfKwCUPFpfYFa5nP+u3lRqgLq9hpaS7jhxA51QVme/SWq2EsRH7fCz5T4
        nbDIdynwfxsiaDlynfDxW4wR6bqZqQDUK2dU50r/AoIBAQCvNsY2IS8RPmmx9QPR
        ByG1348yWJJLOICglEd7PTC5GE5/PvVYkoAvjnB+gCU95FEDS1I+YObgEDDmVbyw
        G4rV+QW87r/hE2Hq61a73YYP+jg7tZMt4MUFaOwgYsP3YTDCiO+4iKJr5rXqMExo
        6A5SCQbWDZ2THUGKGBZeD1JpNwVKl0PdqoDJLmUjBi2k7wmJz2agthjQC00jAA74
        pECj0bvMCb1jA63aUfX8R2Ps6xlXTHmSI8AcvMTzWs5EmMZf26LFEW4e/fxopHI0
        60K8WLaxZprxCGecOyMvC6/oLZFx0aimkL9siBOxLdAXb3AyInzf+Kyt5JcF253q
        ax83AoIBAGSoxz91Oc+NPP3NNYlPuhXErqC+R/EEO6Z6ZalKsJtfgL1Ss6Fq30ot
        iKhEfFYm1gmZDTrMbI6dceGkNg4l8okXz9U6lfUQH0muk8ZRl8LaSm7cQwzcAI1S
        m7XPnrwLtX81SihtxZnrvLTre8aM9ykKWCXiLY19LXDuJZQdwbzSgX1ie2Q2ZRcz
        Rbxm20mgybQ0Jmmw1tY58d5GH5Y/A9NE+D0scobljMH5q/uHeg2bDx1piSw1lsx1
        zuoFe7sNa+zDFiYxXlyOhqDxenNRv4oDupGRefTaoJofGBDre5H2nDeWC2ZzYFEB
        DktFAP1w3ruycnE/t+/H8rDVJGPTHc8=
        -----END PRIVATE KEY-----
      WS_ASSERTION_TIMEOUT: 5000
      accept: application/vnd.interoperability.parties+json;version=1.0
      acceptParticipants: application/vnd.interoperability.participants+json;version=1.0
      acceptQuotes: application/vnd.interoperability.quotes+json;version=1.0
      acceptTransfers: application/vnd.interoperability.transfers+json;version=1.0
      accountId: "6"
      amount: "100"
      batchToIdValue1: "27713803066"
      batchToIdValue2: "27713803067"
      condition: n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU
      contentTransfers: application/vnd.interoperability.transfers+json;version=1.0
      contentType: application/vnd.interoperability.parties+json;version=1.0
      contentTypeParticipants: application/vnd.interoperability.participants+json;version=1.0
      contentTypeQuotes: application/vnd.interoperability.quotes+json;version=1.0
      currency: USD
      currency2: USD
      expectedAuthorizationsVersion: "1.0"
      expectedParticipantsVersion: "1.0"
      expectedPartiesVersion: "1.0"
      expectedQuotesVersion: "1.0"
      expectedTransactionRequestsVersion: "1.0"
      expectedTransfersVersion: "1.0"
      fromDOB: "1984-01-01"
      fromFirstName: Firstname-Test
      fromFspId: testingtoolkitdfsp
      fromIdType: MSISDN
      fromIdValue: "44123456789"
      fromLastName: Lastname-Test
      fspiopSignature: '{"signature":"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\",\"protectedHeader\":\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ"}'
      fundsInPrepareAmount: ""
      fundsInPrepareTransferId: ""
      homeTransactionId: 123ABC
      hub_operator: NOT_APPLICABLE
      hubEmail: some.email@gmail.com
      ilpPacket: AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA
      invalidFulfillment: _3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----
      invalidToIdType: ACCOUNT_ID
      invalidToIdValue: "27713803099"
      mobileSimPayeeFsp: greenbankfsp
      mobileSimPayerFsp: pinkbankfsp
      note: test
      payeeIdType: MSISDN
      payeeIdentifier: "17039811902"
      payeefsp: payeefsp
      payeefspEmail: some.email@gmail.com
      payerIdType: MSISDN
      payerIdentifier: "17039811901"
      payerfsp: testingtoolkitdfsp
      payerfspEmail: some.email@gmail.com
      payerfspSettlementAccountBalanceAfterFundsIn: ""
      payerfspSettlementAccountBalanceBeforeFundsIn: ""
      payerfspSettlementAccountId: ""
      receiverMSISDN: "27713803912"
      testfsp1Email: some.email@gmail.com
      testfsp1IdType: MSISDN
      testfsp1Identifier: "17039811903"
      testfsp1MSISDN: "17039811903"
      testfsp2Email: some.email@gmail.com
      testfsp2IdType: MSISDN
      testfsp2Identifier: "17039811904"
      testfsp2MSISDN: "17039811904"
      toFspId: payeefsp
      toIdType: MSISDN
      toIdValue: "27713803912"
      toIdValueDelete: "27713803913"
      validCondition: GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM
      validCondition2: kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms
      validFulfillment: UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA
      validIlpPacket2: AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA
ml-ttk-posthook-tests:
  config:
    environmentName: DEV2
    testCasesPathInZip: testing-toolkit-test-cases-master/collections/hub/sequence
    testCasesZipUrl: https://github.com/mojaloop/testing-toolkit-test-cases/archive/master.zip
    testSuiteName: Test run after deployment
    ttkBackendURL: http://$release_name-ml-testing-toolkit-backend:5050
  configCreds: null
  configFileDefaults:
    mode: outbound
    slackFailedImage: https://mojaloop-oss-qa-results.s3-us-west-2.amazonaws.com/ttk-tests/assets/cancel-47588_640.png
    slackPassedImage: https://mojaloop-oss-qa-results.s3-us-west-2.amazonaws.com/ttk-tests/assets/accept-47587_640.png
  postInstallHook:
    enabled: false
    weight: -4
  testCaseEnvironmentFile:
    inputValues:
      BASE_CENTRAL_LEDGER_ADMIN: ""
      CALLBACK_ENDPOINT_BASE_URL: http://$release_name-ml-testing-toolkit-backend:5000
      ENABLE_JWS_SIGNING: true
      ENABLE_JWS_VALIDATION: false
      ENABLE_PROTECTED_HEADERS_VALIDATION: true
      ENABLE_WS_ASSERTIONS: true
      HOST_ACCOUNT_LOOKUP_ADMIN: http://$release_name-account-lookup-service-admin
      HOST_ACCOUNT_LOOKUP_SERVICE: http://$release_name-account-lookup-service
      HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN: http://$release_name-account-lookup-service-admin
      HOST_BULK_ADAPTER: http://$release_name-bulk-api-adapter-service
      HOST_CENTRAL_LEDGER: http://$release_name-centralledger-service
      HOST_CENTRAL_SETTLEMENT: http://$release_name-centralsettlement-service/v2
      HOST_LEGACY_SIMULATOR: http://$release_name-simulator
      HOST_ML_API_ADAPTER: http://$release_name-ml-api-adapter-service
      HOST_QUOTING_SERVICE: http://$release_name-quoting-service
      HOST_SIMULATOR: http://$release_name-simulator
      HOST_TRANSACTION_REQUESTS_SERVICE: http://$release_name-transaction-requests-service
      HUB_OPERATOR_BEARER_TOKEN: NOT_APPLICABLE
      NORESPONSE_SIMPAYEE_NAME: noresponsepayeefsp
      ON_US_TRANSFERS_ENABLED: false
      PAYEEFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payeefsp-backend:3003
      PAYEEFSP_CALLBACK_URL: http://$release_name-sim-payeefsp-scheme-adapter:4000
      PAYEEFSP_SDK_TESTAPI_URL: http://$release_name-sim-payeefsp-scheme-adapter:4002
      PAYEEFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payeefsp-scheme-adapter:4002
      PAYERFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payerfsp-backend:3003
      PAYERFSP_CALLBACK_URL: http://$release_name-sim-payerfsp-scheme-adapter:4000
      PAYERFSP_SDK_TESTAPI_URL: http://$release_name-sim-payerfsp-scheme-adapter:4002
      PAYERFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payerfsp-scheme-adapter:4002
      SIM1_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        DgoQeSng2kt5Z6mkoDIQTs7nEflb4w==
        -----END PRIVATE KEY-----
      SIM1_MSISDN: "17039811903"
      SIM1_NAME: testfsp1
      SIM2_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        Tv4G862WYeqD1fdyZaKQ3b9fAQEq1g==
        -----END PRIVATE KEY-----
      SIM2_MSISDN: "17039811904"
      SIM2_NAME: testfsp2
      SIMPAYEE_CURRENCY: USD
      SIMPAYEE_JWS_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT
        7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL
        noSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi
        120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI
        IoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y
        eW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB
        T/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z
        SikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq
        m+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2
        HfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I
        WylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0
        dQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY
        JuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB
        BKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4
        SfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj
        suHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd
        7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm
        fW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH
        tl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/
        n3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+
        CPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K
        FfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct
        0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ
        sHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa
        uutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW
        uu1pxuWD0gTJxFkp6u4YIAhw
        -----END PRIVATE KEY-----
      SIMPAYEE_JWS_PUB_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE
        sgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw
        IpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW
        Ngf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj
        vVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ
        LmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3
        FwIDAQAB
        -----END PUBLIC KEY-----
      SIMPAYEE_MSISDN: "17039811902"
      SIMPAYEE_NAME: payeefsp
      SIMPAYER_CURRENCY: USD
      SIMPAYER_JWS_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6
        jM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E
        vCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I
        eoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7
        kx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC
        QWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/
        sAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt
        A7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj
        a4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X
        KaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii
        yWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n
        xOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR
        RbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B
        dXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ
        uomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht
        vJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS
        gGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium
        sgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW
        6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR
        8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/
        kmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI
        iuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX
        7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa
        +fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4
        zXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF
        iNK0yCENMhSoOTtbT9tmGi0=
        -----END PRIVATE KEY-----
      SIMPAYER_MSISDN: "17039811901"
      SIMPAYER_NAME: payerfsp
      SIMPLE_ROUTING_MODE_ENABLED: true
      TEST_NOTIFICATIONS: true
      TESTFSP1_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp1-backend:3003
      TESTFSP1_CALLBACK_URL: http://$release_name-sim-testfsp1-scheme-adapter:4000
      TESTFSP1_JWS_PUB_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v
        dCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG
        42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6
        NRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa
        h9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os
        xQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by
        UQIDAQAB
        -----END PUBLIC KEY-----
      TESTFSP1_SDK_TESTAPI_URL: http://$release_name-sim-testfsp1-scheme-adapter:4002
      TESTFSP1_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp1-scheme-adapter:4002
      TESTFSP2_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp2-backend:3003
      TESTFSP2_CALLBACK_URL: http://$release_name-sim-testfsp2-scheme-adapter:4000
      TESTFSP2_JWS_PUB_KEY: |-
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y
        l5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5
        +ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG
        YedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H
        Ja+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6
        WZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+
        AQIDAQAB
        -----END PUBLIC KEY-----
      TESTFSP2_SDK_TESTAPI_URL: http://$release_name-sim-testfsp2-scheme-adapter:4002
      TESTFSP2_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp2-scheme-adapter:4002
      TTKFSP_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        DktFAP1w3ruycnE/t+/H8rDVJGPTHc8=
        -----END PRIVATE KEY-----
      WS_ASSERTION_TIMEOUT: 5000
      accept: application/vnd.interoperability.parties+json;version=1.0
      acceptParticipants: application/vnd.interoperability.participants+json;version=1.0
      acceptQuotes: application/vnd.interoperability.quotes+json;version=1.0
      acceptTransfers: application/vnd.interoperability.transfers+json;version=1.0
      accountId: "6"
      amount: "100"
      batchToIdValue1: "27713803066"
      batchToIdValue2: "27713803067"
      condition: n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU
      contentTransfers: application/vnd.interoperability.transfers+json;version=1.0
      contentType: application/vnd.interoperability.parties+json;version=1.0
      contentTypeParticipants: application/vnd.interoperability.participants+json;version=1.0
      contentTypeQuotes: application/vnd.interoperability.quotes+json;version=1.0
      currency: USD
      currency2: USD
      expectedAuthorizationsVersion: "1.0"
      expectedParticipantsVersion: "1.0"
      expectedPartiesVersion: "1.0"
      expectedQuotesVersion: "1.0"
      expectedTransactionRequestsVersion: "1.0"
      expectedTransfersVersion: "1.0"
      fromDOB: "1984-01-01"
      fromFirstName: Firstname-Test
      fromFspId: testingtoolkitdfsp
      fromIdType: MSISDN
      fromIdValue: "44123456789"
      fromLastName: Lastname-Test
      fspiopSignature: '{"signature":"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\",\"protectedHeader\":\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ"}'
      fundsInPrepareAmount: ""
      fundsInPrepareTransferId: ""
      homeTransactionId: 123ABC
      hub_operator: NOT_APPLICABLE
      hubEmail: some.email@gmail.com
      ilpPacket: AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA
      invalidFulfillment: _3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----
      invalidToIdType: ACCOUNT_ID
      invalidToIdValue: "27713803099"
      mobileSimPayeeFsp: greenbankfsp
      mobileSimPayerFsp: pinkbankfsp
      note: test
      payeeIdType: MSISDN
      payeeIdentifier: "17039811902"
      payeefsp: payeefsp
      payeefspEmail: some.email@gmail.com
      payerIdType: MSISDN
      payerIdentifier: "17039811901"
      payerfsp: testingtoolkitdfsp
      payerfspEmail: some.email@gmail.com
      payerfspSettlementAccountBalanceAfterFundsIn: ""
      payerfspSettlementAccountBalanceBeforeFundsIn: ""
      payerfspSettlementAccountId: ""
      receiverMSISDN: "27713803912"
      testfsp1Email: some.email@gmail.com
      testfsp1IdType: MSISDN
      testfsp1Identifier: "17039811903"
      testfsp1MSISDN: "17039811903"
      testfsp2Email: some.email@gmail.com
      testfsp2IdType: MSISDN
      testfsp2Identifier: "17039811904"
      testfsp2MSISDN: "17039811904"
      toFspId: payeefsp
      toIdType: MSISDN
      toIdValue: "27713803912"
      toIdValueDelete: "27713803913"
      validCondition: GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM
      validCondition2: kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms
      validFulfillment: UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA
      validIlpPacket2: AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA
ml-ttk-test-setup:
  config:
    environmentName: Development
    testCasesPathInZip: testing-toolkit-test-cases-12.0.0/collections/hub/provisioning
    testCasesZipUrl: https://github.com/mojaloop/testing-toolkit-test-cases/archive/v12.0.0.zip
    testSuiteName: GP Tests
    ttkBackendURL: http://$release_name-ml-testing-toolkit-backend:5050
  configCreds:
    AWS_ACCESS_KEY_ID: some_aws_access_key
    AWS_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY: some_aws_secret_key
  configFileDefaults:
    logLevel: "2"
    mode: outbound
  global: {}
  image:
    pullPolicy: IfNotPresent
    repository: mojaloop/ml-testing-toolkit
    tag: v11.9.4
  postInstallHook:
    deletePolicy: before-hook-creation
    enabled: false
    weight: -5
  replicaCount: 1
  resources: {}
  scheduling:
    cronSchedule: 0 8 * * *
    enabled: false
  testCaseEnvironmentFile:
    inputValues:
      BASE_CENTRAL_LEDGER_ADMIN: ""
      CALLBACK_ENDPOINT_BASE_URL: http://$release_name-ml-testing-toolkit-backend:5000
      ENABLE_JWS_SIGNING: true
      ENABLE_JWS_VALIDATION: false
      ENABLE_PROTECTED_HEADERS_VALIDATION: true
      ENABLE_WS_ASSERTIONS: true
      HOST_ACCOUNT_LOOKUP_ADMIN: http://$release_name-account-lookup-service-admin
      HOST_ACCOUNT_LOOKUP_SERVICE: http://$release_name-account-lookup-service
      HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN: http://$release_name-account-lookup-service-admin
      HOST_BULK_ADAPTER: http://$release_name-bulk-api-adapter-service
      HOST_CENTRAL_LEDGER: http://$release_name-centralledger-service
      HOST_CENTRAL_SETTLEMENT: http://$release_name-centralsettlement-service/v2
      HOST_LEGACY_SIMULATOR: http://$release_name-simulator
      HOST_ML_API_ADAPTER: http://$release_name-ml-api-adapter-service
      HOST_QUOTING_SERVICE: http://$release_name-quoting-service
      HOST_SIMULATOR: http://$release_name-simulator
      HOST_TRANSACTION_REQUESTS_SERVICE: http://$release_name-transaction-requests-service
      HUB_OPERATOR_BEARER_TOKEN: NOT_APPLICABLE
      NORESPONSE_SIMPAYEE_NAME: noresponsepayeefsp
      ON_US_TRANSFERS_ENABLED: false
      PAYEEFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payeefsp-backend:3003
      PAYEEFSP_CALLBACK_URL: http://$release_name-sim-payeefsp-scheme-adapter:4000
      PAYEEFSP_SDK_TESTAPI_URL: http://$release_name-sim-payeefsp-scheme-adapter:4002
      PAYEEFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payeefsp-scheme-adapter:4002
      PAYERFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payerfsp-backend:3003
      PAYERFSP_CALLBACK_URL: http://$release_name-sim-payerfsp-scheme-adapter:4000
      PAYERFSP_SDK_TESTAPI_URL: http://$release_name-sim-payerfsp-scheme-adapter:4002
      PAYERFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payerfsp-scheme-adapter:4002
      SIM1_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        DgoQeSng2kt5Z6mkoDIQTs7nEflb4w==
        -----END PRIVATE KEY-----
      SIM1_MSISDN: "17039811903"
      SIM1_NAME: testfsp1
      SIM2_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        Tv4G862WYeqD1fdyZaKQ3b9fAQEq1g==
        -----END PRIVATE KEY-----
      SIM2_MSISDN: "17039811904"
      SIM2_NAME: testfsp2
      SIMPAYEE_CURRENCY: USD
      SIMPAYEE_JWS_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT
        7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL
        noSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi
        120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI
        IoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y
        eW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB
        T/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z
        SikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq
        m+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2
        HfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I
        WylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0
        dQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY
        JuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB
        BKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4
        SfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj
        suHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd
        7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm
        fW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH
        tl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/
        n3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+
        CPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K
        FfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct
        0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ
        sHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa
        uutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW
        uu1pxuWD0gTJxFkp6u4YIAhw
        -----END PRIVATE KEY-----
      SIMPAYEE_JWS_PUB_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE
        sgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw
        IpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW
        Ngf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj
        vVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ
        LmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3
        FwIDAQAB
        -----END PUBLIC KEY-----
      SIMPAYEE_MSISDN: "17039811902"
      SIMPAYEE_NAME: payeefsp
      SIMPAYER_CURRENCY: USD
      SIMPAYER_JWS_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6
        jM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E
        vCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I
        eoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7
        kx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC
        QWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/
        sAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt
        A7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj
        a4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X
        KaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii
        yWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n
        xOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR
        RbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B
        dXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ
        uomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht
        vJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS
        gGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium
        sgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW
        6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR
        8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/
        kmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI
        iuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX
        7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa
        +fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4
        zXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF
        iNK0yCENMhSoOTtbT9tmGi0=
        -----END PRIVATE KEY-----
      SIMPAYER_MSISDN: "17039811901"
      SIMPAYER_NAME: payerfsp
      SIMPLE_ROUTING_MODE_ENABLED: true
      TEST_NOTIFICATIONS: true
      TESTFSP1_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp1-backend:3003
      TESTFSP1_CALLBACK_URL: http://$release_name-sim-testfsp1-scheme-adapter:4000
      TESTFSP1_JWS_PUB_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v
        dCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG
        42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6
        NRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa
        h9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os
        xQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by
        UQIDAQAB
        -----END PUBLIC KEY-----
      TESTFSP1_SDK_TESTAPI_URL: http://$release_name-sim-testfsp1-scheme-adapter:4002
      TESTFSP1_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp1-scheme-adapter:4002
      TESTFSP2_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp2-backend:3003
      TESTFSP2_CALLBACK_URL: http://$release_name-sim-testfsp2-scheme-adapter:4000
      TESTFSP2_JWS_PUB_KEY: |-
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y
        l5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5
        +ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG
        YedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H
        Ja+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6
        WZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+
        AQIDAQAB
        -----END PUBLIC KEY-----
      TESTFSP2_SDK_TESTAPI_URL: http://$release_name-sim-testfsp2-scheme-adapter:4002
      TESTFSP2_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp2-scheme-adapter:4002
      TTKFSP_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        DktFAP1w3ruycnE/t+/H8rDVJGPTHc8=
        -----END PRIVATE KEY-----
      WS_ASSERTION_TIMEOUT: 5000
      accept: application/vnd.interoperability.parties+json;version=1.0
      acceptParticipants: application/vnd.interoperability.participants+json;version=1.0
      acceptQuotes: application/vnd.interoperability.quotes+json;version=1.0
      acceptTransfers: application/vnd.interoperability.transfers+json;version=1.0
      accountId: "6"
      amount: "100"
      batchToIdValue1: "27713803066"
      batchToIdValue2: "27713803067"
      condition: n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU
      contentTransfers: application/vnd.interoperability.transfers+json;version=1.0
      contentType: application/vnd.interoperability.parties+json;version=1.0
      contentTypeParticipants: application/vnd.interoperability.participants+json;version=1.0
      contentTypeQuotes: application/vnd.interoperability.quotes+json;version=1.0
      currency: USD
      currency2: USD
      expectedAuthorizationsVersion: "1.0"
      expectedParticipantsVersion: "1.0"
      expectedPartiesVersion: "1.0"
      expectedQuotesVersion: "1.0"
      expectedTransactionRequestsVersion: "1.0"
      expectedTransfersVersion: "1.0"
      fromDOB: "1984-01-01"
      fromFirstName: Firstname-Test
      fromFspId: testingtoolkitdfsp
      fromIdType: MSISDN
      fromIdValue: "44123456789"
      fromLastName: Lastname-Test
      fspiopSignature: '{"signature":"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\",\"protectedHeader\":\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ"}'
      fundsInPrepareAmount: ""
      fundsInPrepareTransferId: ""
      homeTransactionId: 123ABC
      hub_operator: NOT_APPLICABLE
      hubEmail: some.email@gmail.com
      ilpPacket: AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA
      invalidFulfillment: _3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----
      invalidToIdType: ACCOUNT_ID
      invalidToIdValue: "27713803099"
      mobileSimPayeeFsp: greenbankfsp
      mobileSimPayerFsp: pinkbankfsp
      note: test
      payeeIdType: MSISDN
      payeeIdentifier: "17039811902"
      payeefsp: payeefsp
      payeefspEmail: some.email@gmail.com
      payerIdType: MSISDN
      payerIdentifier: "17039811901"
      payerfsp: testingtoolkitdfsp
      payerfspEmail: some.email@gmail.com
      payerfspSettlementAccountBalanceAfterFundsIn: ""
      payerfspSettlementAccountBalanceBeforeFundsIn: ""
      payerfspSettlementAccountId: ""
      receiverMSISDN: "27713803912"
      testfsp1Email: some.email@gmail.com
      testfsp1IdType: MSISDN
      testfsp1Identifier: "17039811903"
      testfsp1MSISDN: "17039811903"
      testfsp2Email: some.email@gmail.com
      testfsp2IdType: MSISDN
      testfsp2Identifier: "17039811904"
      testfsp2MSISDN: "17039811904"
      toFspId: payeefsp
      toIdType: MSISDN
      toIdValue: "27713803912"
      toIdValueDelete: "27713803913"
      validCondition: GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM
      validCondition2: kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms
      validFulfillment: UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA
      validIlpPacket2: AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA
  tests:
    deletePolicy: before-hook-creation
    enabled: true
    weight: -5
ml-ttk-test-validation:
  config:
    environmentName: Development
    testCasesPathInZip: testing-toolkit-test-cases-12.0.0/collections/hub/golden_path
    testCasesZipUrl: https://github.com/mojaloop/testing-toolkit-test-cases/archive/v12.0.0.zip
    testSuiteName: GP Tests
    ttkBackendURL: http://$release_name-ml-testing-toolkit-backend:5050
  testCaseEnvironmentFile:
    inputValues:
      BASE_CENTRAL_LEDGER_ADMIN: ""
      CALLBACK_ENDPOINT_BASE_URL: http://$release_name-ml-testing-toolkit-backend:5000
      ENABLE_JWS_SIGNING: true
      ENABLE_JWS_VALIDATION: false
      ENABLE_PROTECTED_HEADERS_VALIDATION: true
      ENABLE_WS_ASSERTIONS: true
      HOST_ACCOUNT_LOOKUP_ADMIN: http://$release_name-account-lookup-service-admin
      HOST_ACCOUNT_LOOKUP_SERVICE: http://$release_name-account-lookup-service
      HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN: http://$release_name-account-lookup-service-admin
      HOST_BULK_ADAPTER: http://$release_name-bulk-api-adapter-service
      HOST_CENTRAL_LEDGER: http://$release_name-centralledger-service
      HOST_CENTRAL_SETTLEMENT: http://$release_name-centralsettlement-service/v2
      HOST_LEGACY_SIMULATOR: http://$release_name-simulator
      HOST_ML_API_ADAPTER: http://$release_name-ml-api-adapter-service
      HOST_QUOTING_SERVICE: http://$release_name-quoting-service
      HOST_SIMULATOR: http://$release_name-simulator
      HOST_TRANSACTION_REQUESTS_SERVICE: http://$release_name-transaction-requests-service
      HUB_OPERATOR_BEARER_TOKEN: NOT_APPLICABLE
      NORESPONSE_SIMPAYEE_NAME: noresponsepayeefsp
      ON_US_TRANSFERS_ENABLED: false
      PAYEEFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payeefsp-backend:3003
      PAYEEFSP_CALLBACK_URL: http://$release_name-sim-payeefsp-scheme-adapter:4000
      PAYEEFSP_SDK_TESTAPI_URL: http://$release_name-sim-payeefsp-scheme-adapter:4002
      PAYEEFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payeefsp-scheme-adapter:4002
      PAYERFSP_BACKEND_TESTAPI_URL: http://$release_name-sim-payerfsp-backend:3003
      PAYERFSP_CALLBACK_URL: http://$release_name-sim-payerfsp-scheme-adapter:4000
      PAYERFSP_SDK_TESTAPI_URL: http://$release_name-sim-payerfsp-scheme-adapter:4002
      PAYERFSP_SDK_TESTAPI_WS_URL: ws://$release_name-sim-payerfsp-scheme-adapter:4002
      SIM1_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        DgoQeSng2kt5Z6mkoDIQTs7nEflb4w==
        -----END PRIVATE KEY-----
      SIM1_MSISDN: "17039811903"
      SIM1_NAME: testfsp1
      SIM2_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        Tv4G862WYeqD1fdyZaKQ3b9fAQEq1g==
        -----END PRIVATE KEY-----
      SIM2_MSISDN: "17039811904"
      SIM2_NAME: testfsp2
      SIMPAYEE_CURRENCY: USD
      SIMPAYEE_JWS_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT
        7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL
        noSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi
        120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI
        IoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y
        eW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB
        T/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z
        SikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq
        m+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2
        HfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I
        WylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0
        dQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY
        JuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB
        BKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4
        SfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj
        suHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd
        7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm
        fW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH
        tl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/
        n3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+
        CPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K
        FfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct
        0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ
        sHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa
        uutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW
        uu1pxuWD0gTJxFkp6u4YIAhw
        -----END PRIVATE KEY-----
      SIMPAYEE_JWS_PUB_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE
        sgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw
        IpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW
        Ngf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj
        vVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ
        LmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3
        FwIDAQAB
        -----END PUBLIC KEY-----
      SIMPAYEE_MSISDN: "17039811902"
      SIMPAYEE_NAME: payeefsp
      SIMPAYER_CURRENCY: USD
      SIMPAYER_JWS_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6
        jM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E
        vCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I
        eoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7
        kx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC
        QWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/
        sAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt
        A7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj
        a4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X
        KaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii
        yWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n
        xOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR
        RbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B
        dXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ
        uomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht
        vJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS
        gGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium
        sgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW
        6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR
        8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/
        kmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI
        iuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX
        7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa
        +fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4
        zXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF
        iNK0yCENMhSoOTtbT9tmGi0=
        -----END PRIVATE KEY-----
      SIMPAYER_MSISDN: "17039811901"
      SIMPAYER_NAME: payerfsp
      SIMPLE_ROUTING_MODE_ENABLED: true
      TEST_NOTIFICATIONS: true
      TESTFSP1_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp1-backend:3003
      TESTFSP1_CALLBACK_URL: http://$release_name-sim-testfsp1-scheme-adapter:4000
      TESTFSP1_JWS_PUB_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v
        dCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG
        42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6
        NRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa
        h9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os
        xQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by
        UQIDAQAB
        -----END PUBLIC KEY-----
      TESTFSP1_SDK_TESTAPI_URL: http://$release_name-sim-testfsp1-scheme-adapter:4002
      TESTFSP1_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp1-scheme-adapter:4002
      TESTFSP2_BACKEND_TESTAPI_URL: http://$release_name-sim-testfsp2-backend:3003
      TESTFSP2_CALLBACK_URL: http://$release_name-sim-testfsp2-scheme-adapter:4000
      TESTFSP2_JWS_PUB_KEY: |-
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y
        l5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5
        +ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG
        YedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H
        Ja+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6
        WZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+
        AQIDAQAB
        -----END PUBLIC KEY-----
      TESTFSP2_SDK_TESTAPI_URL: http://$release_name-sim-testfsp2-scheme-adapter:4002
      TESTFSP2_SDK_TESTAPI_WS_URL: ws://$release_name-sim-testfsp2-scheme-adapter:4002
      TTKFSP_JWS_KEY: |
        -----BEGIN PRIVATE KEY-----
        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
        DktFAP1w3ruycnE/t+/H8rDVJGPTHc8=
        -----END PRIVATE KEY-----
      WS_ASSERTION_TIMEOUT: 5000
      accept: application/vnd.interoperability.parties+json;version=1.0
      acceptParticipants: application/vnd.interoperability.participants+json;version=1.0
      acceptQuotes: application/vnd.interoperability.quotes+json;version=1.0
      acceptTransfers: application/vnd.interoperability.transfers+json;version=1.0
      accountId: "6"
      amount: "100"
      batchToIdValue1: "27713803066"
      batchToIdValue2: "27713803067"
      condition: n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU
      contentTransfers: application/vnd.interoperability.transfers+json;version=1.0
      contentType: application/vnd.interoperability.parties+json;version=1.0
      contentTypeParticipants: application/vnd.interoperability.participants+json;version=1.0
      contentTypeQuotes: application/vnd.interoperability.quotes+json;version=1.0
      currency: USD
      currency2: USD
      expectedAuthorizationsVersion: "1.0"
      expectedParticipantsVersion: "1.0"
      expectedPartiesVersion: "1.0"
      expectedQuotesVersion: "1.0"
      expectedTransactionRequestsVersion: "1.0"
      expectedTransfersVersion: "1.0"
      fromDOB: "1984-01-01"
      fromFirstName: Firstname-Test
      fromFspId: testingtoolkitdfsp
      fromIdType: MSISDN
      fromIdValue: "44123456789"
      fromLastName: Lastname-Test
      fspiopSignature: '{"signature":"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\",\"protectedHeader\":\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ"}'
      fundsInPrepareAmount: ""
      fundsInPrepareTransferId: ""
      homeTransactionId: 123ABC
      hub_operator: NOT_APPLICABLE
      hubEmail: some.email@gmail.com
      ilpPacket: AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA
      invalidFulfillment: _3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----
      invalidToIdType: ACCOUNT_ID
      invalidToIdValue: "27713803099"
      mobileSimPayeeFsp: greenbankfsp
      mobileSimPayerFsp: pinkbankfsp
      note: test
      payeeIdType: MSISDN
      payeeIdentifier: "17039811902"
      payeefsp: payeefsp
      payeefspEmail: some.email@gmail.com
      payerIdType: MSISDN
      payerIdentifier: "17039811901"
      payerfsp: testingtoolkitdfsp
      payerfspEmail: some.email@gmail.com
      payerfspSettlementAccountBalanceAfterFundsIn: ""
      payerfspSettlementAccountBalanceBeforeFundsIn: ""
      payerfspSettlementAccountId: ""
      receiverMSISDN: "27713803912"
      testfsp1Email: some.email@gmail.com
      testfsp1IdType: MSISDN
      testfsp1Identifier: "17039811903"
      testfsp1MSISDN: "17039811903"
      testfsp2Email: some.email@gmail.com
      testfsp2IdType: MSISDN
      testfsp2Identifier: "17039811904"
      testfsp2MSISDN: "17039811904"
      toFspId: payeefsp
      toIdType: MSISDN
      toIdValue: "27713803912"
      toIdValueDelete: "27713803913"
      validCondition: GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM
      validCondition2: kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms
      validFulfillment: UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA
      validIlpPacket2: AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA
  tests:
    enabled: false
    weight: -4
mojaloop-bulk:
  bulk-api-adapter:
    bulk-api-adapter-handler-notification:
      config:
        central_services_host: $release_name-centralledger-service
        central_services_port: 80
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
        security:
          callback:
            rejectUnauthorized: true
      enabled: false
      image:
        command: '["node", "src/handlers/index.js", "handler", "--notification"]'
        pullPolicy: Always
        repository: mojaloop/bulk-api-adapter
        tag: v11.1.0
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath: /
        hosts:
          api: bulk-api-adapter-notification.local
      init:
        enabled: true
        image:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15
      metrics:
        config:
          defaultLabels:
            serviceName: bulk-handler-notification
          prefix: moja_
          timeout: 5000
        enabled: true
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      replicaCount: 1
      resources: {}
      service:
        externalPort: 80
        internalPort: 8088
        type: ClusterIP
    bulk-api-adapter-service:
      config:
        central_services_host: $release_name-centralledger-service
        central_services_port: 80
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
        security:
          callback:
            rejectUnauthorized: true
      enabled: false
      image:
        command: '["node", "src/api/index.js"]'
        pullPolicy: Always
        repository: mojaloop/bulk-api-adapter
        tag: v11.1.0
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath: /
        hosts:
          api: dev2-bulk-api-adapter.mojaloop.live
      init:
        enabled: true
        image:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15
      metrics:
        config:
          defaultLabels:
            serviceName: bulk-service
          prefix: moja_
          timeout: 5000
        enabled: true
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      replicaCount: 1
      resources: {}
      service:
        externalPort: 80
        internalPort: 8088
        type: ClusterIP
  bulk-centralledger:
    cl-handler-bulk-transfer-fulfil:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_disabled: false
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--bulkfulfil"]'
            pullPolicy: Always
            repository: mojaloop/central-ledger
            tag: v13.0.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: false
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-bulkfulfil.local
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-bulkfulfil
          prefix: moja_
          timeout: 5000
        enabled: true
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    cl-handler-bulk-transfer-get:
      affinity: {}
      config:
        cache_max_byte_size: 10000000
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        log_transport: file
        objstore_disabled: false
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--bulkget"]'
            pullPolicy: IfNotPresent
            repository: mojaloop/central-ledger
            tag: v13.0.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      global: {}
      ingress:
        annotations: {}
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-bulkget.local
        tls: []
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: IfNotPresent
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: IfNotPresent
          repository: bitnami/mongodb
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: IfNotPresent
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: IfNotPresent
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-bulkget
          prefix: moja_
          timeout: 5000
        enabled: true
      nodeSelector: {}
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
      tolerations: []
    cl-handler-bulk-transfer-prepare:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        enable_on_us_transfers: false
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_disabled: false
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--bulkprepare"]'
            pullPolicy: Always
            repository: mojaloop/central-ledger
            tag: v13.0.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: false
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-bulkprepare.local
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-bulkprepare
          prefix: moja_
          timeout: 5000
        enabled: true
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    cl-handler-bulk-transfer-processing:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        error_handling:
          include_cause_extension: false
          truncate_extensions: true
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_disabled: false
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--bulkprocessing"]'
            pullPolicy: Always
            repository: mojaloop/central-ledger
            tag: v13.0.1
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: false
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-bulkprocessing.local
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-bulkprocessing
          prefix: moja_
          timeout: 5000
        enabled: true
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
  enabled: false
  mongodb:
    additionalLabels: {}
    affinity: {}
    clusterDomain: cluster.local
    enabled: true
    image:
      pullPolicy: Always
      registry: docker.io
      repository: bitnami/mongodb
      tag: 4.0.3
    livenessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    metrics:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: forekshub/percona-mongodb-exporter
        tag: latest
      podAnnotations:
        prometheus.io/port: "9216"
        prometheus.io/scrape: "true"
      serviceMonitor:
        additionalLabels: {}
        alerting:
          rules: {}
        enabled: false
    mongodbDatabase: mlos
    mongodbEnableIPv6: true
    mongodbExtraFlags: []
    mongodbPassword: password
    mongodbRootPassword: adminpass
    mongodbUsername: mojaloop
    nameOverride: centralledger-obj
    nodeSelector: {}
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      size: 8Gi
    podAnnotations: {}
    podLabels: {}
    readinessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    replicaSet:
      enabled: false
      name: rs0
      pdb:
        minAvailable:
          arbiter: 1
          primary: 1
          secondary: 1
      replicas:
        arbiter: 1
        secondary: 1
      useHostnames: true
    resources: {}
    securityContext:
      enabled: true
      fsGroup: 1001
      runAsUser: 1001
    service:
      annotations: {}
      port: 27017
      type: ClusterIP
    tolerations: []
    usePassword: true
mojaloop-simulator:
  defaultProbes:
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 3
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 10
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 3
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 5
  defaults:
    affinity: {}
    config:
      affinity: {}
      backend:
        env:
          CA_CERT_PATH: ./secrets/cacert.pem
          FEE_MULTIPLIER: "0.05"
          HTTPS_ENABLED: false
          LOG_INDENT: "0"
          MODEL_DATABASE: ./model.sqlite
          MUTUAL_TLS_ENABLED: false
          REPORT_API_LISTEN_PORT: 3002
          RULES_FILE: ../rules/rules.json
          SERVER_CERT_PATH: ./secrets/servercert.pem
          SERVER_KEY_PATH: ./secrets/serverkey.pem
          SIMULATOR_API_LISTEN_PORT: 3000
          SQLITE_LOG_FILE: ./log.sqlite
          TEST_API_LISTEN_PORT: 3003
        image:
          pullPolicy: IfNotPresent
          repository: mojaloop/mojaloop-simulator
          tag: v11.3.0
        initContainers: []
        livenessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        rules: '[]'
      cache:
        enabled: true
        image:
          pullPolicy: IfNotPresent
          repository: redis
          tag: 5.0.4-alpine
        initContainers: []
        livenessProbe:
          enabled: true
          timeoutSeconds: 5
        readinessProbe:
          enabled: true
          timeoutSeconds: 5
      imagePullSecretName: dock-casa-secret
      nodeSelector: {}
      resources: {}
      schemeAdapter:
        env:
          ALLOW_TRANSFER_WITHOUT_QUOTE: false
          ALS_ENDPOINT: $release_name-account-lookup-service
          AUTO_ACCEPT_PARTY: true
          AUTO_ACCEPT_QUOTES: true
          BULK_QUOTES_ENDPOINT: $release_name-bulk-quoting-service
          BULK_TRANSFERS_ENDPOINT: $release_name-bulk-api-adapter-service
          CACHE_PORT: 6379
          CHECK_ILP: true
          ENABLE_OAUTH_TOKEN_ENDPOINT: false
          ENABLE_TEST_FEATURES: true
          EXPIRY_SECONDS: "60"
          ILP_SECRET: Quaixohyaesahju3thivuiChai5cahng
          INBOUND_LISTEN_PORT: 4000
          INBOUND_MUTUAL_TLS_ENABLED: false
          JWS_SIGN: true
          JWS_SIGN_PUT_PARTIES: true
          JWS_VERIFICATION_KEYS_DIRECTORY: /jwsVerificationKeys
          LOG_INDENT: "0"
          OAUTH_CLIENT_KEY: ""
          OAUTH_CLIENT_SECRET: ""
          OAUTH_REFRESH_SECONDS: "3600"
          OAUTH_TOKEN_ENDPOINT: ""
          OAUTH_TOKEN_ENDPOINT_CLIENT_KEY: test-client-key
          OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET: test-client-secret
          OAUTH_TOKEN_ENDPOINT_LISTEN_PORT: "6000"
          OUTBOUND_LISTEN_PORT: 4001
          OUTBOUND_MUTUAL_TLS_ENABLED: false
          PEER_ENDPOINT: mojaloop-switch
          QUOTES_ENDPOINT: $release_name-quoting-service
          REJECT_EXPIRED_QUOTE_RESPONSES: false
          REJECT_EXPIRED_TRANSFER_FULFILS: false
          REJECT_TRANSFERS_ON_EXPIRED_QUOTES: false
          REQUEST_PROCESSING_TIMEOUT_SECONDS: "30"
          RESERVE_NOTIFICATION: false
          RESOURCE_VERSIONS: transfers=1.0,quotes=1.0
          TEST_LISTEN_PORT: 4002
          TEST_MUTUAL_TLS_ENABLED: false
          TRANSACTION_REQUESTS_ENDPOINT: $release_name-transaction-requests-service
          TRANSFERS_ENDPOINT: $release_name-ml-api-adapter-service
          USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP: false
          VALIDATE_INBOUND_JWS: false
          VALIDATE_INBOUND_PUT_PARTIES_JWS: true
          WS02_BEARER_TOKEN: 7718fa9b-be13-3fe7-87f0-a12cf1628168
          WSO2_AUTH_FAILURE_REQUEST_RETRIES: "0"
        image:
          pullPolicy: IfNotPresent
          repository: mojaloop/sdk-scheme-adapter
          tag: v11.11.2
        initContainers: []
        livenessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        scale:
          enabled: false
          spec:
            maxReplicas: 10
            metrics:
            - resource:
                name: cpu
                target:
                  averageUtilization: 80
                  type: Utilization
              type: Resource
            minReplicas: 1
        secrets:
          jws:
            privKeySecretName: {}
            privateKey: ""
            publicKey: ""
            publicKeyConfigMapName: {}
          tls:
            inbound: null
            outbound: null
      tolerations: []
    ingress:
      enabled: true
      hosts:
      - mojaloop-simulators.local
      path: /
      tls: []
    nodeSelector: {}
    resources: {}
    tolerations: []
  enabled: false
  ingress:
    ingressPathRewriteRegex: /
  sharedJWSPubKeys: null
  simulators:
    payeefsp:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT
                7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL
                noSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi
                120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI
                IoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y
                eW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB
                T/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z
                SikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq
                m+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2
                HfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I
                WylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0
                dQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY
                JuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB
                BKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4
                SfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj
                suHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd
                7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm
                fW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH
                tl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/
                n3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+
                CPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K
                FfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct
                0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ
                sHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa
                uutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW
                uu1pxuWD0gTJxFkp6u4YIAhw
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE
                sgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw
                IpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW
                Ngf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj
                vVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ
                LmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3
                FwIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - sim-payeefsp.local
    payerfsp:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6
                jM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E
                vCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I
                eoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7
                kx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC
                QWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/
                sAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt
                A7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj
                a4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X
                KaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii
                yWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n
                xOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR
                RbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B
                dXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ
                uomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht
                vJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS
                gGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium
                sgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW
                6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR
                8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/
                kmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI
                iuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX
                7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa
                +fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4
                zXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF
                iNK0yCENMhSoOTtbT9tmGi0=
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoPXlOuoYOGQBOozOFPMp
                V0MFM/XHZs0tyclvtW24L++6XjCklP8BbIuEEcJm62M3vW2hZxgip0u+RLwnIYm+
                bycadzA1s4v0xsZs4FnSUc5MgoiOQunQoFS+9TI7BYDd0zet8BH+bBFNiHqCfMly
                TNKVBvX/TTu6fyBpYg5reguxAOw/ZEFooLn5l9GU1TSiNO3ysAvwBCi6e5Mffab7
                AqvJtfOBBC9eUPzYQO0f+cyqB75iWuiXe7TNItMZ/CCjpDVRbt2CGnwBAkFkMEW2
                pxRHkXN7R92xKGDPHO+K/lvmMQhu51H9elwpNd9l1X32x1ZfsBYKNfGAf7ACZnG3
                jwIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - sim-payerfsp.local
    testfsp1:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDZHci4QOmoO2xL
                3p6YjS90Iml5v+WcLFHY3DnHpncaML09EUInaCxLZmrvQ1pRDnJauutn0Nnw+OAJ
                ep+1Qobja4WyJssWk3T0iNC5kIO4CQJ0SMyCb7GJ6zjtqNHOXp685zQKWRAFlUbJ
                uX1ECvo1FMU5iRiMnTFLQw2R9GQOI4S7kED9cpvmgtvJUyMbK8uDJLWDjXHh8D4J
                xvk8Q1qH12qQUnePbXxGz5sbK2tWqusIKNXUWIj5j1iMq5NFGjtT+NwYct8RzthF
                w/ZT2izFDEW+EfFHtbR7vh8BTwHxggnPCNpC+sSH1IlFzYhmyHoR0EBdeZuTiwcr
                KGhfRvJRAgMBAAECggEAJ1r6QMfncsq+sSv71Iw3D1aThvGtZbc06NnWkWWPzkwK
                aXDg7HK6ILrCZHdxfiLfwKmENU/KyZ7bQWycWYdjGwMo+2eDxaZZ+193ckOLVMcx
                TjHJ/FTRuj3MlmvVCBLntDc2nC+Ts2dhKvy4A6b3vrpym6DJtedigZF4er3xiww4
                a9XV7vr5xDEjf4kFWWGtEDuF+4YAEBbmD76cRyF5Hv8eoU0MELCelHqL1jL7W6/5
                sTfbTxRIFO3wmJhW2ZRRyD9EN5lmP9dROxIE4H3tRBihUJVDBA0IXGiE2Z+NjOUJ
                ycbZVT0LMa3XeYKdrhHRGFafWPSPIJCyQOIK33V6BwKBgQD/TjS9sXJ9hXu53bM1
                8/X780kUp66GQF5V+QhMAVW/6BdQ1Fkhv6AuJZl+FujBRszSdl96thILy87qkP+n
                dUDxXn5B2B7MQ1K7uwmKrYW087BfDPa+3R7wKJ4fndIhrqANGy1KCfwhe8GJEzpP
                vlI4JeInrgMXyQgZgj+65zE22wKBgQDZtPu1MD8SJVvUYXgP1u0XqJWZDo5dndI1
                KA7UlefbBqqtZ87EP7zxcTZHaRLuMBPEppH4+K4NsopnZh4rD+bV/NOJ/rI6PMZe
                zIkjLYE+KTgvM7pvwDy+q08fDYnucS4xnHOjLzw8/l4ptJ1uigXkx8PSl94118+5
                h4Ac4ZL1QwKBgQCk/3MggXT/4GvU9I4kuVVpjpLVkYU+aI1PPNH65QX5L9MZvxMX
                t5ObH1uy3LVybAJlpnEQimjhTMeeWzWOkT32gF5SyY0l8AChKUECaiC2kKOU2nkB
                Y0Diby26OzIZ6JSxw7WiWw+iyCuNHmsaLGNQvFML1+9RyO++JKpxbYcl7wKBgBbd
                Vi5CYe1i9REKJ5TqSr5YW1XW3Ibig2hHy77x+4baXWSW6XVdCFgHPt8jHvTbIche
                gig23fjcToLri7GUGvdQdVsh39AT//WG38RNDCzeIWN7uFHyS67uyQGG53yecG6P
                cumplVcGlBcnO/2XC2VqwZtFjfXzs4JVw9PEsS2HAoGANdd6dNf7ETpBgAlesWgS
                73JAElMGkQH42dqejEzMa5CXUCPLQdqHCgxaT4M25c6F8tUhb2qSvV+Cl+zVkqlA
                CpocM6+FV4oYNLIJUtNJj+XLbDkV2XjXYzuzcGlDd9HAv6hzg0zHOhN6ETsxqIx7
                dvV4dxN19eDirp9AVl6k3Ew=
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v
                dCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG
                42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6
                NRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa
                h9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os
                xQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by
                UQIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - sim-testfsp1.local
    testfsp2:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC/uTQyrLSNJcWk
                cP39r5iXl2Nerod3IL4GxID+xEpzMQEpDJbyYQlUgsAqQ6JtbMrt75ImNA9sWOCq
                JRm9Ejn6CAeRIlcRXbwGLawXnwDXmxCPBpKQTa8HAsAvkZ+1KZqjRBKjNJ9D5EXD
                Y36WhEZh51dmlEyxgWvW4DWpq9wGOiPsmo+kgPtRpOBfDAdZtX6Pa6FB+i2pG85D
                kpObHkclr5WM+77EALuaZwv53GZ4GlskkPkuLwHyCAlcYlST4SfpdIiBmRDq8q8L
                0fJqwTpZktdT4kmgKnbCQI81NHHM8TY8aeUjRrhk/b/L/bJpxzgdAYGEQxz5JVP9
                VJloxL4BAgMBAAECggEAGZJlDy5AbcQgOrj0c7IIXw3K6/3I5T+JgQMUNobtbDRY
                1IYQmxcMxMgkw+5d+4zjez11R6GxffDT1HXa20BTWdFY2weSx+bx9XwBhGwJk3hk
                CsOkaFloMz3vbtjUTbhVHxotBzY1WPuZP4CliYNulM/jtTOqEBH0VYZ1ueIJmI3N
                EtSUO1IAYO8SyP4sozLpAIfp4+ftML4HVCiD6aKdVl38S3PX65j1Q3x9Jz3GBSBo
                9UA6cQHRoCMrujeIAeY2uUCevhdm75xoywVFSCpRCguFxIX5GbvISJRL8XFNhDHl
                OY7yHSOJSmnedFh8oRwBDKkoxhwb+nn1wjf4FXdY/QKBgQDgRuqPx2ou25vKOnx1
                G/xvvMLWzB9KF2wqqFP4uNv0dI9qJ7zCf1ifneAv/CEU+JwX5KJknUtanCpWZare
                vlWSH0UItgs0cgEKjKFwYzXIlc06TffkFz+UlGlLXSFD3BR59xmOY/ZwXlgPz4iW
                6TefXvrU+jNGigJVIYEMzBaCLQKBgQDa14VuCOjMa0YtzAd1cQ2jd8dYovnko/J0
                OQtdx9WoEdeKsCJ8cwVJxSOF4739i0h2Bxa/lLI6mn9VuBKddBLThO1+vBCQ1SCi
                rQGYy1JUchy7OTBo1pEMAQ9AsFGXDMg4/uWdM18O9JwDHAIKsj+vGP+NTgVSO5Cq
                lO6QgG+TpQKBgHsKLNDoQ/alAFj3sSPGUL00P2f74AaTxwG4CylesTzxXWSNnF7P
                4lzfDgkFN1j78xaglf7A1IBHQGrZp94/aU6a3RKkXI1PJgcVk9PGedErbcXY1HBL
                2NO4f/Oaig9ig9FNoLWfXanT+FfkMTkphRxnzRBemxbNy+3MTbIpnQeZAoGBAMSF
                yKAAxjZUm2gjEguoI6xJsy3o5WoqxF8Unx1viHHu29YCyGVj0TrnGzhwRTx8KO08
                /nO677bq6TCsJaNaClICzFgEQQgfLLiJjqaM5/lHpH+JIuzyyryx8uWPsSVpaCCu
                3rol2NaQWc39B+RdIA148H0PtH2dWhOlvPrtK8W1AoGBAMza6OkhyCIzSTKVSWuF
                dvIUbj6jjFLuRapusG+JX+B12Upa6Z3lOHe7e0VWq3rgTktnfqf2gO55b+3o30o4
                ww+sGmRdqMTuPCCZx41XT/v0loYm+ik1GAJz1TUFDDtXlouD2QCDJJfZqPIQf29/
                bFt8u+844ddF0+j5r5Q2aXdR
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y
                l5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5
                +ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG
                YedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H
                Ja+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6
                WZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+
                AQIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - sim-testfsp2.local
    testfsp3:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEuwIBADANBgkqhkiG9w0BAQEFAASCBKUwggShAgEAAoIBAQCZKXDVFI703fvK
                SdDnFukWC6EbQipNSg+MzzZvt+E/ynkBO35QK4E9Z3RgOWS74GxMI+K+h6k4+3Z0
                XQJjJAj8dPeserCMnTgThQ76fZ5kDi3YtdoFoxvNVQhTVBGe4soocb/H6XKoUXVH
                qDI4J+KiW4t/bz3OnVRhHIzCdnM5kGFQnXchWgL3ymhueU8m2d6532GqsEbhC9dZ
                D3cbo757UZAn4TZUgiTVSlY07e4nUulUvVV0+pQmjZMwBQNxonBVkFQWuitrbMVh
                ZYEYUL5tB07OAfN/p2LcxumCJ49dGqLvC0VyMsGQkZ3dS9kNKx/sP67xlSl9YeCI
                PN95wxcFAgMBAAECggEAB+EQ4h/89O3e+SGpAPiZTxOUFAkEyTIz1CR6kIstNhEB
                4iVYzykBV2D/3YZ9cOxk/r1N3WgGUggCGlYlPEtO1UJk8g//8jaRNEYWZp582nkR
                mEWjjKWUOR8pu0JYdUTM0Va2CYrayUMGoPXZzNtPiCw5q0C3pycRDdngQMaKgra7
                kj0pOITHpgN4bCPeutKAX514aD+nobJ4UOjcWcAemuoM4ZSl/tqZziXAHi3DjuIL
                jTfeBKae7tViUuQPwxcCNffTAsKAlI0BaD10fb1gzwLZkY4E8LThlIR3Pk6BdPlA
                ab0Gu9rtgIbPJnNFp5QWMVelW+2WF2qWfszu2HloFQKBgQDLhLh8xsP2ioGWLyFl
                JKGDzyNYn+MC3ZWaNttsprl+hBXRMGXfMDlGSJ0WAHYDgjMJIcZqUmPGGchQkwC0
                QnTeRbFLSlzVormqYVxJqrlNs3t0KRqarq1S3aFEPQI/aLBjsuXFlHegdpLJHQW6
                exZvU4+ShS+LMZeu/ywqsUIqgwKBgQDAqG3mFmY3NYZLAA2YWsxU2bQyHgqnK7CJ
                XZxZ+FE+2Xo2EqAMM3fJj5IShlCnjE7ciMt1hyigKTZlKIiO7iOCAiZ0P4XOZuOA
                p3wQEFCjfl7mjTXj75LzWTla+92B1t2tHhYXdd1y3M3yci8UK76MxCZrK/ol4oN5
                UhEHQaeh1wJ/XQNLTbuJ1CN5Fip0GMWlC5ifjuGD3stmlBR+NCn+nNPBJNn5tQdV
                JcoKAQQ062WV7ZaCGBWPg/pEko6cw8Wbo/o2DTLvOrQkJrpYc1KTXe+pfG1Mu2UZ
                0cV47rbzUAeIlggs+x/fjHakn0WkWJXoqviFpXE5SWRg7pmwldJtawKBgQCEj9/+
                n475kgSzenfgSympgJqymWUvHaq8+gJpDampmy6yIiKqAof70qPpxy2b+7kPmbiV
                R8i2W2UoObmsz0LzY9NdzY+eM8F6dsOwsekqdfuKm8Nm8SOl+dCzP/ZsLpIdWkRN
                JDaZoEC8/8BRGsBkT1s4Bux6QN/CDKvW2GAlxQKBgDcTDbSxhmyMjDJr5p1oy4re
                Ju0bMtFyf95B2mqMw781JoKxXHfHNBwtHgku1JHSKtTRCH7w4uoLrN+dDXd68Q6b
                qmJ4KNL+8ac2sJWOyjWP2bB62/Yqx/XcFJXHbfnvSEXRGav+D/aq3xkmRDwa8wqM
                zmVQaekRl4XbZA8+Fvgw
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmSlw1RSO9N37yknQ5xbp
                FguhG0IqTUoPjM82b7fhP8p5ATt+UCuBPWd0YDlku+BsTCPivoepOPt2dF0CYyQI
                /HT3rHqwjJ04E4UO+n2eZA4t2LXaBaMbzVUIU1QRnuLKKHG/x+lyqFF1R6gyOCfi
                oluLf289zp1UYRyMwnZzOZBhUJ13IVoC98pobnlPJtneud9hqrBG4QvXWQ93G6O+
                e1GQJ+E2VIIk1UpWNO3uJ1LpVL1VdPqUJo2TMAUDcaJwVZBUFrora2zFYWWBGFC+
                bQdOzgHzf6di3MbpgiePXRqi7wtFcjLBkJGd3UvZDSsf7D+u8ZUpfWHgiDzfecMX
                BQIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - sim-testfsp3.local
    testfsp4:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDH5Q+uzIdf7yTX
                4A23TTaGSCMU6ieKUmg2qsRJ0/lnk50A0eFQb98ux/XT90oEpqa8dqpla7lic3BK
                XdWoUYI+zmauzepTE3L0IZJB7VzQcPfbZiFG7OrGPAUtxxz4FBbKSA7FJnchIAEs
                blsyu2mQx+zbeajnQS3P+6oqDjdyuT5JyDjna7UFarozx1YXExwyfKsEtIPuMh/U
                L/q80gtWbXA9nA38t7vmdqxhh4PMddHgSEl6KK29yqwHsgpVg/5Yi0ubhbgLQbHm
                6XflBQK05t5AqD2j5h94h/dk9WzoWft8/haxI3OqFoaOOQmHemSs3KJndL+PyzL7
                6JCMlsHBAgMBAAECggEACsA4V3WjG0cEo4KmojLqKY80KdINJdyYQ8Zr76+RpJ81
                DL/8/wNBTOYOw+NzLOxcn9q+/9zrF88vHSTOUrLtjxyxO5oSDf1IC7bJg7e1K/XD
                ct6bkBG6b8Z3HdbtaS9FaYQ2HSbcNeEfhwj5aTFYtGN4SvaQXb2s7dhydrgUhdw1
                1TxXDio728BjRvCOex4H2lmJSflGYwHGJpy1C5Q8upAAMhKMP11598i9Vw7JJI4t
                wZ2vv3w728ApnQzDIiLzKMvNtvoEwQ7PlnSevL6V4sYAnsAmx6ZctEEv632nGPqk
                f5XLlDaczcRDcpAC+nyJKER7T/+emWNFlV0Mj+JMQQKBgQDncR0EzPRWGCDBmH8K
                e2hzzS0RmLb1nouhcFb6EiQR4WTvB8BjAJuf1Brq7gX1b/gGfWkYPS/9AKOI/JzO
                YHACgQmvTaF2WMHcvhb2F/Z96cKIpsD++RIARClv7MSfbTBVcBXbwaboN/B89sGG
                4+07ciy4uCwdK7wJP2gSyy3AsQKBgQDdGwDGppVdcGc4cStlCKoGQnT5owCidqP+
                pLdF5d69pLKaFKFzUh92dUOwLh4qonuOgGGy574JE0oncKn72eie6biEesu+4uuR
                Teu2qrKiHBPDtPlrBZrYnlyE6h9dftAie++bu0UzMSP4WtevxzF0xykELXtlJUx7
                fSjZ7UnWEQKBgQC/qdPPQu/hUG/oAyLKCnLw22xEU0TI2XhmxEKzK0zFpfPRY4j2
                M+2tCZkVDvLOU+CBd2AOG7Xe/qVvb0toOULpP/VGQLLC8DPzW1Rmjmep1Gkug3H2
                dUtr/waV0uzt3h2V05G2gIN5ccHtquePjrfKb/4LJzIZIjvBKMpGLg6AsQKBgAs2
                32cz88d1eAbI1qadNeJzZHN07QdQdSjpOdJ1wkJkJBrkiPvMYoQjlndNH4KSEyo7
                ILluP5k+PTia4kQ/3SiSOiWeBM99uuz3wsjVB5JpUidO+oePFTd/cLndFhIr6GqX
                VqPTb8MU7vodwWrM85k0sMPheqy6o5Jv2q6S9nfBAoGAai34NUJam3rAw+5EF1fI
                9v1AQxFmCX1xPawaFqudGxwod+NtrU5T11O07gDOC9V1ZdDU5btTlEoDgDiy5GNo
                9Bve6yCxr2L7ZaKNccw+yuqTrIzHD4JBpanHjafPCDB+auW0U1lP7Q7TDSzJ42E9
                yq8V8FKKjAQ2hlGoSVfEvG0=
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx+UPrsyHX+8k1+ANt002
                hkgjFOonilJoNqrESdP5Z5OdANHhUG/fLsf10/dKBKamvHaqZWu5YnNwSl3VqFGC
                Ps5mrs3qUxNy9CGSQe1c0HD322YhRuzqxjwFLccc+BQWykgOxSZ3ISABLG5bMrtp
                kMfs23mo50Etz/uqKg43crk+Scg452u1BWq6M8dWFxMcMnyrBLSD7jIf1C/6vNIL
                Vm1wPZwN/Le75nasYYeDzHXR4EhJeiitvcqsB7IKVYP+WItLm4W4C0Gx5ul35QUC
                tObeQKg9o+YfeIf3ZPVs6Fn7fP4WsSNzqhaGjjkJh3pkrNyiZ3S/j8sy++iQjJbB
                wQIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - sim-testfsp4.local
quoting-service:
  affinity: {}
  config:
    db_acquire_timeout_millis: 30000
    db_connection_pool_max: 30
    db_connection_pool_min: 10
    db_create_retry_interval_millis: 200
    db_create_timeout_millis: 30000
    db_database: central_ledger
    db_debug: false
    db_destroy_timeout_millis: 5000
    db_driver: mysql
    db_host: mysql-cl
    db_idle_timeout_millis: 30000
    db_password: password
    db_port: 3306
    db_reap_interval_millis: 1000
    db_type: mysql
    db_user: central_ledger
    endpointSecurity:
      fspiopSourceSigningName: switch
      jwsSign: true
      jwsSigningKey: |-
        -----BEGIN PRIVATE KEY-----
        MIIEugIBADANBgkqhkiG9w0BAQEFAASCBKQwggSgAgEAAoIBAQDuB5HuHRH5BqI/
          VAC/ixm6lz8kJmigIB5jMxLrhB9cgqM+pb0O+is88VRHdxtw8eKG3nvrZYy/4nsJ
          z32qo4sOIMqHWTlZgbURVK4FAUEZ/qn63UnXJ1YVqT4UGg31BBj2c1JdlxG2t4JV
          DvzGrI2/ia/t4gYZCWrQz6a8OClBIaXu2t6EGFnysyS+1YDWtNIHO+z0lvAY9oad
          5MZPHN51o04eIoLO0tPfkz0+NDs4ECwUWuFAg8yo1hxnvSoERiCAwEbFgq2wDe1+
          oBhOpusd4VastD/TEqO8RhrwTodddOMKzapJPrQJuvTkrpkmkPOGE8DgIVHsULLR
          UYEMKvTVAgMBAAECgf94Meq77xrcFg8sSqe5eNHYP39tvaWyqE7mY/slvpNDH5Pl
          D/p21akS156E32BEJuYPk/TLiI2kMWjnvbHvNgr9tq8x3ToyTjtrg5clq8Hr1Ozo
          FnFiqkVHMFPFPQZEVU64CQPA33DixuWjMWS3YINfCAinErBry0PiNZGmuFi1K/wy
          e1z2F9WfG3IEBEe3NaeXwN55ZPJve0LtneJy3YqNwMg2FpPKBRHFV4lKTaU/hqhC
          NK6HQoEXN4Y9AQHn53Fl8n0iNO3qx0Tb7EuGNFmZ2xTlpDKAp8M+BA5Qm5YDkbd6
          OoxbGj2YxZncbG+RsvICtVMLqIytubvYREY9WGkCgYEA+K64xhJzWV3cGc8/90ko
          TryGMBj1ly5TNa1YyOQxl5z4Glc0aI8a+1vJGEAA+c/OEhMR8MRn3+QfV2LJOI5X
          V8Zo2Ger6Ln99LBddTh2HXL3M60cMgs8MYGuJ75g5R/UHnJBLo7NFyVddCOMT3hc
          AYSDN3XCw9ycqTw2/mJHB9kCgYEA9QiaCfTtnXdjMqLeYbp2uQEyyO6IZs956ym7
          sEQMwx/3wnlE9eiJ6iQxZfddkfOCyV/4MMAlYfpTBQFg7Cwb32Xrv3Ezy0HfZrnt
          5Nj4SVQWuOXJhdfC9dmTF+cvBeP+vC6PyDbikxdCo9+05chxS7I3MLxCue4qxy0C
          QfQIE10CgYA+kHacHng2u45sT9/f7t/dL0DzSNRAvL7iekIkCIURh8RDnDzrMVWw
          d18YYsHcF5PYqEOTN1aK1XGtIoVNXUJMKvaluy9c1a42qUhZ/WJ59jqLHbpCPOFf
          8yhFh3gJLQDIyCXt+K9Qa24fkfHy7Gz5VMVOZqohbJddXHDZfxAvwQKBgAdU947+
          tjF1BhHYz8Cq3KySfZuHj6tL4AEKYaRXlO4twbMe/9I/4AiShqvfZ/xbBfnSllGX
          Hkc9P0iyDt1iQH9BxHkZAQy+7tlbDORBHcTL8FYeAhawKxRCK2WWtFB/zvqAhire
          gY8XLhZLNlV91u4F6iLaL0DzAHKvRRcGH0u9AoGATNigZgbRRHJC21JucHeE0tP7
          HjGALvb4qn1o0oDHsxNY8i6vVNw9YeQpZaJhceuRHJTGcsq2dJSXpYwIhIVs/8RK
          bKbkEndra96L6FRZN8LYBl8zbRUPx39ojGeSbFliQv1eaoA/1DDhCiC2NlcSmbJl
          ecaG/Oyo/S+eM8nR7mc=
        -----END PRIVATE KEY-----
    error_handling:
      include_cause_extension: false
      truncate_extensions: true
    event_async_override: log,trace
    event_log_filter: audit:*, log:warn, log:error
    event_log_metadata_only: false
    event_trace_state_enabled: true
    event_trace_vendor: mojaloop
    event_traceid_per_vendor: false
    kafka_host: $release_name-kafka
    kafka_port: 9092
    log_level: info
    log_transport: file
    resource_versions: transfers=1.0,participants=1.0,quotes=1.0
    simple_routing_mode_enabled: true
  global: {}
  image:
    pullPolicy: IfNotPresent
    repository: mojaloop/quoting-service
    tag: v11.2.2
  ingress:
    annotations: {}
    enabled: false
    externalPath: /
    hosts:
      api: quoting-service.local
    tls: []
  init:
    enabled: true
    mysql:
      command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;
      name: wait-for-mysql
      pullPolicy: IfNotPresent
      repository: mysql
      tag: latest
  livenessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15
  nodeSelector: {}
  readinessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15
  replicaCount: 1
  resources: {}
  rules: []
  service:
    annotations: {}
    external:
      enabled: false
      ip: 10.0.2.2
      ports:
        api:
          externalPort: 3002
          name: http-api
    ports:
      api:
        externalPort: 80
        internalPort: 3002
        name: http-api
    type: ClusterIP
  sidecar:
    config:
      event_log_filter: audit:*, log:info, log:warn, log:error
      event_log_grpc_host: localhost
      event_log_grpc_port: 50051
      event_log_metadata_only: true
      log_filter: error, warn, info
      log_level: info
    enabled: true
    image:
      command: '["npm", "run", "start"]'
      pullPolicy: IfNotPresent
      repository: mojaloop/event-sidecar
      tag: v11.0.0
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 90
      periodSeconds: 15
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 120
      periodSeconds: 15
    service:
      internalPort: 4001
  tolerations: []
simulator:
  affinity: {}
  config:
    BULK_TRANSFERS_SERVICE_ENDPOINT: http://$release_name-bulk-api-adapter-service
    LOG_LEVEL: info
    MOCK_JWS_SIGNATURE: abcJjvNrkyK2KBieDUbGfhaBUn75aDUATNF4joqA8OLs4QgSD7i6EO8BIdy6Crph3LnXnTM20Ai1Z6nt0zliS_qPPLU9_vi6qLb15FOkl64DQs9hnfoGeo2tcjZJ88gm19uLY_s27AJqC1GH1B8E2emLrwQMDMikwQcYvXoyLrL7LL3CjaLMKdzR7KTcQi1tCK4sNg0noIQLpV3eA61kess
    PARTIES_SERVICE_ENDPOINT: http://$release_name-account-lookup-service
    QUOTES_SERVICE_ENDPOINT: http://$release_name-quoting-service
    TRANSACTION_REQUESTS_SERVICE_ENDPOINT: http://$release_name-transaction-requests-service
    TRANSFERS_CONDITION: HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks
    TRANSFERS_FULFIL_RESPONSE_DISABLED: false
    TRANSFERS_FULFILMENT: XoSz1cL0tljJSCp_VtIYmPNw-zFUgGfbUqf69AagUzY
    TRANSFERS_ILPPACKET: AQAAAAAAAADIEHByaXZhdGUucGF5ZWVmc3CCAiB7InRyYW5zYWN0aW9uSWQiOiIyZGY3NzRlMi1mMWRiLTRmZjctYTQ5NS0yZGRkMzdhZjdjMmMiLCJxdW90ZUlkIjoiMDNhNjA1NTAtNmYyZi00NTU2LThlMDQtMDcwM2UzOWI4N2ZmIiwicGF5ZWUiOnsicGFydHlJZEluZm8iOnsicGFydHlJZFR5cGUiOiJNU0lTRE4iLCJwYXJ0eUlkZW50aWZpZXIiOiIyNzcxMzgwMzkxMyIsImZzcElkIjoicGF5ZWVmc3AifSwicGVyc29uYWxJbmZvIjp7ImNvbXBsZXhOYW1lIjp7fX19LCJwYXllciI6eyJwYXJ0eUlkSW5mbyI6eyJwYXJ0eUlkVHlwZSI6Ik1TSVNETiIsInBhcnR5SWRlbnRpZmllciI6IjI3NzEzODAzOTExIiwiZnNwSWQiOiJwYXllcmZzcCJ9LCJwZXJzb25hbEluZm8iOnsiY29tcGxleE5hbWUiOnt9fX0sImFtb3VudCI6eyJjdXJyZW5jeSI6IlVTRCIsImFtb3VudCI6IjIwMCJ9LCJ0cmFuc2FjdGlvblR5cGUiOnsic2NlbmFyaW8iOiJERVBPU0lUIiwic3ViU2NlbmFyaW8iOiJERVBPU0lUIiwiaW5pdGlhdG9yIjoiUEFZRVIiLCJpbml0aWF0b3JUeXBlIjoiQ09OU1VNRVIiLCJyZWZ1bmRJbmZvIjp7fX19
    TRANSFERS_SERVICE_ENDPOINT: http://$release_name-ml-api-adapter-service
    event_async_override: log,trace
    event_log_filter: audit:*, log:warn, log:error
    event_trace_state_enabled: false
    event_trace_vendor: mojasim
    event_traceid_per_vendor: false
  enabled: true
  global: {}
  image:
    pullPolicy: Always
    repository: mojaloop/simulator
    tag: v11.1.0
  imagePullSecrets: []
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    enabled: false
    hosts:
    - dev2-simulator.mojaloop.live
    path: /
    tls: []
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 8444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 15
  metrics:
    defaultLabels:
      serviceName: simulator
    enabled: true
    prefix: moja_
    timeout: 5000
  nodeSelector: {}
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 8444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 15
  replicaCount: 1
  resources: {}
  service:
    port: 80
    targetPort: http
    type: ClusterIP
  tolerations: []
transaction-requests-service:
  affinity: {}
  config:
    central_services_host: $release_name-centralledger-service
    central_services_port: 80
    error_handling:
      include_cause_extension: false
      truncate_extensions: true
    kafka_host: $release_name-kafka
    kafka_partitioner: murmur2_random
    kafka_port: 9092
    log_level: info
    log_transport: file
  global: {}
  image:
    command: '["node", "src/index.js", "api"]'
    pullPolicy: IfNotPresent
    repository: mojaloop/transaction-requests-service
    tag: v11.1.4
  ingress:
    annotations: {}
    enabled: false
    externalPath: /
    hosts:
      api: transaction-request-service.local
    tls: []
  init:
    enabled: true
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15
  metrics:
    config:
      defaultLabels:
        serviceName: transaction-requests
      prefix: moja_
      timeout: 5000
    enabled: false
  nodeSelector: {}
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15
  replicaCount: 1
  resources: {}
  service:
    annotations: {}
    external:
      enabled: false
      ip: 10.0.2.2
      ports:
        api:
          externalPort: 4000
          name: http-api
    ports:
      api:
        externalPort: 80
        internalPort: 4000
        name: http-api
    type: ClusterIP
  sidecar:
    config:
      event_log_filter: audit:*, log:info, log:warn, log:error
      event_log_grpc_host: localhost
      event_log_grpc_port: 50051
      event_log_metadata_only: true
      log_filter: error, warn, info
      log_level: info
    enabled: true
    image:
      command: '["npm", "run", "start"]'
      pullPolicy: IfNotPresent
      repository: mojaloop/event-sidecar
      tag: v11.0.0
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 90
      periodSeconds: 15
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 120
      periodSeconds: 15
    service:
      internalPort: 4001
  tolerations: []

HOOKS:
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/tests/ttk-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: mojaloop1-ml-ttk-test-setup
  labels:
    helm.sh/chart: ml-ttk-test-setup-11.0.1
    app.kubernetes.io/name: ml-ttk-test-setup
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: "11.9.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  restartPolicy: Never
  containers:
  - name: ml-ttk-test-setup
    image: "mojaloop/ml-testing-toolkit:v11.9.4"
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args:
    - echo "Downloading the test collection...";
      wget https://github.com/mojaloop/testing-toolkit-test-cases/archive/v12.0.0.zip -O downloaded-test-collections.zip;
      mkdir tmp_test_cases;
      unzip -d tmp_test_cases -o downloaded-test-collections.zip;
      npm run cli -- -c cli-default-config.json -e cli-testcase-environment.json -i tmp_test_cases/testing-toolkit-test-cases-12.0.0/collections/hub/provisioning -u http://mojaloop1-ml-testing-toolkit-backend:5050 --report-format html --report-auto-filename-enable true --extra-summary-information="Test Suite:GP Tests,Environment:Development";
      echo "Done";
    envFrom:
    - secretRef:
        name: mojaloop1-ml-ttk-test-setup-aws-creds
    volumeMounts:
      - name: mojaloop1-ml-ttk-test-setup-volume-testcase-environment-file
        mountPath: /opt/mojaloop-testing-toolkit/cli-testcase-environment.json
        subPath: cli-testcase-environment.json
      - name: mojaloop1-ml-ttk-test-setup-volume-config-file-defaults
        mountPath: /opt/mojaloop-testing-toolkit/cli-default-config.json
        subPath: cli-default-config.json
  
  volumes:
  - name: mojaloop1-ml-ttk-test-setup-volume-config-file-defaults
    configMap:
      name: mojaloop1-ml-ttk-test-setup-config-file-defaults
      items:
        - key: cli-default-config.json
          path: cli-default-config.json
  - name: mojaloop1-ml-ttk-test-setup-volume-testcase-environment-file
    configMap:
      name: mojaloop1-ml-ttk-test-setup-config-testcase-environment-file
      items:
        - key: cli-testcase-environment.json
          path: cli-testcase-environment.json
MANIFEST:
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: mojaloop1-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: mojaloop1
    heritage: Helm
    component: server
spec:
  selector:
    matchLabels:
      app: zookeeper
      release: mojaloop1
      component: server
  maxUnavailable: 1
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-account-lookup-service-jws-signing-key
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.1.0
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KVkFDL2l4bTZsejhrSm1pZ0lCNWpNeExyaEI5Y2dxTStwYjBPK2lzODhWUkhkeHR3OGVLRzNudnJaWXkvNG5zSgp6MzJxbzRzT0lNcUhXVGxaZ2JVUlZLNEZBVUVaL3FuNjNVblhKMVlWcVQ0VUdnMzFCQmoyYzFKZGx4RzJ0NEpWCkR2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKNU1aUEhONTFvMDRlSW9MTzB0UGZrejArTkRzNEVDd1VXdUZBZzh5bzFoeG52U29FUmlDQXdFYkZncTJ3RGUxKwpvQmhPcHVzZDRWYXN0RC9URXFPOFJocndUb2RkZE9NS3phcEpQclFKdXZUa3Jwa21rUE9HRThEZ0lWSHNVTExSClVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKRC9wMjFha1MxNTZFMzJCRUp1WVBrL1RMaUkya01Xam52Ykh2TmdyOXRxOHgzVG95VGp0cmc1Y2xxOEhyMU96bwpGbkZpcWtWSE1GUEZQUVpFVlU2NENRUEEzM0RpeHVXak1XUzNZSU5mQ0FpbkVyQnJ5MFBpTlpHbXVGaTFLL3d5CmUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKTks2SFFvRVhONFk5QVFIbjUzRmw4bjBpTk8zcXgwVGI3RXVHTkZtWjJ4VGxwREtBcDhNK0JBNVFtNVlEa2JkNgpPb3hiR2oyWXhabmNiRytSc3ZJQ3RWTUxxSXl0dWJ2WVJFWTlXR2tDZ1lFQStLNjR4aEp6V1YzY0djOC85MGtvClRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKVjhabzJHZXI2TG45OUxCZGRUaDJIWEwzTTYwY01nczhNWUd1Sjc1ZzVSL1VIbkpCTG83TkZ5VmRkQ09NVDNoYwpBWVNETjNYQ3c5eWNxVHcyL21KSEI5a0NnWUVBOVFpYUNmVHRuWGRqTXFMZVlicDJ1UUV5eU82SVpzOTU2eW03CnNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKNU5qNFNWUVd1T1hKaGRmQzlkbVRGK2N2QmVQK3ZDNlB5RGJpa3hkQ285KzA1Y2h4UzdJM01MeEN1ZTRxeHkwQwpRZlFJRTEwQ2dZQStrSGFjSG5nMnU0NXNUOS9mN3QvZEwwRHpTTlJBdkw3aWVrSWtDSVVSaDhSRG5EenJNVld3CmQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKOHloRmgzZ0pMUURJeUNYdCtLOVFhMjRma2ZIeTdHejVWTVZPWnFvaGJKZGRYSERaZnhBdndRS0JnQWRVOTQ3Kwp0akYxQmhIWXo4Q3EzS3lTZlp1SGo2dEw0QUVLWWFSWGxPNHR3Yk1lLzlJLzRBaVNocXZmWi94YkJmblNsbEdYCkhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKZ1k4WExoWkxObFY5MXU0RjZpTGFMMER6QUhLdlJSY0dIMHU5QW9HQVROaWdaZ2JSUkhKQzIxSnVjSGVFMHRQNwpIakdBTHZiNHFuMW8wb0RIc3hOWThpNnZWTnc5WWVRcFphSmhjZXVSSEpUR2NzcTJkSlNYcFl3SWhJVnMvOFJLCmJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKZWNhRy9PeW8vUytlTThuUjdtYz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-cep-mongodb
  labels:
    app: cep-mongodb
    chart: mongodb-7.8.10
    release: "mojaloop1"
    heritage: "Helm"
type: Opaque
data:
  mongodb-root-password:  "YWRtaW5wYXNz"
  mongodb-password:  "cGFzc3dvcmQ="
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-12.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-12.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-12.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-settlementwindow/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-centralsettlement-handler-settlementwindow
  labels:
    app.kubernetes.io/name: centralsettlement-handler-settlementwindow
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-settlementwindow-12.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-12.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/finance-portal/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.1
type: Opaque
data:
  DB_USER: Y2VudHJhbF9sZWRnZXI=
  DB_PASSWORD: b3lNeGdaQ2h1dQ==
  DB_HOST: bW9qYWxvb3AxLWNlbnRyYWxsZWRnZXItbXlzcWw=
  DB_PORT: MzMwNg==
  AUTH_SERVER_CLIENTKEY: dGVzdGtleQ==
  AUTH_SERVER_CLIENTSECRET: dGVzdHNlY3JldA==
  JASPER_USER: dXNlcg==
  JASPER_PASSWORD: cGFzc3dvcmQ=
  AZURE_CLIENT_ID: ZWMzYjE2OGMtOTFkYi00YWEwLWE3ZDMtZWE5ZjZmOTk5OTk5
  AZURE_CLIENT_SECRET: c2VjcmV0
  AZURE_TENANT_ID: ZWMzYjE2OGMtOTFkYi00YWEwLWE3ZDMtZWE5ZjZmOTk5OTk5
  AZURE_WORKSPACE_ID: ZTE2ZDA1NWItN2E5YS00ZTliLWJiNGItYWJjZGVmOTk5OTk5
---
# Source: mojaloop/charts/finance-portal/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-finance-portal-certs
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.1
data:
  first_key.key: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUNYUUlCQUFLQmdRQ3lRODB1YUExREt4and1R2dldHVIaVhvWnhwUS9Ud3lqLzlhNXplTUNmWmxBdnJlQ3MKOE1oQ20xN091UWtZa2lJcG9Fd24zRFVEWEFPMDNrVWc5SGc1cGQ1T2JuVFpkV29CS1dSMXQvVTJSNHhVNnYydwpLTG45S3lLL2NBLzc5d3phaU1aUytIK2orcHQ5WmpnZHBLT2NuM1hLOGJPVVJJVkVzU051OCt5Wi93SURBUUFCCkFvR0FVTGR2ajl3d2FTSDZESUZMTCtFYUhZQTBldi9FejF0V1ZMTi9OcXpOOXo4Qi90ekoxelM5VUo5K1NiY3gKM2F6SmlEU2JWdzhYOS9ueGViT005Sk9OWGJjQ01lSlg1TXFzQnpyUjg5dlRIbzlpcjkxdTdMRFZCRW8rYnNyUwp1ZlRRZFQxZXRVT2dnd1dzc1U0SkxvUUI3TDdRb0ZoQlRuZEFjNkF3bUIxdDZwRUNRUURIQmUwMXFnVFF3RjRICnpqbnBCS1BVbFlYNU1hKzZWRHZTRy95RmRKZUE1OFRyRjNvQkJuRVQ5WlRteTRtRExRYU84OHdzQXgwa2R1YUIKSDh0dW9DVXZBa0VBNVV5SXBHMmRqUkN5Q1JrRU5KTG45cXBDYVNPd2FPNDNEMTg5S3FHelc5bkhpaE1OY3poYQpha0FJYTNVTHA4QW9xUEZLT0ZrK3YyakdZd1BIU2F0RU1RSkJBSzl2ci93QUZTS1dqOHk5b3hxZXRuUHNJaDdhCkI1ZHVMUlUzQ2sveHlLTWVxdHk0NHhrSVBxRmpkNUJDbHNNRTY2VVRqMFMwc2ZtMHZkZlEyUmg1SG8wQ1FBYXoKUE03cE1SQmRLNGFlaDRQdHd2OXZMQytjVGx4U2thTk9XaUF6eDJUb3NTNzByWkR2VlowREwvdkwyTUpYR0JrUApxK2FIblJERXcvOUNyZ0VXRXhFQ1FRQ1Q3akZ0aG9QczI5QTk4MWV1SGZaK2JYTUZFSTQ4UEZndzEzY215V25NCkhpakYrNEUvWHREMTFXSmtJdURDbUhhbC9vUnRjYklPL2NDazE1eGJXWmtECi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0=
  second_key.key: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUNYUUlCQUFLQmdRQ3lRODB1YUExREt4and1R2dldHVIaVhvWnhwUS9Ud3lqLzlhNXplTUNmWmxBdnJlQ3MKOE1oQ20xN091UWtZa2lJcG9Fd24zRFVEWEFPMDNrVWc5SGc1cGQ1T2JuVFpkV29CS1dSMXQvVTJSNHhVNnYydwpLTG45S3lLL2NBLzc5d3phaU1aUytIK2orcHQ5WmpnZHBLT2NuM1hLOGJPVVJJVkVzU051OCt5Wi93SURBUUFCCkFvR0FVTGR2ajl3d2FTSDZESUZMTCtFYUhZQTBldi9FejF0V1ZMTi9OcXpOOXo4Qi90ekoxelM5VUo5K1NiY3gKM2F6SmlEU2JWdzhYOS9ueGViT005Sk9OWGJjQ01lSlg1TXFzQnpyUjg5dlRIbzlpcjkxdTdMRFZCRW8rYnNyUwp1ZlRRZFQxZXRVT2dnd1dzc1U0SkxvUUI3TDdRb0ZoQlRuZEFjNkF3bUIxdDZwRUNRUURIQmUwMXFnVFF3RjRICnpqbnBCS1BVbFlYNU1hKzZWRHZTRy95RmRKZUE1OFRyRjNvQkJuRVQ5WlRteTRtRExRYU84OHdzQXgwa2R1YUIKSDh0dW9DVXZBa0VBNVV5SXBHMmRqUkN5Q1JrRU5KTG45cXBDYVNPd2FPNDNEMTg5S3FHelc5bkhpaE1OY3poYQpha0FJYTNVTHA4QW9xUEZLT0ZrK3YyakdZd1BIU2F0RU1RSkJBSzl2ci93QUZTS1dqOHk5b3hxZXRuUHNJaDdhCkI1ZHVMUlUzQ2sveHlLTWVxdHk0NHhrSVBxRmpkNUJDbHNNRTY2VVRqMFMwc2ZtMHZkZlEyUmg1SG8wQ1FBYXoKUE03cE1SQmRLNGFlaDRQdHd2OXZMQytjVGx4U2thTk9XaUF6eDJUb3NTNzByWkR2VlowREwvdkwyTUpYR0JrUApxK2FIblJERXcvOUNyZ0VXRXhFQ1FRQ1Q3akZ0aG9QczI5QTk4MWV1SGZaK2JYTUZFSTQ4UEZndzEzY215V25NCkhpakYrNEUvWHREMTFXSmtJdURDbUhhbC9vUnRjYklPL2NDazE1eGJXWmtECi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0=
  third_key.key: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUNYUUlCQUFLQmdRQ3lRODB1YUExREt4and1R2dldHVIaVhvWnhwUS9Ud3lqLzlhNXplTUNmWmxBdnJlQ3MKOE1oQ20xN091UWtZa2lJcG9Fd24zRFVEWEFPMDNrVWc5SGc1cGQ1T2JuVFpkV29CS1dSMXQvVTJSNHhVNnYydwpLTG45S3lLL2NBLzc5d3phaU1aUytIK2orcHQ5WmpnZHBLT2NuM1hLOGJPVVJJVkVzU051OCt5Wi93SURBUUFCCkFvR0FVTGR2ajl3d2FTSDZESUZMTCtFYUhZQTBldi9FejF0V1ZMTi9OcXpOOXo4Qi90ekoxelM5VUo5K1NiY3gKM2F6SmlEU2JWdzhYOS9ueGViT005Sk9OWGJjQ01lSlg1TXFzQnpyUjg5dlRIbzlpcjkxdTdMRFZCRW8rYnNyUwp1ZlRRZFQxZXRVT2dnd1dzc1U0SkxvUUI3TDdRb0ZoQlRuZEFjNkF3bUIxdDZwRUNRUURIQmUwMXFnVFF3RjRICnpqbnBCS1BVbFlYNU1hKzZWRHZTRy95RmRKZUE1OFRyRjNvQkJuRVQ5WlRteTRtRExRYU84OHdzQXgwa2R1YUIKSDh0dW9DVXZBa0VBNVV5SXBHMmRqUkN5Q1JrRU5KTG45cXBDYVNPd2FPNDNEMTg5S3FHelc5bkhpaE1OY3poYQpha0FJYTNVTHA4QW9xUEZLT0ZrK3YyakdZd1BIU2F0RU1RSkJBSzl2ci93QUZTS1dqOHk5b3hxZXRuUHNJaDdhCkI1ZHVMUlUzQ2sveHlLTWVxdHk0NHhrSVBxRmpkNUJDbHNNRTY2VVRqMFMwc2ZtMHZkZlEyUmg1SG8wQ1FBYXoKUE03cE1SQmRLNGFlaDRQdHd2OXZMQytjVGx4U2thTk9XaUF6eDJUb3NTNzByWkR2VlowREwvdkwyTUpYR0JrUApxK2FIblJERXcvOUNyZ0VXRXhFQ1FRQ1Q3akZ0aG9QczI5QTk4MWV1SGZaK2JYTUZFSTQ4UEZndzEzY215V25NCkhpakYrNEUvWHREMTFXSmtJdURDbUhhbC9vUnRjYklPL2NDazE1eGJXWmtECi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0=
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-ml-api-adapter-handler-notification-jws-signing-key
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.1
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KVkFDL2l4bTZsejhrSm1pZ0lCNWpNeExyaEI5Y2dxTStwYjBPK2lzODhWUkhkeHR3OGVLRzNudnJaWXkvNG5zSgp6MzJxbzRzT0lNcUhXVGxaZ2JVUlZLNEZBVUVaL3FuNjNVblhKMVlWcVQ0VUdnMzFCQmoyYzFKZGx4RzJ0NEpWCkR2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKNU1aUEhONTFvMDRlSW9MTzB0UGZrejArTkRzNEVDd1VXdUZBZzh5bzFoeG52U29FUmlDQXdFYkZncTJ3RGUxKwpvQmhPcHVzZDRWYXN0RC9URXFPOFJocndUb2RkZE9NS3phcEpQclFKdXZUa3Jwa21rUE9HRThEZ0lWSHNVTExSClVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKRC9wMjFha1MxNTZFMzJCRUp1WVBrL1RMaUkya01Xam52Ykh2TmdyOXRxOHgzVG95VGp0cmc1Y2xxOEhyMU96bwpGbkZpcWtWSE1GUEZQUVpFVlU2NENRUEEzM0RpeHVXak1XUzNZSU5mQ0FpbkVyQnJ5MFBpTlpHbXVGaTFLL3d5CmUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKTks2SFFvRVhONFk5QVFIbjUzRmw4bjBpTk8zcXgwVGI3RXVHTkZtWjJ4VGxwREtBcDhNK0JBNVFtNVlEa2JkNgpPb3hiR2oyWXhabmNiRytSc3ZJQ3RWTUxxSXl0dWJ2WVJFWTlXR2tDZ1lFQStLNjR4aEp6V1YzY0djOC85MGtvClRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKVjhabzJHZXI2TG45OUxCZGRUaDJIWEwzTTYwY01nczhNWUd1Sjc1ZzVSL1VIbkpCTG83TkZ5VmRkQ09NVDNoYwpBWVNETjNYQ3c5eWNxVHcyL21KSEI5a0NnWUVBOVFpYUNmVHRuWGRqTXFMZVlicDJ1UUV5eU82SVpzOTU2eW03CnNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKNU5qNFNWUVd1T1hKaGRmQzlkbVRGK2N2QmVQK3ZDNlB5RGJpa3hkQ285KzA1Y2h4UzdJM01MeEN1ZTRxeHkwQwpRZlFJRTEwQ2dZQStrSGFjSG5nMnU0NXNUOS9mN3QvZEwwRHpTTlJBdkw3aWVrSWtDSVVSaDhSRG5EenJNVld3CmQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKOHloRmgzZ0pMUURJeUNYdCtLOVFhMjRma2ZIeTdHejVWTVZPWnFvaGJKZGRYSERaZnhBdndRS0JnQWRVOTQ3Kwp0akYxQmhIWXo4Q3EzS3lTZlp1SGo2dEw0QUVLWWFSWGxPNHR3Yk1lLzlJLzRBaVNocXZmWi94YkJmblNsbEdYCkhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKZ1k4WExoWkxObFY5MXU0RjZpTGFMMER6QUhLdlJSY0dIMHU5QW9HQVROaWdaZ2JSUkhKQzIxSnVjSGVFMHRQNwpIakdBTHZiNHFuMW8wb0RIc3hOWThpNnZWTnc5WWVRcFphSmhjZXVSSEpUR2NzcTJkSlNYcFl3SWhJVnMvOFJLCmJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKZWNhRy9PeW8vUytlTThuUjdtYz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-ml-ttk-test-setup-aws-creds
  labels:
    app.kubernetes.io/name: ml-ttk-test-setup-aws-creds
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: "11.9.4"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-setup-11.0.1
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "AWS_ACCESS_KEY_ID": c29tZV9hd3NfYWNjZXNzX2tleQ==
  "AWS_SECRET_ACCESS_KEY": c29tZV9hd3Nfc2VjcmV0X2tleQ==
  "AWS_REGION": dXMtd2VzdC0y
---
# Source: mojaloop/charts/quoting-service/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-quoting-service-jws-signing-key
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.1.0
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KICBWQUMvaXhtNmx6OGtKbWlnSUI1ak14THJoQjljZ3FNK3BiME8raXM4OFZSSGR4dHc4ZUtHM252clpZeS80bnNKCiAgejMycW80c09JTXFIV1RsWmdiVVJWSzRGQVVFWi9xbjYzVW5YSjFZVnFUNFVHZzMxQkJqMmMxSmRseEcydDRKVgogIER2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKICA1TVpQSE41MW8wNGVJb0xPMHRQZmt6MCtORHM0RUN3VVd1RkFnOHlvMWh4bnZTb0VSaUNBd0ViRmdxMndEZTErCiAgb0JoT3B1c2Q0VmFzdEQvVEVxTzhSaHJ3VG9kZGRPTUt6YXBKUHJRSnV2VGtycGtta1BPR0U4RGdJVkhzVUxMUgogIFVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKICBEL3AyMWFrUzE1NkUzMkJFSnVZUGsvVExpSTJrTVdqbnZiSHZOZ3I5dHE4eDNUb3lUanRyZzVjbHE4SHIxT3pvCiAgRm5GaXFrVkhNRlBGUFFaRVZVNjRDUVBBMzNEaXh1V2pNV1MzWUlOZkNBaW5FckJyeTBQaU5aR211RmkxSy93eQogIGUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKICBOSzZIUW9FWE40WTlBUUhuNTNGbDhuMGlOTzNxeDBUYjdFdUdORm1aMnhUbHBES0FwOE0rQkE1UW01WURrYmQ2CiAgT294YkdqMll4Wm5jYkcrUnN2SUN0Vk1McUl5dHVidllSRVk5V0drQ2dZRUErSzY0eGhKeldWM2NHYzgvOTBrbwogIFRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKICBWOFpvMkdlcjZMbjk5TEJkZFRoMkhYTDNNNjBjTWdzOE1ZR3VKNzVnNVIvVUhuSkJMbzdORnlWZGRDT01UM2hjCiAgQVlTRE4zWEN3OXljcVR3Mi9tSkhCOWtDZ1lFQTlRaWFDZlR0blhkak1xTGVZYnAydVFFeXlPNklaczk1NnltNwogIHNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKICA1Tmo0U1ZRV3VPWEpoZGZDOWRtVEYrY3ZCZVArdkM2UHlEYmlreGRDbzkrMDVjaHhTN0kzTUx4Q3VlNHF4eTBDCiAgUWZRSUUxMENnWUEra0hhY0huZzJ1NDVzVDkvZjd0L2RMMER6U05SQXZMN2lla0lrQ0lVUmg4UkRuRHpyTVZXdwogIGQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKICA4eWhGaDNnSkxRREl5Q1h0K0s5UWEyNGZrZkh5N0d6NVZNVk9acW9oYkpkZFhIRFpmeEF2d1FLQmdBZFU5NDcrCiAgdGpGMUJoSFl6OENxM0t5U2ZadUhqNnRMNEFFS1lhUlhsTzR0d2JNZS85SS80QWlTaHF2ZloveGJCZm5TbGxHWAogIEhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKICBnWThYTGhaTE5sVjkxdTRGNmlMYUwwRHpBSEt2UlJjR0gwdTlBb0dBVE5pZ1pnYlJSSEpDMjFKdWNIZUUwdFA3CiAgSGpHQUx2YjRxbjFvMG9ESHN4Tlk4aTZ2Vk53OVllUXBaYUpoY2V1UkhKVEdjc3EyZEpTWHBZd0loSVZzLzhSSwogIGJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKICBlY2FHL095by9TK2VNOG5SN21jPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
---
# Source: mojaloop/charts/quoting-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.1.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpwYXNzd29yZEBteXNxbC1jbDozMzA2L2NlbnRyYWxfbGVkZ2Vy
---
# Source: mojaloop/charts/transaction-requests-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop1-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.1
type: Opaque
data: {}
# base64 encoded string
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-account-lookup-service-admin-config
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-11.1.0
data:
  default.json: "{\n  \"ADMIN_PORT\":  4001,\n  \"API_PORT\":  4002,\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-als\",\n    \"PORT\": 3306,\n    \"USER\": \"account_lookup\",\n    \"PASSWORD\": \"password\",\n    \"DATABASE\": \"account_lookup\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"DISPLAY_ROUTES\": true,\n  \"RUN_MIGRATIONS\": false,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"SWITCH_ENDPOINT\": \"http://mojaloop1-centralledger-service:80\",\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"fspId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-admin\"\n        }\n      }\n    }\n  },\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": false,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  },\n  \"API_DOCUMENTATION_ENDPOINTS\": true\n}\n\n"
  knexfile.js: "'use strict'\nconst migrationsDirectory = '/opt/account-lookup-service/migrations'\nconst seedsDirectory = '/opt/account-lookup-service/seeds'\nconst Config = require('/opt/account-lookup-service/src/lib/config')\nmodule.exports = {\n    client: 'mysql',\n    version: '5.7',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-account-lookup-service-admin-sidecar
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-11.1.0
data:
  default.json: "{\n  \"PORT\": 4003,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-admin-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-account-lookup-service-config
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.1.0
data:
  default.json: "{\n  \"ADMIN_PORT\":  4001,\n  \"API_PORT\":  4002,\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-als\",\n    \"PORT\": 3306,\n    \"USER\": \"account_lookup\",\n    \"PASSWORD\": \"password\",\n    \"DATABASE\": \"account_lookup\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"DISPLAY_ROUTES\": true,\n  \"RUN_MIGRATIONS\": false,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"SWITCH_ENDPOINT\": \"http://mojaloop1-centralledger-service:80\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"fspId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service\"\n        }\n      }\n    }\n  },\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": true,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  },\n  \"API_DOCUMENTATION_ENDPOINTS\": true\n}\n"
  knexfile.js: "'use strict'\nconst migrationsDirectory = '/opt/account-lookup-service/migrations'\nconst seedsDirectory = '/opt/account-lookup-service/seeds'\nconst Config = require('/opt/account-lookup-service/src/lib/config')\nmodule.exports = {\n    client: 'mysql',\n    version: '5.7',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-account-lookup-service-sidecar
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.1.0
data:
  default.json: "{\n  \"PORT\": 4003,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centraleventprocessor-config
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.1
data:
  default.json: "{\n    \"notificationMinutes\": {\n        \"resetPeriod\": 60,\n        \"notificationInterval\": 3,\n        \"oscilateEvents\": [\"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\"]\n    },\n    \"swaggerOptions\": {\n        \"info\": {\n            \"title\": \"Central notification system API Documentation\",\n            \"description\": \"Api Documentation for central-notification\"\n        },\n        \"expanded\": \"full\"\n    },\n    \"HUB_PARTICIPANT\": {\n        \"NAME\": \"hub\"\n    },\n    \"PORT\": 3080,\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"centralLedgerAPI\": {\n        \"adminHost\": \"mojaloop1-centralledger-service\",\n        \"adminPort\": 80\n    },\n    \"mongo\": {\n        \"user\": \"mojaloop\",\n        \"password\": \"password\",\n        \"uri\": \"mojaloop1-cep-mongodb:27017\",\n        \"database\": \"mojaloop\",\n        \"ruleCollection\": \"Rule\",\n        \"netDebitCapPositionCollection\": \"NDCPosition\",\n        \"actionCollection\": \"Actions\",\n        \"eventCollection\": \"Events\",\n        \"limitCollection\": \"Limits\",\n        \"notificationEndpointCollection\": \"NotificationEndpoints\"\n  },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cep-con\",\n                            \"group.id\": \"cep-group\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.blocking.max.ms\": 1,\n                            \"fetch.wait.max.ms\": 1,\n                            \"fetch.error.backoff.ms\": 1,\n                            \"queue.buffering.max.ms\": 1,\n                            \"broker.version.fallback\": \"0.10.1.0\",\n                            \"api.version.request\": true,\n                            \"enable.auto.commit\": false,\n                            \"auto.commit.interval.ms\": 200,\n                            \"socket.keepalive.enable\": true,\n                            \"socket.max.fails\": 1\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"debug\": \"all\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cep-prod\",\n                            \"event_cb\": true,\n                            \"compression.codec\": \"none\",\n                            \"retry.backoff.ms\": 100,\n                            \"message.send.max.retries\": 2,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000,\n                            \"batch.num.messages\": 100,\n                            \"dr_cb\": true,\n                            \"socket.blocking.max.ms\": 1,\n                            \"queue.buffering.max.ms\": 1,\n                            \"broker.version.fallback\": \"0.10.1.0\",\n                            \"api.version.request\": true\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-handler-admin-transfer-config
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-12.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-admin-transfer.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop1-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop1-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-admin-transfer\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-handler-timeout-config
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-timeout.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop1-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop1-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": false,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-timeout\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-handler-timeout-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-timeout-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-handler-transfer-fulfil-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-fulfil.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop1-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop1-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-fulfil\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-handler-transfer-fulfil-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-fulfil-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-handler-transfer-get-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-12.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-get.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop1-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop1-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-get\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-handler-transfer-position-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-position.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop1-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop1-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-position\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-handler-transfer-position-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-position-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-handler-transfer-prepare-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-prepare.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop1-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop1-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-prepare\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"ENABLE_ON_US_TRANSFERS\": false,\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-handler-transfer-prepare-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-prepare-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralledger-service-config
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-12.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop1-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mysql-cl\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"password\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop1-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": true,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-service\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/config-script.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: mojaloop1
    heritage: Helm
    component: server
data:
    ok: |
      #!/bin/sh
      echo ruok | nc 127.0.0.1 ${1:-2181}

    ready: |
      #!/bin/sh
      echo ruok | nc 127.0.0.1 ${1:-2181}

    run: |
      #!/bin/bash

      set -a
      ROOT=$(echo /apache-zookeeper-*)

      ZK_USER=${ZK_USER:-"zookeeper"}
      ZK_LOG_LEVEL=${ZK_LOG_LEVEL:-"INFO"}
      ZK_DATA_DIR=${ZK_DATA_DIR:-"/data"}
      ZK_DATA_LOG_DIR=${ZK_DATA_LOG_DIR:-"/data/log"}
      ZK_CONF_DIR=${ZK_CONF_DIR:-"/conf"}
      ZK_CLIENT_PORT=${ZK_CLIENT_PORT:-2181}
      ZK_SERVER_PORT=${ZK_SERVER_PORT:-2888}
      ZK_ELECTION_PORT=${ZK_ELECTION_PORT:-3888}
      ZK_TICK_TIME=${ZK_TICK_TIME:-2000}
      ZK_INIT_LIMIT=${ZK_INIT_LIMIT:-10}
      ZK_SYNC_LIMIT=${ZK_SYNC_LIMIT:-5}
      ZK_HEAP_SIZE=${ZK_HEAP_SIZE:-2G}
      ZK_MAX_CLIENT_CNXNS=${ZK_MAX_CLIENT_CNXNS:-60}
      ZK_MIN_SESSION_TIMEOUT=${ZK_MIN_SESSION_TIMEOUT:- $((ZK_TICK_TIME*2))}
      ZK_MAX_SESSION_TIMEOUT=${ZK_MAX_SESSION_TIMEOUT:- $((ZK_TICK_TIME*20))}
      ZK_SNAP_RETAIN_COUNT=${ZK_SNAP_RETAIN_COUNT:-3}
      ZK_PURGE_INTERVAL=${ZK_PURGE_INTERVAL:-0}
      ID_FILE="$ZK_DATA_DIR/myid"
      ZK_CONFIG_FILE="$ZK_CONF_DIR/zoo.cfg"
      LOG4J_PROPERTIES="$ZK_CONF_DIR/log4j.properties"
      HOST=$(hostname)
      DOMAIN=`hostname -d`
      ZOOCFG=zoo.cfg
      ZOOCFGDIR=$ZK_CONF_DIR
      JVMFLAGS="-Xmx$ZK_HEAP_SIZE -Xms$ZK_HEAP_SIZE"

      APPJAR=$(echo $ROOT/*jar)
      CLASSPATH="${ROOT}/lib/*:${APPJAR}:${ZK_CONF_DIR}:"

      if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
          NAME=${BASH_REMATCH[1]}
          ORD=${BASH_REMATCH[2]}
          MY_ID=$((ORD+1))
      else
          echo "Failed to extract ordinal from hostname $HOST"
          exit 1
      fi

      mkdir -p $ZK_DATA_DIR
      mkdir -p $ZK_DATA_LOG_DIR
      echo $MY_ID >> $ID_FILE

      echo "clientPort=$ZK_CLIENT_PORT" >> $ZK_CONFIG_FILE
      echo "dataDir=$ZK_DATA_DIR" >> $ZK_CONFIG_FILE
      echo "dataLogDir=$ZK_DATA_LOG_DIR" >> $ZK_CONFIG_FILE
      echo "tickTime=$ZK_TICK_TIME" >> $ZK_CONFIG_FILE
      echo "initLimit=$ZK_INIT_LIMIT" >> $ZK_CONFIG_FILE
      echo "syncLimit=$ZK_SYNC_LIMIT" >> $ZK_CONFIG_FILE
      echo "maxClientCnxns=$ZK_MAX_CLIENT_CNXNS" >> $ZK_CONFIG_FILE
      echo "minSessionTimeout=$ZK_MIN_SESSION_TIMEOUT" >> $ZK_CONFIG_FILE
      echo "maxSessionTimeout=$ZK_MAX_SESSION_TIMEOUT" >> $ZK_CONFIG_FILE
      echo "autopurge.snapRetainCount=$ZK_SNAP_RETAIN_COUNT" >> $ZK_CONFIG_FILE
      echo "autopurge.purgeInterval=$ZK_PURGE_INTERVAL" >> $ZK_CONFIG_FILE
      echo "4lw.commands.whitelist=*" >> $ZK_CONFIG_FILE

      for (( i=1; i<=$ZK_REPLICAS; i++ ))
      do
          echo "server.$i=$NAME-$((i-1)).$DOMAIN:$ZK_SERVER_PORT:$ZK_ELECTION_PORT" >> $ZK_CONFIG_FILE
      done

      rm -f $LOG4J_PROPERTIES

      echo "zookeeper.root.logger=$ZK_LOG_LEVEL, CONSOLE" >> $LOG4J_PROPERTIES
      echo "zookeeper.console.threshold=$ZK_LOG_LEVEL" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.threshold=$ZK_LOG_LEVEL" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.dir=$ZK_DATA_LOG_DIR" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.file=zookeeper.log" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.maxfilesize=256MB" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.maxbackupindex=10" >> $LOG4J_PROPERTIES
      echo "zookeeper.tracelog.dir=$ZK_DATA_LOG_DIR" >> $LOG4J_PROPERTIES
      echo "zookeeper.tracelog.file=zookeeper_trace.log" >> $LOG4J_PROPERTIES
      echo "log4j.rootLogger=\${zookeeper.root.logger}" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.Threshold=\${zookeeper.console.threshold}" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n" >> $LOG4J_PROPERTIES

      if [ -n "$JMXDISABLE" ]
      then
          MAIN=org.apache.zookeeper.server.quorum.QuorumPeerMain
      else
          MAIN="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=$JMXPORT -Dcom.sun.management.jmxremote.authenticate=$JMXAUTH -Dcom.sun.management.jmxremote.ssl=$JMXSSL -Dzookeeper.jmx.log4j.disable=$JMXLOG4J org.apache.zookeeper.server.quorum.QuorumPeerMain"
      fi

      set -x
      exec java -cp "$CLASSPATH" $JVMFLAGS $MAIN $ZK_CONFIG_FILE
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/configmap-jmx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-kafka-metrics
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-monitor
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop1
data:
  jmx-kafka-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    
    whitelistObjectNames: ["kafka.controller:*","kafka.server:*","java.lang:*","kafka.network:*","kafka.log:*"]
    
    rules:
    - pattern: kafka.controller<type=(ControllerChannelManager), name=(QueueSize), broker-id=(\d+)><>(Value)
      name: kafka_controller_$1_$2_$4
      labels:
        broker_id: "$3"
    - pattern: kafka.controller<type=(ControllerChannelManager), name=(TotalQueueSize)><>(Value)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.controller<type=(KafkaController), name=(.+)><>(Value)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.controller<type=(ControllerStats), name=(.+)><>(Count)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.server<type=(ReplicaFetcherManager), name=(.+), clientId=(.+)><>(Value)
      name: kafka_server_$1_$2_$4
      labels:
        client_id: "$3"
    - pattern : kafka.network<type=(Processor), name=(IdlePercent), networkProcessor=(.+)><>(Value)
      name: kafka_network_$1_$2_$4
      labels:
        network_processor: $3
    - pattern : kafka.network<type=(RequestMetrics), name=(RequestsPerSec), request=(.+)><>(Count)
      name: kafka_network_$1_$2_$4
      labels:
        request: $3
    - pattern: kafka.server<type=(.+), name=(.+), topic=(.+)><>(Count|OneMinuteRate)
      name: kafka_server_$1_$2_$4
      labels:
        topic: $3
    - pattern: kafka.server<type=(DelayedOperationPurgatory), name=(.+), delayedOperation=(.+)><>(Value)
      name: kafka_server_$1_$2_$3_$4
    - pattern: kafka.server<type=(.+), name=(.+)><>(Count|Value|OneMinuteRate)
      name: kafka_server_$1_total_$2_$3
    - pattern: kafka.server<type=(.+)><>(queue-size)
      name: kafka_server_$1_$2
    - pattern: java.lang<type=(.+), name=(.+)><(.+)>(\w+)
      name: java_lang_$1_$4_$3_$2
    - pattern: java.lang<type=(.+), name=(.+)><>(\w+)
      name: java_lang_$1_$3_$2
    - pattern : java.lang<type=(.*)>
    - pattern: kafka.log<type=(.+), name=(.+), topic=(.+), partition=(.+)><>Value
      name: kafka_log_$1_$2
      labels:
        topic: $3
        partition: $4
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-settlementwindow/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralsettlement-handler-settlementwindow-config
  labels:
    app.kubernetes.io/name: centralsettlement-handler-settlementwindow
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-settlementwindow-12.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"central-settlement-settlementwindow.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-cl\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"password\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": false,\n    \"API\": {\n      \"DISABLED\": false\n    },\n    \"SETTINGS\": {\n      \"SCRIPTS_FOLDER\": \"scripts/transferSettlementTemp\"\n    }\n  },\n  \"API_DOC_ENDPOINTS_ENABLED\": true,\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"SETTLEMENTWINDOW\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-setlementwindow-close\",\n              \"group.id\": \"cs-group-setlementwindow-close\",\n              \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n              \"socket.keepalive.enable\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      },\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-transferfulfil-process\",\n              \"group.id\": \"cs-group-transferfulfil-process\",\n              \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n              \"socket.keepalive.enable\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n              \"client.id\": \"cs-prod-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"SETTLEMENTWINDOW\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n              \"client.id\": \"cs-prod-setlementwindow-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-settlementwindow/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralsettlement-handler-settlementwindow-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-settlementwindow
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-settlementwindow-12.0.0
data:
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralsettlement-service-config
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-12.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"central-settlement-service.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-cl\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"password\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": true,\n    \"API\": {\n      \"DISABLED\": false\n    },\n    \"SETTINGS\": {\n      \"SCRIPTS_FOLDER\": \"scripts/transferSettlementTemp\"\n    }\n  },\n  \"API_DOC_ENDPOINTS_ENABLED\": true,\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"SETTLEMENTWINDOW\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-setlementwindow-close\",\n              \"group.id\": \"cs-group-setlementwindow-close\",\n              \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n              \"socket.keepalive.enable\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      },\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-transferfulfil-process\",\n              \"group.id\": \"cs-group-transferfulfil-process\",\n              \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n              \"socket.keepalive.enable\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n              \"client.id\": \"cs-prod-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"SETTLEMENTWINDOW\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n              \"client.id\": \"cs-prod-setlementwindow-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-centralsettlement-service-rules
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-12.0.0
data:
---
# Source: mojaloop/charts/finance-portal/templates/configmap-auth-init.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-ispopulate
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.1
data:
  HTTP_HOST: "https://localhost"
  HTTP_PORT: "9443"
  HTTP_ENDPOINT: "something"
  HTTP_TIMEOUT: "30000"
  AUTHENTICATION_TYPE: "basic"
  AUTHENTICATION_CREDENTIALS_USERNAME: "admin"
  AUTHENTICATION_CREDENTIALS_PASSWORD: "admin"
---
# Source: mojaloop/charts/finance-portal/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.1
data:
  FXP_ENDPOINT: "http://mojaloop1-fxp-server"
  EXTERNAL_SETTLEMENTS_ENDPOINT: "http://mojaloop1-external-settlement-server"
  CENTRAL_SETTLEMENTS_ENDPOINT: "http://mojaloop1-centralsettlement/v1"
  CENTRAL_LEDGER_ENDPOINT: "http://mojaloop1-centralledger-service"
  HUB_REPORT_URL_312: "http://mojaloop1-something"
  HUB_REPORT_URL_644: "http://mojaloop1-something"
  SETTLEMENT_MANAGEMENT_ENDPOINT: "http://mojaloop1-finance-portal-settlement-management:5000"
  LISTEN_PORT: "3000"
  NODE_ENV: "production"
  BYPASS_AUTH:  "true"
  CORS_ACCESS_CONTROL_REFLECT_ORIGIN: "false"
  INSECURE_COOKIE: "false"
  AUTH_SERVER: "https://localhost"
  AUTH_SERVER_PORT: "9443"
  AUTH_SERVICE: "/oauth2/token"
  VALIDATE_SERVICE: "/oauth2/introspect"
  USERINFO_SERVICE: "/oauth2/userinfo"
  REVOKE_SERVICE: "/oauth2/revoke"
  AZURE_AUTH_TOKEN_ENDPOINT: "https://login.microsoftonline.com"
  AZURE_GRANT_TYPE: "client_credentials"
  AZURE_KAFKA_MESSAGE_PATTERN: "Producer.sendMessage::messageProtocol:'({.*?})'"
  AZURE_LOG_API_ENDPOINT: "https://api.loganalytics.io/v1/"
  AZURE_REDIRECT_URI: "http://localhost:5000"
  AZURE_RESOURCE: "https://api.loganalytics.io/"
  AZURE_SEARCH_QUERY_REGEX: "search '(.*)' | where LogEntry matches regex '.*Producer.sendMessage::messageProtocol:.*' | where LogEntry matches regex '.*transferId.*' | where LogEntry matches regex '.*fspiop-signature.*' | take 1 | project LogEntry"
  AZURE_SEARCH_QUERY_TEMPLATE: "search '{{transferId}}' | where LogEntry matches regex '.*Producer.sendMessage::messageProtocol:.*' | where LogEntry matches regex '.*transferId.*' | where LogEntry matches regex '.*fspiop-signature.*' | take 1 | project LogEntry"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-ml-api-adapter-handler-notification-config
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.1
data:
  default.json: "{\n    \"PORT\": 3000,\n    \"ENDPOINT_SOURCE_URL\": \"http://mojaloop1-centralledger-service:80\",\n    \"ENDPOINT_HEALTH_URL\": \"http://mojaloop1-centralledger-service:80/health\",\n    \"ENDPOINT_CACHE_CONFIG\": {\n        \"expiresIn\": 180000,\n        \"generateTimeout\": 30000\n    },\n    \"ENDPOINT_SECURITY\":{\n        \"JWS\": {\n          \"JWS_SIGN\": true,\n          \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n          \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n        },\n        \"TLS\": {\n            \"rejectUnauthorized\": true\n        }\n    },\n    \"HOSTNAME\": \"ml-api-adapter-notification.local\",\n    \"MAX_CALLBACK_TIME_LAG_DILATION_MILLISECONDS\": 100,\n    \"MAX_FULFIL_TIMEOUT_DURATION_SECONDS\": 240,\n    \"TRANSFERS\": {\n        \"SEND_TRANSFER_CONFIRMATION_TO_PAYEE\": false\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"ml-handler-notification\"\n                }\n            }\n        }\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            },\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"FULFIL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-fulfil\",\n                \"REGEX\": \"topic-transfer-fulfil\"\n            },\n            \"GET_TRANSFERS_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-get\",\n                \"REGEX\": \"topic-transfer-get\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"ml-con-notification-event\",\n                            \"group.id\": \"ml-group-notification-event\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-ml-api-adapter-handler-notification-sidecar
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.1
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"ml-api-adapter-handler-notification-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-ml-api-adapter-service-config
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.1
data:
  default.json: "{\n    \"PORT\": 3000,\n    \"ENDPOINT_SOURCE_URL\": \"http://mojaloop1-centralledger-service:80\",\n    \"ENDPOINT_HEALTH_URL\": \"http://mojaloop1-centralledger-service:80/health\",\n    \"ENDPOINT_CACHE_CONFIG\": {\n        \"expiresIn\": 180000,\n        \"generateTimeout\": 30000\n    },\n    \"ENDPOINT_SECURITY\":{\n        \"JWS\": {\n            \"JWS_SIGN\": false,\n            \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n            \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n          },\n        \"TLS\": {\n            \"rejectUnauthorized\": true\n        }\n    },\n    \"HOSTNAME\": \"ml-api-adapter.local\",\n    \"MAX_CALLBACK_TIME_LAG_DILATION_MILLISECONDS\": 100,\n    \"MAX_FULFIL_TIMEOUT_DURATION_SECONDS\": 240,\n    \"TRANSFERS\": {\n        \"SEND_TRANSFER_CONFIRMATION_TO_PAYEE\": false\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": true,\n        \"API\": {\n            \"DISABLED\": false\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"ml-service\"\n                }\n            }\n        }\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            },\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"FULFIL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-fulfil\",\n                \"REGEX\": \"topic-transfer-fulfil\"\n            },\n            \"GET_TRANSFERS_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-get\",\n                \"REGEX\": \"topic-transfer-get\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"ml-con-notification-event\",\n                            \"group.id\": \"ml-group-notification-event\",\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-ml-api-adapter-service-sidecar
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.1
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"ml-api-adapter-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-ml-ttk-test-setup-config-file-defaults
  labels:
    app.kubernetes.io/name: ml-ttk-test-setup
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-setup-11.0.1
data:
  cli-default-config.json: |
    {"logLevel":"2","mode":"outbound"}
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-ml-ttk-test-setup-config-testcase-environment-file
  labels:
    app.kubernetes.io/name: ml-ttk-test-setup
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-setup-11.0.1
data:
  cli-testcase-environment.json: |
    {"inputValues":{"BASE_CENTRAL_LEDGER_ADMIN":"","CALLBACK_ENDPOINT_BASE_URL":"http://mojaloop1-ml-testing-toolkit-backend:5000","ENABLE_JWS_SIGNING":true,"ENABLE_JWS_VALIDATION":false,"ENABLE_PROTECTED_HEADERS_VALIDATION":true,"ENABLE_WS_ASSERTIONS":true,"HOST_ACCOUNT_LOOKUP_ADMIN":"http://mojaloop1-account-lookup-service-admin","HOST_ACCOUNT_LOOKUP_SERVICE":"http://mojaloop1-account-lookup-service","HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN":"http://mojaloop1-account-lookup-service-admin","HOST_BULK_ADAPTER":"http://mojaloop1-bulk-api-adapter-service","HOST_CENTRAL_LEDGER":"http://mojaloop1-centralledger-service","HOST_CENTRAL_SETTLEMENT":"http://mojaloop1-centralsettlement-service/v2","HOST_LEGACY_SIMULATOR":"http://mojaloop1-simulator","HOST_ML_API_ADAPTER":"http://mojaloop1-ml-api-adapter-service","HOST_QUOTING_SERVICE":"http://mojaloop1-quoting-service","HOST_SIMULATOR":"http://mojaloop1-simulator","HOST_TRANSACTION_REQUESTS_SERVICE":"http://mojaloop1-transaction-requests-service","HUB_OPERATOR_BEARER_TOKEN":"NOT_APPLICABLE","NORESPONSE_SIMPAYEE_NAME":"noresponsepayeefsp","ON_US_TRANSFERS_ENABLED":false,"PAYEEFSP_BACKEND_TESTAPI_URL":"http://mojaloop1-sim-payeefsp-backend:3003","PAYEEFSP_CALLBACK_URL":"http://mojaloop1-sim-payeefsp-scheme-adapter:4000","PAYEEFSP_SDK_TESTAPI_URL":"http://mojaloop1-sim-payeefsp-scheme-adapter:4002","PAYEEFSP_SDK_TESTAPI_WS_URL":"ws://mojaloop1-sim-payeefsp-scheme-adapter:4002","PAYERFSP_BACKEND_TESTAPI_URL":"http://mojaloop1-sim-payerfsp-backend:3003","PAYERFSP_CALLBACK_URL":"http://mojaloop1-sim-payerfsp-scheme-adapter:4000","PAYERFSP_SDK_TESTAPI_URL":"http://mojaloop1-sim-payerfsp-scheme-adapter:4002","PAYERFSP_SDK_TESTAPI_WS_URL":"ws://mojaloop1-sim-payerfsp-scheme-adapter:4002","SIM1_JWS_KEY":"-----BEGIN PRIVATE KEY-----\n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\nDgoQeSng2kt5Z6mkoDIQTs7nEflb4w==\n-----END PRIVATE KEY-----\n","SIM1_MSISDN":"17039811903","SIM1_NAME":"testfsp1","SIM2_JWS_KEY":"-----BEGIN PRIVATE KEY-----\n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\nTv4G862WYeqD1fdyZaKQ3b9fAQEq1g==\n-----END PRIVATE KEY-----\n","SIM2_MSISDN":"17039811904","SIM2_NAME":"testfsp2","SIMPAYEE_CURRENCY":"USD","SIMPAYEE_JWS_PRIVATE_KEY":"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT\n7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL\nnoSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi\n120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI\nIoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y\neW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB\nT/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z\nSikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq\nm+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2\nHfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I\nWylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0\ndQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY\nJuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB\nBKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4\nSfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj\nsuHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd\n7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm\nfW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH\ntl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/\nn3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+\nCPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K\nFfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct\n0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ\nsHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa\nuutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW\nuu1pxuWD0gTJxFkp6u4YIAhw\n-----END PRIVATE KEY-----\n","SIMPAYEE_JWS_PUB_KEY":"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE\nsgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw\nIpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW\nNgf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj\nvVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ\nLmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3\nFwIDAQAB\n-----END PUBLIC KEY-----\n","SIMPAYEE_MSISDN":"17039811902","SIMPAYEE_NAME":"payeefsp","SIMPAYER_CURRENCY":"USD","SIMPAYER_JWS_PRIVATE_KEY":"-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6\njM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E\nvCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I\neoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7\nkx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC\nQWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/\nsAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt\nA7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj\na4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X\nKaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii\nyWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n\nxOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR\nRbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B\ndXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ\nuomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht\nvJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS\ngGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium\nsgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW\n6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR\n8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/\nkmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI\niuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX\n7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa\n+fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4\nzXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF\niNK0yCENMhSoOTtbT9tmGi0=\n-----END PRIVATE KEY-----\n","SIMPAYER_MSISDN":"17039811901","SIMPAYER_NAME":"payerfsp","SIMPLE_ROUTING_MODE_ENABLED":true,"TESTFSP1_BACKEND_TESTAPI_URL":"http://mojaloop1-sim-testfsp1-backend:3003","TESTFSP1_CALLBACK_URL":"http://mojaloop1-sim-testfsp1-scheme-adapter:4000","TESTFSP1_JWS_PUB_KEY":"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v\ndCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG\n42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6\nNRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa\nh9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os\nxQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by\nUQIDAQAB\n-----END PUBLIC KEY-----\n","TESTFSP1_SDK_TESTAPI_URL":"http://mojaloop1-sim-testfsp1-scheme-adapter:4002","TESTFSP1_SDK_TESTAPI_WS_URL":"ws://mojaloop1-sim-testfsp1-scheme-adapter:4002","TESTFSP2_BACKEND_TESTAPI_URL":"http://mojaloop1-sim-testfsp2-backend:3003","TESTFSP2_CALLBACK_URL":"http://mojaloop1-sim-testfsp2-scheme-adapter:4000","TESTFSP2_JWS_PUB_KEY":"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y\nl5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5\n+ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG\nYedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H\nJa+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6\nWZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+\nAQIDAQAB\n-----END PUBLIC KEY-----","TESTFSP2_SDK_TESTAPI_URL":"http://mojaloop1-sim-testfsp2-scheme-adapter:4002","TESTFSP2_SDK_TESTAPI_WS_URL":"ws://mojaloop1-sim-testfsp2-scheme-adapter:4002","TEST_NOTIFICATIONS":true,"TTKFSP_JWS_KEY":"-----BEGIN PRIVATE KEY-----\n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\nDktFAP1w3ruycnE/t+/H8rDVJGPTHc8=\n-----END PRIVATE KEY-----\n","WS_ASSERTION_TIMEOUT":5000,"accept":"application/vnd.interoperability.parties+json;version=1.0","acceptParticipants":"application/vnd.interoperability.participants+json;version=1.0","acceptQuotes":"application/vnd.interoperability.quotes+json;version=1.0","acceptTransfers":"application/vnd.interoperability.transfers+json;version=1.0","accountId":"6","amount":"100","batchToIdValue1":"27713803066","batchToIdValue2":"27713803067","condition":"n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU","contentTransfers":"application/vnd.interoperability.transfers+json;version=1.0","contentType":"application/vnd.interoperability.parties+json;version=1.0","contentTypeParticipants":"application/vnd.interoperability.participants+json;version=1.0","contentTypeQuotes":"application/vnd.interoperability.quotes+json;version=1.0","currency":"USD","currency2":"USD","expectedAuthorizationsVersion":"1.0","expectedParticipantsVersion":"1.0","expectedPartiesVersion":"1.0","expectedQuotesVersion":"1.0","expectedTransactionRequestsVersion":"1.0","expectedTransfersVersion":"1.0","fromDOB":"1984-01-01","fromFirstName":"Firstname-Test","fromFspId":"testingtoolkitdfsp","fromIdType":"MSISDN","fromIdValue":"44123456789","fromLastName":"Lastname-Test","fspiopSignature":"{\"signature\":\"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\\\",\\\"protectedHeader\\\":\\\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ\"}","fundsInPrepareAmount":"","fundsInPrepareTransferId":"","homeTransactionId":"123ABC","hubEmail":"some.email@gmail.com","hub_operator":"NOT_APPLICABLE","ilpPacket":"AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA","invalidFulfillment":"_3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----","invalidToIdType":"ACCOUNT_ID","invalidToIdValue":"27713803099","mobileSimPayeeFsp":"greenbankfsp","mobileSimPayerFsp":"pinkbankfsp","note":"test","payeeIdType":"MSISDN","payeeIdentifier":"17039811902","payeefsp":"payeefsp","payeefspEmail":"some.email@gmail.com","payerIdType":"MSISDN","payerIdentifier":"17039811901","payerfsp":"testingtoolkitdfsp","payerfspEmail":"some.email@gmail.com","payerfspSettlementAccountBalanceAfterFundsIn":"","payerfspSettlementAccountBalanceBeforeFundsIn":"","payerfspSettlementAccountId":"","receiverMSISDN":"27713803912","testfsp1Email":"some.email@gmail.com","testfsp1IdType":"MSISDN","testfsp1Identifier":"17039811903","testfsp1MSISDN":"17039811903","testfsp2Email":"some.email@gmail.com","testfsp2IdType":"MSISDN","testfsp2Identifier":"17039811904","testfsp2MSISDN":"17039811904","toFspId":"payeefsp","toIdType":"MSISDN","toIdValue":"27713803912","toIdValueDelete":"27713803913","validCondition":"GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM","validCondition2":"kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms","validFulfillment":"UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA","validIlpPacket2":"AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA"}}
---
# Source: mojaloop/charts/quoting-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-quoting-service-config
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.1.0
data:
  default.json: "\n{\n  \"HOSTNAME\": \"http://quoting-service.local\",\n  \"LISTEN_ADDRESS\": \"0.0.0.0\",\n  \"PORT\": 3002,\n  \"SWITCH_ENDPOINT\": \"http://mojaloop1-centralledger-service:80\",\n  \"AMOUNT\": {\n    \"PRECISION\": 18,\n    \"SCALE\": 4\n  },\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mysql-cl\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"password\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"SIMPLE_ROUTING_MODE\": true,\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": true,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  },\n  \"API_DOCUMENTATION_ENDPOINTS\": true\n}\n"
  rules.json: "[]"
---
# Source: mojaloop/charts/quoting-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-quoting-service-sidecar
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.1.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"quoting-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/simulator/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-simulator-config
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.1
data:
  LOG_LEVEL: "info"
  PARTIES_ENDPOINT: http://mojaloop1-account-lookup-service
  QUOTES_ENDPOINT: http://mojaloop1-quoting-service
  TRANSFERS_ENDPOINT: http://mojaloop1-ml-api-adapter-service
  BULK_TRANSFERS_ENDPOINT: http://mojaloop1-bulk-api-adapter-service
  TRANSACTION_REQUESTS_ENDPOINT: http://mojaloop1-transaction-requests-service
  TRANSFERS_FULFIL_RESPONSE_DISABLED: "false"
  TRANSFERS_FULFILMENT: "XoSz1cL0tljJSCp_VtIYmPNw-zFUgGfbUqf69AagUzY"
  TRANSFERS_CONDITION: "HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks"
  TRANSFERS_ILPPACKET: "AQAAAAAAAADIEHByaXZhdGUucGF5ZWVmc3CCAiB7InRyYW5zYWN0aW9uSWQiOiIyZGY3NzRlMi1mMWRiLTRmZjctYTQ5NS0yZGRkMzdhZjdjMmMiLCJxdW90ZUlkIjoiMDNhNjA1NTAtNmYyZi00NTU2LThlMDQtMDcwM2UzOWI4N2ZmIiwicGF5ZWUiOnsicGFydHlJZEluZm8iOnsicGFydHlJZFR5cGUiOiJNU0lTRE4iLCJwYXJ0eUlkZW50aWZpZXIiOiIyNzcxMzgwMzkxMyIsImZzcElkIjoicGF5ZWVmc3AifSwicGVyc29uYWxJbmZvIjp7ImNvbXBsZXhOYW1lIjp7fX19LCJwYXllciI6eyJwYXJ0eUlkSW5mbyI6eyJwYXJ0eUlkVHlwZSI6Ik1TSVNETiIsInBhcnR5SWRlbnRpZmllciI6IjI3NzEzODAzOTExIiwiZnNwSWQiOiJwYXllcmZzcCJ9LCJwZXJzb25hbEluZm8iOnsiY29tcGxleE5hbWUiOnt9fX0sImFtb3VudCI6eyJjdXJyZW5jeSI6IlVTRCIsImFtb3VudCI6IjIwMCJ9LCJ0cmFuc2FjdGlvblR5cGUiOnsic2NlbmFyaW8iOiJERVBPU0lUIiwic3ViU2NlbmFyaW8iOiJERVBPU0lUIiwiaW5pdGlhdG9yIjoiUEFZRVIiLCJpbml0aWF0b3JUeXBlIjoiQ09OU1VNRVIiLCJyZWZ1bmRJbmZvIjp7fX19"
  MOCK_JWS_SIGNATURE: "abcJjvNrkyK2KBieDUbGfhaBUn75aDUATNF4joqA8OLs4QgSD7i6EO8BIdy6Crph3LnXnTM20Ai1Z6nt0zliS_qPPLU9_vi6qLb15FOkl64DQs9hnfoGeo2tcjZJ88gm19uLY_s27AJqC1GH1B8E2emLrwQMDMikwQcYvXoyLrL7LL3CjaLMKdzR7KTcQi1tCK4sNg0noIQLpV3eA61kess"
  METRICS_DISABLED: "false"
  METRICS_PREFIX: "moja_"
  METRICS_TIMEOUT: "5000"
  METRICS_SERVICENAME: simulator
---
# Source: mojaloop/charts/transaction-requests-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-transaction-requests-service-config
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.1
data:
  default.json: "{\n  \"PORT\": 4000,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"SWITCH_ENDPOINT\": \"http://mojaloop1-centralledger-service:80\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": true,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n        \"serviceName\": \"transaction-requests\"\n        }\n      }\n    }\n  }\n}"
---
# Source: mojaloop/charts/transaction-requests-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop1-transaction-requests-service-sidecar
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.1
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"transaction-requests-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop1-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-11.1.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-admin
      protocol: TCP
      name: http-admin
  selector:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.1.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-api
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/svc-standalone.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-cep-mongodb
  labels:
    app: cep-mongodb
    chart: mongodb-7.8.10
    release: "mojaloop1"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
  selector:
    app: cep-mongodb
    release: "mojaloop1"
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.1
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-zookeeper-headless
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: mojaloop1
    heritage: Helm
spec:
  clusterIP: None
  ports:
    - name: client
      port: 2181
      targetPort: client
      protocol: TCP
    - name: election
      port: 3888
      targetPort: election
      protocol: TCP
    - name: server
      port: 2888
      targetPort: server
      protocol: TCP
  selector:
    app: zookeeper
    release: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: mojaloop1
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: client
      port: 2181
      protocol: TCP
      targetPort: client
  selector:
    app: zookeeper
    release: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/service-brokers.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-kafka
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop1
spec:
  ports:
  - name: broker
    port: 9092
    targetPort: kafka
  selector:
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-kafka-headless
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop1
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - name: broker
    port: 9092
  clusterIP: None
  selector:
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-settlementwindow/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-centralsettlement-handler-settlementwindow
  labels:
    app.kubernetes.io/name: centralsettlement-handler-settlementwindow
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-settlementwindow-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement-handler-settlementwindow
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/finance-portal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.1
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: backend
      protocol: TCP
      name: http-finance-portal-backend
    - port: 80
      targetPort: frontend
      protocol: TCP
      name: http-finance-portal-ui
  selector:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.1
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: 
  selector:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.1
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: 
  selector:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/quoting-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.1.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3002
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.1
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: "http"
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/transaction-requests-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop1-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.1
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 4000
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop1
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-11.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: account-lookup-service-admin
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: account-lookup-service-admin
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 11.1.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: account-lookup-service-admin-11.1.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until mysql -h mysql-als -P 3306 -u account_lookup --password=password  account_lookup   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
        - name: run-migration
          image: mojaloop/account-lookup-service:v11.2.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - npm run migrate
          volumeMounts:
            - name: mojaloop1-account-lookup-service-admin-config-volume
              mountPath: /opt/account-lookup-service/config
      containers:
        - name: account-lookup-service-admin
          image: mojaloop/account-lookup-service:v11.2.1
          imagePullPolicy: IfNotPresent
          command: ["node", "src/index.js", "server", "--admin"]
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: 
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: 
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: 
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 
          ports:
            - name: http-admin
              containerPort: 4001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http-admin
          readinessProbe:
            httpGet:
              path: /health
              port: http-admin
          resources:
            {}
          volumeMounts:
          - name: mojaloop1-account-lookup-service-admin-config-volume
            mountPath: /opt/account-lookup-service/config
        - name: account-lookup-service-admin-sidecar
          image: "mojaloop/event-sidecar:v11.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4003
          readinessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-account-lookup-service-admin-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop1-account-lookup-service-admin-config-volume
          configMap:
            name: mojaloop1-account-lookup-service-admin-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: mojaloop1-account-lookup-service-admin-sidecar-volume
          configMap:
            name: mojaloop1-account-lookup-service-admin-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: account-lookup-service
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: account-lookup-service
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 11.1.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: account-lookup-service-11.1.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until mysql -h mysql-als -P 3306 -u account_lookup --password=password  account_lookup   -e 'select * from oracleEndpoint;' ; do echo waiting for MySQL; sleep 2; done;"
      containers:
        - name: account-lookup-service
          image: "mojaloop/account-lookup-service:v11.2.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/index.js", "server", "--api"]
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: 
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: 
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: 
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 
          ports:
            - name: http-api
              containerPort: 4002
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http-api
          readinessProbe:
            httpGet:
              path: /health
              port: http-api
          resources:
            {}
          volumeMounts:
          - name: mojaloop1-account-lookup-service-config-volume
            mountPath: /opt/account-lookup-service/config
          - name: jws-signing-key
            mountPath: /opt/account-lookup-service/secrets
        - name: account-lookup-service-sidecar
          image: "mojaloop/event-sidecar:v11.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4003
          readinessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-account-lookup-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop1-account-lookup-service-config-volume
          configMap:
            name: mojaloop1-account-lookup-service-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: jws-signing-key
          secret:
            secretName: mojaloop1-account-lookup-service-jws-signing-key
        - name: mojaloop1-account-lookup-service-sidecar-volume
          configMap:
            name: mojaloop1-account-lookup-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/deployment-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-cep-mongodb
  labels:
    app: cep-mongodb
    chart: mongodb-7.8.10
    release: "mojaloop1"
    heritage: "Helm"
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: cep-mongodb
      release: "mojaloop1"
  template:
    metadata:
      labels:
        app: cep-mongodb
        release: "mojaloop1"
        chart: mongodb-7.8.10
    spec:
      securityContext:
        fsGroup: 1001      
      initContainers:
      containers:
      - name: mojaloop1-cep-mongodb
        image: docker.io/bitnami/mongodb:4.0.3
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mojaloop1-cep-mongodb
              key: mongodb-password
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mojaloop1-cep-mongodb
              key: mongodb-root-password
        - name: MONGODB_USERNAME
          value: "mojaloop"
        - name: MONGODB_SYSTEM_LOG_VERBOSITY
          value: "0"
        - name: MONGODB_DISABLE_SYSTEM_LOG
          value: "no"
        - name: MONGODB_DATABASE
          value: "mojaloop"
        - name: MONGODB_ENABLE_IPV6
          value: "yes"
        - name: MONGODB_ENABLE_DIRECTORY_PER_DB
          value: "no"
        ports:
        - name: mongodb
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
          subPath: 
        resources:
          {}
      volumes:
      - name: data
        emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centraleventprocessor
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centraleventprocessor
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 11.0.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centraleventprocessor-11.0.1
    spec:
      initContainers:
        - name: wait-for-mongodb
          image: bitnami/mongodb:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "mongo mongodb://mojaloop1-cep-mongodb:27017 --eval \"db.adminCommand('ping')\""
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:

      containers:
        - name: centraleventprocessor
          image: "mojaloop/central-event-processor:v11.0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 3080
            initialDelaySeconds: 30
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3080
            initialDelaySeconds: 30
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-centraleventprocessor-config-volume
              mountPath: /opt/central-event-processor/config
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
      volumes:
        - name: mojaloop1-centraleventprocessor-config-volume
          configMap:
            name: mojaloop1-centraleventprocessor-config
            items:
              - key: default.json
                path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-admin-transfer
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-admin-transfer
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-admin-transfer-12.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-admin-transfer
          image: "mojaloop/central-ledger:v13.0.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--admin"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop1-centralledger-handler-admin-transfer-config-volume
            mountPath: /opt/central-ledger/config
      volumes:
        - name: mojaloop1-centralledger-handler-admin-transfer-config-volume
          configMap:
            name: mojaloop1-centralledger-handler-admin-transfer-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-timeout
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-timeout
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-timeout-12.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-timeout
          image: "mojaloop/central-ledger:v13.0.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--timeout"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop1-centralledger-handler-timeout-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-timeout-sidecar
          image: "mojaloop/event-sidecar:v11.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-centralledger-handler-timeout-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop1-centralledger-handler-timeout-config-volume
          configMap:
            name: mojaloop1-centralledger-handler-timeout-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: mojaloop1-centralledger-handler-timeout-sidecar-volume
          configMap:
            name: mojaloop1-centralledger-handler-timeout-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-fulfil
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-fulfil
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-fulfil-12.0.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-fulfil
          image: "mojaloop/central-ledger:v13.0.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--fulfil"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop1-centralledger-handler-transfer-fulfil-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-transfer-fulfil-sidecar
          image: "mojaloop/event-sidecar:v11.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-centralledger-handler-transfer-fulfil-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop1-centralledger-handler-transfer-fulfil-config-volume
          configMap:
            name: mojaloop1-centralledger-handler-transfer-fulfil-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: mojaloop1-centralledger-handler-transfer-fulfil-sidecar-volume
          configMap:
            name: mojaloop1-centralledger-handler-transfer-fulfil-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-get
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-get
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-get-12.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-get
          image: "mojaloop/central-ledger:v13.0.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--get"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop1-centralledger-handler-transfer-get-config-volume
            mountPath: /opt/central-ledger/config
      volumes:
        - name: mojaloop1-centralledger-handler-transfer-get-config-volume
          configMap:
            name: mojaloop1-centralledger-handler-transfer-get-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-position
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-position
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-position-12.0.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-position
          image: "mojaloop/central-ledger:v13.0.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--position"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop1-centralledger-handler-transfer-position-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-transfer-position-sidecar
          image: "mojaloop/event-sidecar:v11.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-centralledger-handler-transfer-position-sidecar-volum
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop1-centralledger-handler-transfer-position-config-volume
          configMap:
            name: mojaloop1-centralledger-handler-transfer-position-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: mojaloop1-centralledger-handler-transfer-position-sidecar-volum
          configMap:
            name: mojaloop1-centralledger-handler-transfer-position-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-prepare
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-prepare
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-prepare-12.0.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-prepare
          image: "mojaloop/central-ledger:v13.0.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--prepare"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop1-centralledger-handler-transfer-prepare-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-transfer-prepare-sidecar
          image: "mojaloop/event-sidecar:v11.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-centralledger-handler-transfer-prepare-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop1-centralledger-handler-transfer-prepare-config-volume
          configMap:
            name: mojaloop1-centralledger-handler-transfer-prepare-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: mojaloop1-centralledger-handler-transfer-prepare-sidecar-volume
          configMap:
            name: mojaloop1-centralledger-handler-transfer-prepare-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-service
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-service
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-service-12.0.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
        - name: run-migration
          image: mojaloop/central-ledger:v13.1.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - npm run migrate
          env:
            - name: "CLEDG_MIGRATIONS__RUN_DATA_MIGRATIONS"
              value: "true"
          volumeMounts:
            - name: mojaloop1-centralledger-service-config-volume
              mountPath: /opt/central-ledger/config
      containers:
        - name: centralledger-service
          image: mojaloop/central-ledger:v13.1.1
          imagePullPolicy: IfNotPresent
          command: ["node", "src/api/index.js"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop1-centralledger-service-config-volume
            mountPath: /opt/central-ledger/config
      volumes:
        - name: mojaloop1-centralledger-service-config-volume
          configMap:
            name: mojaloop1-centralledger-service-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/deployment-kafka-exporter.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-kafka-exporter
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-monitor
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka-monitor
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9308"
      labels:
        helm.sh/chart: kafka-0.21.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: kafka-monitor
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: mojaloop1
    spec:
      containers:
      - image: "danielqsj/kafka-exporter:v1.0.1"
        name: kafka-exporter
        args:
          - --kafka.server=mojaloop1-kafka:9092
          - --web.listen-address=:9308
        ports:
          - containerPort: 9308
        resources:
          {}
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-settlementwindow/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-centralsettlement-handler-settlementwindow
  labels:
    app.kubernetes.io/name: centralsettlement-handler-settlementwindow
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-settlementwindow-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement-handler-settlementwindow
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement-handler-settlementwindow
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-handler-settlementwindow-12.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralsettlement-handler-settlementwindow
          image: "mojaloop/central-settlement:v12.0.3"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "h", "--settlementwindow"]
          ports:
            - name: http-api
              containerPort: 3007
          readinessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          env: 
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
## UNCOMMENT AFTER EVENTSDK IS IMPLEMENTED
            #
            # - name: EVENT_SDK_VENDOR_PREFIX
            #   value: 
            # - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
            #   value: 
            # - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
            #   value: 
            # - name: EVENT_SDK_TRACEID_PER_VENDOR
            #   value: 
            # - name: LIB_RESOURCE_VERSIONS
            #   value: 
          volumeMounts:
          - name: mojaloop1-centralsettlement-handler-settlementwindow-cfg-vol
            mountPath: /opt/central-settlement/config
          - name: mojaloop1-centralsettlement-handler-settlementwindow-rules-vol
            mountPath: "/opt/central-settlement/scripts/transferSettlementTemp"
## UNCOMMENT AFTER EVENTSDK IS IMPLEMENTED
        #

      volumes:
        - name: mojaloop1-centralsettlement-handler-settlementwindow-cfg-vol
          configMap:
            name: mojaloop1-centralsettlement-handler-settlementwindow-config
            items:
            - key: default.json
              path: default.json
    #            - key: knexfile.js
    #              path: knexfile.js
    ## UNCOMMENT AFTER EVENTSDK IS IMPLEMENTED
        #
        - name: mojaloop1-centralsettlement-handler-settlementwindow-rules-vol
          emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement-service
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement-service
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-service-12.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralsettlement-service
          image: "mojaloop/central-settlement:v12.0.3"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/api/index.js"]
          ports:
            - name: http-api
              containerPort: 3007
          readinessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          env: 
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
## UNCOMMENT AFTER EVENTSDK IS IMPLEMENTED
            #
            # - name: EVENT_SDK_VENDOR_PREFIX
            #   value: 
            # - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
            #   value: 
            # - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
            #   value: 
            # - name: EVENT_SDK_TRACEID_PER_VENDOR
            #   value: 
            # - name: LIB_RESOURCE_VERSIONS
            #   value: 
          volumeMounts:
          - name: mojaloop1-centralsettlement-service-cfg-vol
            mountPath: /opt/central-settlement/config
          - name: mojaloop1-centralsettlement-service-rules-vol
            mountPath: "/opt/central-settlement/scripts/transferSettlementTemp"
## UNCOMMENT AFTER EVENTSDK IS IMPLEMENTED
        #

      volumes:
        - name: mojaloop1-centralsettlement-service-cfg-vol
          configMap:
            name: mojaloop1-centralsettlement-service-config
            items:
            - key: default.json
              path: default.json
    #            - key: knexfile.js
    #              path: knexfile.js
    ## UNCOMMENT AFTER EVENTSDK IS IMPLEMENTED
        #
        - name: mojaloop1-centralsettlement-service-rules-vol
          emptyDir: {}
---
# Source: mojaloop/charts/finance-portal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.1
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: finance-portal
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: finance-portal
        app.kubernetes.io/instance: mojaloop1
    spec:
      initContainers:
      containers:
      - name: backend
        image: "mojaloop/finance-portal-backend-service:v10.5.1"
        imagePullPolicy: IfNotPresent
        ports:
        - name: backend
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: backend
        readinessProbe:
          httpGet:
            path: /
            port: backend
        envFrom:
        - configMapRef:
            name: mojaloop1-finance-portal
        - secretRef:
            name: mojaloop1-finance-portal
        volumeMounts:
          - name: mojaloop1-finance-portal-secrets-volume
            mountPath: /opt/finance-portal-backend-service/secrets
            readOnly: true
        resources:
      - name: frontend
        image: "mojaloop/finance-portal-ui:v10.4.3"
        imagePullPolicy: IfNotPresent
        ports:
        - name: frontend
          containerPort: 80
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: frontend
        readinessProbe:
          httpGet:
            path: /
            port: frontend
        envFrom:
        - configMapRef:
            name: mojaloop1-finance-portal
        - secretRef:
            name: mojaloop1-finance-portal
      ## Pod scheduling preferences.
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      affinity: {}

      ## Node labels for pod assignment
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
      nodeSelector: {}

      ## Set toleration for scheduler
      ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      tolerations: []
      volumes:
        - name: mojaloop1-finance-portal-secrets-volume
          secret:
            secretName: mojaloop1-finance-portal-certs
            defaultMode: 511
      imagePullSecrets:
      - name: pull-secrets
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-api-adapter-handler-notification
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-api-adapter-handler-notification
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 11.0.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-api-adapter-handler-notification-11.0.1
      annotations:
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: ml-api-adapter-handler-notification
          image: "mojaloop/ml-api-adapter:v11.1.4"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--notification"]
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-ml-api-adapter-handler-notification-config-volume
              mountPath: /opt/ml-api-adapter/config
            - name: jws-signing-key
              mountPath: /opt/ml-api-adapter/secrets
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
        - name: ml-api-adapter-handler-notification-sidecar
          image: "mojaloop/event-sidecar:v11.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-ml-api-adapter-handler-notification-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: jws-signing-key
          secret:
            secretName: mojaloop1-ml-api-adapter-handler-notification-jws-signing-key
        - name: mojaloop1-ml-api-adapter-handler-notification-config-volume
          configMap:
            name: mojaloop1-ml-api-adapter-handler-notification-config
            items:
              - key: default.json
                path: default.json
        - name: mojaloop1-ml-api-adapter-handler-notification-sidecar-volume
          configMap:
            name: mojaloop1-ml-api-adapter-handler-notification-sidecar
            items:
              - key: default.json
                path: default.json
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-api-adapter-service
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-api-adapter-service
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 11.0.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-api-adapter-service-11.0.1
      annotations:
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop1-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: ml-api-adapter-service
          image: "mojaloop/ml-api-adapter:v11.1.4"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/api/index.js"]
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-ml-api-adapter-service-config-volume
              mountPath: /opt/ml-api-adapter/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
        - name: ml-api-adapter-service-sidecar
          image: "mojaloop/event-sidecar:v11.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-ml-api-adapter-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop1-ml-api-adapter-service-config-volume
          configMap:
            name: mojaloop1-ml-api-adapter-service-config
            items:
            - key: default.json
              path: default.json
        - name: mojaloop1-ml-api-adapter-service-sidecar-volume
          configMap:
            name: mojaloop1-ml-api-adapter-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/quoting-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quoting-service
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: quoting-service
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 11.1.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: quoting-service-11.1.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mysql-cl -P 3306 -u central_ledger --password=password  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
      containers:
        - name: quoting-service
          image: "mojaloop/quoting-service:v11.2.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-api
              containerPort: 3002
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: 
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0

          volumeMounts:
          - name: mojaloop1-quoting-service-config-volume
            mountPath: /opt/quoting-service/config
          - name: jws-signing-key
            mountPath: /opt/quoting-service/secrets
        - name: quoting-service-sidecar
          image: "mojaloop/event-sidecar:v11.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-quoting-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: info
      volumes:
        - name: jws-signing-key
          secret:
            secretName: mojaloop1-quoting-service-jws-signing-key
        - name: mojaloop1-quoting-service-config-volume
          configMap:
            name: mojaloop1-quoting-service-config
            items:
            - key: default.json
              path: default.json
#            - key: knexfile.js
#              path: knexfile.js
            - key: rules.json
              path: rules.json
        - name: mojaloop1-quoting-service-sidecar-volume
          configMap:
            name: mojaloop1-quoting-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: simulator
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: simulator
        app.kubernetes.io/instance: mojaloop1
      annotations:
        checksum/config: 835930602e96f37f57adceab6eb3d563ccacb5ba95b5526a29a48e54d513a959
        prometheus.io/port: "8444"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: simulator
          image: "mojaloop/simulator:v11.1.0"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8444
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 8444
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 8444
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: LOG_LEVEL
            - name: PARTIES_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: PARTIES_ENDPOINT
            - name: QUOTES_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: QUOTES_ENDPOINT
            - name: TRANSFERS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: TRANSFERS_ENDPOINT
            - name: BULK_TRANSFERS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: BULK_TRANSFERS_ENDPOINT
            - name: TRANSACTION_REQUESTS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: TRANSACTION_REQUESTS_ENDPOINT
            - name: TRANSFERS_FULFIL_RESPONSE_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: TRANSFERS_FULFIL_RESPONSE_DISABLED
            - name: TRANSFERS_FULFILMENT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: TRANSFERS_FULFILMENT
            - name: TRANSFERS_CONDITION
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: TRANSFERS_CONDITION
            - name: TRANSFERS_ILPPACKET
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: TRANSFERS_ILPPACKET
            - name: MOCK_JWS_SIGNATURE
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: MOCK_JWS_SIGNATURE
            - name: METRICS_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: METRICS_DISABLED
            - name: METRICS_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: METRICS_PREFIX
            - name: METRICS_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: METRICS_TIMEOUT
            - name: METRICS_SERVICENAME
              valueFrom:
                configMapKeyRef:
                  name: mojaloop1-simulator-config
                  key: METRICS_SERVICENAME
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojasim"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "false"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: log,trace
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
---
# Source: mojaloop/charts/transaction-requests-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop1-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: transaction-requests-service
      app.kubernetes.io/instance: mojaloop1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: transaction-requests-service
        app.kubernetes.io/instance: mojaloop1
        app.kubernetes.io/version: 11.0.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: transaction-requests-service-11.0.1
    spec:
      initContainers: []
      containers:
        - name: transaction-requests-service
          image: "mojaloop/transaction-requests-service:v11.1.4"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/index.js", "api"]
          ports:
            - name: http-api
              containerPort: 4000
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: 
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: 
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: 
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 
          volumeMounts:
            - name: mojaloop1-transaction-requests-service-config-volume
              mountPath: /opt/transaction-requests-service/config
        - name: transaction-requests-service-sidecar
          image: "mojaloop/event-sidecar:v11.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop1-transaction-requests-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop1-transaction-requests-service-config-volume
          configMap:
            name: mojaloop1-transaction-requests-service-config
            items:
              - key: default.json
                path: default.json
        - name: mojaloop1-transaction-requests-service-sidecar-volume
          configMap:
            name: mojaloop1-transaction-requests-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mojaloop1-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: mojaloop1
    heritage: Helm
    component: server
spec:
  serviceName: mojaloop1-zookeeper-headless
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
      release: mojaloop1
      component: server
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zookeeper
        release: mojaloop1
        component: server
    spec:
      terminationGracePeriodSeconds: 1800
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:

        - name: zookeeper
          image: "zookeeper:3.5.5"
          imagePullPolicy: IfNotPresent
          command: 
             - "/bin/bash"
             - "-xec"
             - "/config-scripts/run"
          ports:
            - name: client
              containerPort: 2181
              protocol: TCP
            - name: election
              containerPort: 3888
              protocol: TCP
            - name: server
              containerPort: 2888
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - sh
                - /config-scripts/ok
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - sh
                - /config-scripts/ready
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          env:
            - name: ZK_REPLICAS
              value: "1"
            - name: JMXAUTH
              value: "false"
            - name: JMXDISABLE
              value: "false"
            - name: JMXPORT
              value: "1099"
            - name: JMXSSL
              value: "false"
            - name: ZK_HEAP_SIZE
              value: "1G"
            - name: ZK_SYNC_LIMIT
              value: "10"
            - name: ZK_TICK_TIME
              value: "2000"
            - name: ZOO_AUTOPURGE_PURGEINTERVAL
              value: "0"
            - name: ZOO_AUTOPURGE_SNAPRETAINCOUNT
              value: "3"
            - name: ZOO_INIT_LIMIT
              value: "5"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOO_PORT
              value: "2181"
            - name: ZOO_STANDALONE_ENABLED
              value: "false"
            - name: ZOO_TICK_TIME
              value: "2000"
          resources:
            {}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config-scripts
      volumes:
        - name: config
          configMap:
            name: mojaloop1-zookeeper
            defaultMode: 0555
        - name: data
          emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mojaloop1-kafka
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop1
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka-broker
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: mojaloop1
  serviceName: mojaloop1-kafka-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: OnDelete
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
      labels:
        helm.sh/chart: kafka-0.21.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: kafka-broker
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: mojaloop1
    spec:
      containers:
      - name: metrics
        image: "solsson/kafka-prometheus-jmx-exporter@sha256:a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8"
        command:
        - sh
        - -exc
        - |
          trap "exit 0" TERM; \
          while :; do \
          java \
          -XX:+UnlockExperimentalVMOptions \
          -XX:+UseCGroupMemoryLimitForHeap \
          -XX:MaxRAMFraction=1 \
          -XshowSettings:vm \
          -jar \
          jmx_prometheus_httpserver.jar \
          "5556" \
          /etc/jmx-kafka/jmx-kafka-prometheus.yml & \
          wait $! || sleep 3; \
          done
        ports:
        - containerPort: 5556
          name: prometheus
        resources:
          {}
        volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-kafka
      - name: kafka-broker
        image: "confluentinc/cp-kafka:5.0.1"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          exec:
            command:
              - sh
              - -ec
              - /usr/bin/jps | /bin/grep -q SupportedKafka
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: kafka
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 5555
          name: jmx
        resources:
          {}
        env:
        - name: JMX_PORT
          value: "5555"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_HEAP_OPTS
          value: -Xmx1G -Xms1G
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "mojaloop1-zookeeper:2181"
        - name: KAFKA_LOG_DIRS
          value: "/opt/kafka/data/logs"
        - name: "KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE"
          value: "false"
        - name: "KAFKA_DEFAULT_REPLICATION_FACTOR"
          value: "1"
        - name: "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR"
          value: "1"
        - name: KAFKA_JMX_PORT
          value: "5555"
        # This is required because the Downward API does not yet support identification of
        # pod numbering in statefulsets. Thus, we are required to specify a command which
        # allows us to extract the pod ID for usage as the Kafka Broker ID.
        # See: https://github.com/kubernetes/kubernetes/issues/31218
        command:
        - sh
        - -exc
        - |
          unset KAFKA_PORT && \
          export KAFKA_BROKER_ID=${POD_NAME##*-} && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_IP}:9092 && \
          exec /etc/confluent/docker/run
        volumeMounts:
        - name: datadir
          mountPath: "/opt/kafka/data"
      volumes:
      - name: datadir
        emptyDir: {}
      - name: jmx-config
        configMap:
          name: mojaloop1-kafka-metrics
      terminationGracePeriodSeconds: 60
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-11.1.0
spec:
  rules:
    - host: "account-lookup-service-admin.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-account-lookup-service-admin
              servicePort: http-admin
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.1.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.1.0
spec:
  rules:
    - host: "account-lookup-service.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-account-lookup-service
              servicePort: http-api
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.1
spec:
  rules:
    - host: "central-event-processor.local"
      http:
        paths:
          - path: 
            backend:
              serviceName: mojaloop1-centraleventprocessor
              servicePort: http
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-12.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-admin-transfer.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-centralledger-handler-admin-transfer
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-12.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-timeout.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-centralledger-handler-timeout
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-12.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-fulfil.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-centralledger-handler-transfer-fulfil
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-12.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-get.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-centralledger-handler-transfer-get
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-12.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-position.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-centralledger-handler-transfer-position
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-12.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-prepare.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-centralledger-handler-transfer-prepare
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-12.0.0
  annotations:
spec:
  rules:
    - host: central-ledger.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-centralledger-service
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-12.0.0
  annotations:
spec:
  rules:
    - host: central-settlement-service.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-centralsettlement-service
              servicePort: 80
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.1
  annotations:
spec:
  rules:
    - host: ml-api-adapter-notification.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-ml-api-adapter-handler-notification
              servicePort: 80
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop1-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop1
    app.kubernetes.io/version: 11.0.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.1
  annotations:
spec:
  rules:
    - host: ml-api-adapter.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop1-ml-api-adapter-service
              servicePort: 80

NOTES:
Thank you for installing mojaloop.

Your release is named: mojaloop1.

To learn more about Mojaloop: https://mojaloop.io/
To learn more about Mojaloop deployments: https://docs.mojaloop.io/documentation/deployment-guide
To learn more about this release: https://github.com/mojaloop/helm/releases/tag/v12.0.0

To learn more about this deployment, try:

  $ helm status mojaloop1

Use the following command to execute Test cases:

  $ helm -n ml-app test mojaloop1

Use the following command to execute Test cases and print logs to console:

  $ helm -n ml-app test mojaloop1 --logs

View Test logs with the following commands:
  $ kubectl -n ml-app logs pod/mojaloop1-ml-ttk-test-setup

Copyright © 2020 Mojaloop Foundation
