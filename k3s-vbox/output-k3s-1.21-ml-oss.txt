POD LOGS: ml-ml-ttk-test-setup
Downloading the test collection...
Connecting to github.com (52.64.108.95:443)
Connecting to codeload.github.com (54.79.46.55:443)
saving to 'downloaded-test-collections.zip'
downloaded-test-coll 100% |********************************|  284k  0:00:00 ETA
'downloaded-test-collections.zip' saved
Archive:  downloaded-test-collections.zip
   creating: testing-toolkit-test-cases-13.0.1/
  inflating: testing-toolkit-test-cases-13.0.1/.gitignore
  inflating: testing-toolkit-test-cases-13.0.1/LICENSE.md
  inflating: testing-toolkit-test-cases-13.0.1/README.md
   creating: testing-toolkit-test-cases-13.0.1/collections/
   creating: testing-toolkit-test-cases-13.0.1/collections/dfsp/
   creating: testing-toolkit-test-cases-13.0.1/collections/dfsp/additional-tests/
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/additional-tests/p2p_scheme_adapter_websocket.json
   creating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/get_quotes_transfers.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/negative_scenarios/
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/negative_scenarios/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/negative_scenarios/parties_negative.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/negative_scenarios/quotes_negative.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/negative_scenarios/transfers_negative.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/p2p_happy_path.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/dfsp/provisioning/
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/provisioning/provision_mojaloop_simulator.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/Quotes/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/Quotes/quotes-negative-scenarios.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/SettlementWindows/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/SettlementWindows/settlementadmin.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/admin-api-tests/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/admin-api-tests/Admintests-20201221.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Test for 4 decimal points #949.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Test for Bugfix #1378 - extension list missing.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Test for Bugfix #742 - Error code check.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Test for Bugfix #849 - missing ID for transfers and quotes.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Tests for Bugfix #1009 - ML Adapter and ALS service health should include broker status.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Tests for Bugfix #981 - Fix 500 http code instead of 400.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Tests for Bugfix #990 and #1016 - Quotes.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Tests for Bugfix #998 - Quoting service not using most recent endpoint.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/other-bug-fixes.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/Active_Inactive_participants/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/Active_Inactive_participants/active_and_inactive_participant.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/Active_Inactive_participants/active_and_inactive_participants_accounts.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/Active_Inactive_participants/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/block_transfer.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/transfers/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/transfers/fulfill_commit.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/transfers/fulfill_reject.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/transfers/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/transfers/original_transfer_at_committed.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_in/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_in/funds_in_ttk.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/Reserve&Abort/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/Reserve&Abort/funds_out_abort.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/Reserve&Commit/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/Reserve&Commit/funds_out_commit.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/get_transfers.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/p2p_money_transfer/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/p2p_money_transfer/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/p2p_money_transfer/p2p_happy_path.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/p2p_money_transfer/p2p_happy_path_subid.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/post_scenarios/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/post_scenarios/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/post_scenarios/positive.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/post_scenarios/reserve_notification_positive_testfsp1_testfsp2.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/fulfil-reserved-v1.0.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/payee_abort_v1.1.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/payee_invalid_fulfillment.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/payee_invalid_timestamp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/p2p_on_us_transfers/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/p2p_on_us_transfers/p2p_money_transfer_on_us.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/quoting_service/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/quoting_service/quoting_service.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/settlement_management/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/settlement_management/Settlement-management-primary-currency-test.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/settlement_management/Settlement-management-second-currency-test.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/settlement_management/mixed_settlement_model.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/Error-framework-authorizations.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/authorizations.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/error-framework.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/received State.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/rejected State.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/transaction_request_service_health.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path_cgs/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path_cgs/settlement_management/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path_cgs/settlement_management/ttk-dev2-new-cgs-settlement.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/bulk_transfers/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/bulk_transfers/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/bulk_transfers/negative_scenarios.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/bulk_transfers/positive_scenarios.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/new_changes/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/new_changes/get_parties_subid.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/v1.1_changes/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/v1.1_changes/patch_notification.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopHub_Setup/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopHub_Setup/hub.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/noresponsepayeefsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/payeefsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/payerfsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/testfsp1.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/testfsp2.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/testingtoolkitdfsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/ttkpayeefsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Adjust all participants limits/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Adjust all participants limits/adjust ALL participants limits  NET DEBIT CAP (parametrized).json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-noresponsepayeefsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-payeefsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-payerfsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-testfsp1.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-testfsp2.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-testfsp3.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-testfsp4.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Hub accounts/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Hub accounts/CGS-onboarding-hub.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Settlement modesl/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Settlement modesl/CGS-onboarding-settlementmodel.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/add users to new sims/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/add users to new sims/Add Users to new Sims ; ALS registration.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/oracle onboarding/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/oracle onboarding/Oracle Onboarding(MojaloopHub_Setup).json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service-admin/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service-admin/Create Oracle Endpoints - [seq-acct-lookup-admin-post-oracle-7.3.2].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service-admin/Delete Oracle Endpoints - [seq-acct-lookup-admin-delete-oracle-7.3.4].json.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service-admin/Get Oracles - [seq-acct-lookup-admin-get-oracle-7.3.1].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service-admin/Update Oracle Endpoints - [seq-acct-lookup-admin-put-oracle-7.3.3].json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/Create Batch Participants - [seq-acct-lookup-post-participants-batch-7.1.1].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/Create Participant - [seq-acct-lookup-post-participant-7.1.3].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/Delete Participant Details - [seq-acct-lookup-del-participants-7.1.2].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/Get Participant Details - [seq-acct-lookup-get-participants-7.1.0].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/Get Party Details - [seq-acct-lookup-get-parties-7.2.0].json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/quoting-service/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/quoting-service/Quoting Service Sequences [seq-quote-1.0.0].json
   creating: testing-toolkit-test-cases-13.0.1/environments/
  inflating: testing-toolkit-test-cases-13.0.1/environments/hub.json
  inflating: testing-toolkit-test-cases-13.0.1/environments/hub_cgs.json
   creating: testing-toolkit-test-cases-13.0.1/scripts/
  inflating: testing-toolkit-test-cases-13.0.1/scripts/env-compare.js

> ml-testing-toolkit@13.0.2 cli /opt/mojaloop-testing-toolkit
> node src/cli_client/client.js "-c" "cli-default-config.json" "-e" "cli-testcase-environment.json" "-i" "tmp_test_cases/testing-toolkit-test-cases-13.0.1/collections/hub/provisioning" "-u" "http://ml-ml-testing-toolkit-backend:5050" "--report-format" "html" "--report-auto-filename-enable" "true" "--extra-summary-information=Test Suite:GP Tests,Environment:Development"

Listening on http://ml-ml-testing-toolkit-backend:5050 outboundProgress events...
[ 1 passed, 0 skipped, 0 failed of 212 ]
  Hub Account -> Add Hub Account-HUB_MULTILATERAL_SETTLEMENT
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 2 passed, 0 skipped, 0 failed of 212 ]
  Hub Account -> Add Hub Account-HUB_RECONCILIATION
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 3 passed, 0 skipped, 0 failed of 212 ]
  Hub Account -> Hub Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL
	[ SUCCESS ]	Status code is 201
[ 4 passed, 0 skipped, 0 failed of 212 ]
  Hub Account -> Hub Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL
	[ SUCCESS ]	Status code is 201
[ 5 passed, 0 skipped, 0 failed of 212 ]
  Hub Account -> Hub Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL
	[ SUCCESS ]	Status code is 201
[ 6 passed, 0 skipped, 0 failed of 212 ]
  Hub Account -> Add Hub Account-HUB_MULTILATERAL_SETTLEMENT Second Currency
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 7 passed, 0 skipped, 0 failed of 212 ]
  Hub Account -> Add Hub Account-HUB_RECONCILIATION Second Currency
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 8 passed, 0 skipped, 0 failed of 212 ]
  Settlement Models -> Create settlement model DEFERRED NET USD
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 9 passed, 0 skipped, 0 failed of 212 ]
  Settlement Models -> Create settlement model DEFAULT DEFERRED NET
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 10 passed, 0 skipped, 0 failed of 212 ]
  Oracle Onboarding -> Register MSISDN Oracle
	[ SUCCESS ]	status to be 201 or errorCode 2001 already exists
[ 11 passed, 0 skipped, 0 failed of 212 ]
  Oracle Onboarding -> Register BUSINESS Oracle
	[ SUCCESS ]	status to be 201 or errorCode 2001 already exists
[ 12 passed, 0 skipped, 0 failed of 212 ]
  Oracle Onboarding -> Register ALIAS Oracle
	[ SUCCESS ]	status to be 201 or errorCode 2001 already exists
[ 13 passed, 0 skipped, 0 failed of 212 ]
  payerfsp account -> Add payerfsp
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 14 passed, 0 skipped, 0 failed of 212 ]
  payerfsp account -> Add initial position and limits - payerfsp
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 15 passed, 0 skipped, 0 failed of 212 ]
  payerfsp account -> payerfsp Get Status Request before deposit
	[ SUCCESS ]	status to be 200
[ 16 passed, 0 skipped, 0 failed of 212 ]
  payerfsp account -> Deposit Funds in Settlement Account - payerfsp
	[ SUCCESS ]	status to be 202
[ 18 passed, 0 skipped, 0 failed of 212 ]
  payerfsp account -> payerfsp Get Status Request after deposit
	[ SUCCESS ]	status to be 200
	[ SUCCESS ]	payerfsp Settlement Account Balance After FundsIn should be equal to the balance before plus the transfer amount
[ 19 passed, 0 skipped, 0 failed of 212 ]
  payerfsp account -> Add payeefsp with different currency for default settlement case
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 20 passed, 0 skipped, 0 failed of 212 ]
  payerfsp account -> Add initial position and limits with different currency - payerfsp
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 21 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - AUTHORIZATIONS
	[ SUCCESS ]	Status code is 201
[ 22 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTICIPANT PUT
	[ SUCCESS ]	Status code is 201
[ 23 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTICIPANT PUT Error
	[ SUCCESS ]	Status code is 201
[ 24 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTICIPANT PUT Batch
	[ SUCCESS ]	Status code is 201
[ 25 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTICIPANT PUT Batch Error
	[ SUCCESS ]	Status code is 201
[ 26 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTIES GET
	[ SUCCESS ]	Status code is 201
[ 27 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTIES PUT
	[ SUCCESS ]	Status code is 201
[ 28 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTIES PUT Error
	[ SUCCESS ]	Status code is 201
[ 29 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - QUOTES
	[ SUCCESS ]	Status code is 201
[ 30 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - TXN REQUEST
	[ SUCCESS ]	Status code is 201
[ 31 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - TRANSFERS POST
	[ SUCCESS ]	Status code is 201
[ 32 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - TRANSFERS PUT
	[ SUCCESS ]	Status code is 201
[ 33 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - TRANSFERS ERROR
	[ SUCCESS ]	Status code is 201
[ 34 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - BULK-TRANSFER POST
	[ SUCCESS ]	Status code is 201
[ 35 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - BULK-TRANSFER PUT
	[ SUCCESS ]	Status code is 201
[ 36 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - BULK-TRANSFER ERROR
	[ SUCCESS ]	Status code is 201
[ 37 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTICIPANT SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 38 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTICIPANT SUB-ID PUT Error
	[ SUCCESS ]	Status code is 201
[ 39 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTICIPANT SUB-ID DELETE
	[ SUCCESS ]	Status code is 201
[ 40 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTIES SUB-ID GET
	[ SUCCESS ]	Status code is 201
[ 41 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTIES SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 42 passed, 0 skipped, 0 failed of 212 ]
  payerfsp callbacks -> Add payerfsp callback - PARTIES SUB-ID ERROR PUT
	[ SUCCESS ]	Status code is 201
[ 43 passed, 0 skipped, 0 failed of 212 ]
  payerfsp notification_emails -> Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL
	[ SUCCESS ]	Status code is 201
[ 44 passed, 0 skipped, 0 failed of 212 ]
  payerfsp notification_emails -> Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL
	[ SUCCESS ]	Status code is 201
[ 45 passed, 0 skipped, 0 failed of 212 ]
  payerfsp notification_emails -> Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL
	[ SUCCESS ]	Status code is 201
[ 46 passed, 0 skipped, 0 failed of 212 ]
  payerfsp add_users -> Add SubId User - payerIdType - payerIdentifier - 100
	[ SUCCESS ]	Status code is 202
[ 47 passed, 0 skipped, 0 failed of 212 ]
  payeefsp account -> Add payeefsp
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 48 passed, 0 skipped, 0 failed of 212 ]
  payeefsp account -> Add initial position and limits - payeefsp
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 49 passed, 0 skipped, 0 failed of 212 ]
  payeefsp account -> payeefsp Get Status Request before deposit
	[ SUCCESS ]	status to be 200
[ 50 passed, 0 skipped, 0 failed of 212 ]
  payeefsp account -> Deposit Funds in Settlement Account - payeefsp
	[ SUCCESS ]	status to be 202
[ 52 passed, 0 skipped, 0 failed of 212 ]
  payeefsp account -> payeefsp Get Status Request after deposit
	[ SUCCESS ]	status to be 200
	[ SUCCESS ]	payeefsp Settlement Account Balance After FundsIn should be equal to the balance before plus the transfer amount
[ 53 passed, 0 skipped, 0 failed of 212 ]
  payeefsp account -> Add payeefsp with different currency for default settlement case
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 54 passed, 0 skipped, 0 failed of 212 ]
  payeefsp account -> Add initial position and limits with different currency - payeefsp
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 55 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - AUTHORIZATIONS
	[ SUCCESS ]	Status code is 201
[ 56 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - PARTICIPANT PUT
	[ SUCCESS ]	Status code is 201
[ 57 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - PARTICIPANT PUT Error
	[ SUCCESS ]	Status code is 201
[ 58 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - PARTICIPANT PUT Batch
	[ SUCCESS ]	Status code is 201
[ 59 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - PARTICIPANT PUT Batch Error
	[ SUCCESS ]	Status code is 201
[ 60 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - PARTIES GET
	[ SUCCESS ]	Status code is 201
[ 61 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - PARTIES PUT
	[ SUCCESS ]	Status code is 201
[ 62 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - PARTIES PUT Error
	[ SUCCESS ]	Status code is 201
[ 63 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - QUOTES
	[ SUCCESS ]	Status code is 201
[ 64 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - TXN REQUEST
	[ SUCCESS ]	Status code is 201
[ 65 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - TRANSFERS POST
	[ SUCCESS ]	Status code is 201
[ 66 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - TRANSFERS PUT
	[ SUCCESS ]	Status code is 201
[ 67 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - TRANSFERS ERROR
	[ SUCCESS ]	Status code is 201
[ 68 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - BULK-TRANSFER POST
	[ SUCCESS ]	Status code is 201
[ 69 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - BULK-TRANSFER PUT
	[ SUCCESS ]	Status code is 201
[ 70 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add payeefsp callback - BULK-TRANSFER ERROR
	[ SUCCESS ]	Status code is 201
[ 71 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add callback - PARTICIPANT SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 72 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add callback - PARTICIPANT SUB-ID PUT Error
	[ SUCCESS ]	Status code is 201
[ 73 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add callback - PARTICIPANT SUB-ID DELETE
	[ SUCCESS ]	Status code is 201
[ 74 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add callback - PARTIES SUB-ID GET
	[ SUCCESS ]	Status code is 201
[ 75 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add callback - PARTIES SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 76 passed, 0 skipped, 0 failed of 212 ]
  payeefsp callbacks -> Add callback - PARTIES SUB-ID ERROR PUT
	[ SUCCESS ]	Status code is 201
[ 77 passed, 0 skipped, 0 failed of 212 ]
  payeefsp notification_emails -> Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL
	[ SUCCESS ]	Status code is 201
[ 78 passed, 0 skipped, 0 failed of 212 ]
  payeefsp notification_emails -> Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL
	[ SUCCESS ]	Status code is 201
[ 79 passed, 0 skipped, 0 failed of 212 ]
  payeefsp notification_emails -> Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL
	[ SUCCESS ]	Status code is 201
[ 80 passed, 0 skipped, 0 failed of 212 ]
  payeefsp oracle_registration -> Add payeeIdentifier in payeeIdType Oracle
	[ SUCCESS ]	Status code is 202
[ 81 passed, 0 skipped, 0 failed of 212 ]
  payeefsp add_users -> Add SubId User - payeeIdType - payeeIdentifier - 100
	[ SUCCESS ]	Status code is 202
[ 82 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp account -> Add noresponsepayeefsp
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 83 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp account -> Add initial position and limits - noresponsepayeefsp
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 84 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp account -> noresponsepayeefsp Get Status Request before deposit
	[ SUCCESS ]	status to be 200
[ 85 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp account -> Deposit Funds in Settlement Account - noresponsepayeefsp
	[ SUCCESS ]	status to be 202
[ 87 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp account -> noresponsepayeefsp Get Status Request after deposit
	[ SUCCESS ]	status to be 200
	[ SUCCESS ]	noresponsepayeefsp Settlement Account Balance After FundsIn should be equal to the balance before plus the transfer amount
[ 88 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp callbacks -> Add noresponsepayeefsp callback - TRANSFERS PUT
	[ SUCCESS ]	Status code is 201
[ 89 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp callbacks -> Add noresponsepayeefsp callback - TRANSFERS ERROR
	[ SUCCESS ]	Status code is 201
[ 90 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp callbacks -> Add noresponsepayeefsp callback - BULK-TRANSFER POST
	[ SUCCESS ]	Status code is 201
[ 91 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp callbacks -> Add noresponsepayeefsp callback - BULK-TRANSFER PUT
	[ SUCCESS ]	Status code is 201
[ 92 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp callbacks -> Add noresponsepayeefsp callback - BULK-TRANSFER ERROR
	[ SUCCESS ]	Status code is 201
[ 93 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp callbacks -> Add noresponsepayeefsp callback - QUOTES
	[ SUCCESS ]	Status code is 201
[ 94 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp notification_emails -> Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL
	[ SUCCESS ]	Status code is 201
[ 95 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp notification_emails -> Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL
	[ SUCCESS ]	Status code is 201
[ 96 passed, 0 skipped, 0 failed of 212 ]
  noresponsepayeefsp notification_emails -> Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL
	[ SUCCESS ]	Status code is 201
[ 97 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 account -> Add testfsp1
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 98 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 account -> Add initial position and limits - testfsp1
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 99 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 account -> testfsp1 Get Status Request before deposit
	[ SUCCESS ]	status to be 200
[ 100 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 account -> Deposit Funds in Settlement Account - testfsp1
	[ SUCCESS ]	status to be 202
[ 102 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 account -> testfsp1 Get Status Request after deposit
	[ SUCCESS ]	status to be 200
	[ SUCCESS ]	testfsp1 Settlement Account Balance After FundsIn should be equal to the balance before plus the transfer amount
[ 103 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 account -> Add testfsp1 with second currency
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 104 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 account -> Add initial position and limits - testfsp1 with second currency
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 105 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTIES GET
	[ SUCCESS ]	Status code is 201
[ 106 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTIES PUT
	[ SUCCESS ]	Status code is 201
[ 107 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTIES PUT Error
	[ SUCCESS ]	Status code is 201
[ 108 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTICIPANT PUT
	[ SUCCESS ]	Status code is 201
[ 109 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTICIPANT PUT Error
	[ SUCCESS ]	Status code is 201
[ 110 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTICIPANT PUT Batch
	[ SUCCESS ]	Status code is 201
[ 111 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTICIPANT PUT Batch Error
	[ SUCCESS ]	Status code is 201
[ 112 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - QUOTES
	[ SUCCESS ]	Status code is 201
[ 113 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - TRANSFERS POST
	[ SUCCESS ]	Status code is 201
[ 114 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - TRANSFERS PUT
	[ SUCCESS ]	Status code is 201
[ 115 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - TRANSFERS ERROR
	[ SUCCESS ]	Status code is 201
[ 116 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTICIPANT SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 117 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTICIPANT SUB-ID PUT Error
	[ SUCCESS ]	Status code is 201
[ 118 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTICIPANT SUB-ID DELETE
	[ SUCCESS ]	Status code is 201
[ 119 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTIES SUB-ID GET
	[ SUCCESS ]	Status code is 201
[ 120 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTIES SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 121 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 callbacks -> Add testfsp1 callback - PARTIES SUB-ID ERROR PUT
	[ SUCCESS ]	Status code is 201
[ 122 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 notification_emails -> Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL
	[ SUCCESS ]	Status code is 201
[ 123 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 notification_emails -> Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL
	[ SUCCESS ]	Status code is 201
[ 124 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 notification_emails -> Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL
	[ SUCCESS ]	Status code is 201
[ 125 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 oracle_registration -> Add payeeIdentifier in payeeIdType Oracle
	[ SUCCESS ]	Status code is 202
[ 126 passed, 0 skipped, 0 failed of 212 ]
  testfsp1 add_users -> Add SubId User - testfsp1IdType - testfsp1Identifier - 100
	[ SUCCESS ]	Status code is 202
[ 127 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 account -> Add testfsp2
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 128 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 account -> Add initial position and limits - testfsp2
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 129 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 account -> testfsp2 Get Status Request before deposit
	[ SUCCESS ]	status to be 200
[ 130 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 account -> Deposit Funds in Settlement Account - testfsp2
	[ SUCCESS ]	status to be 202
[ 132 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 account -> testfsp2 Get Status Request after deposit
	[ SUCCESS ]	status to be 200
	[ SUCCESS ]	testfsp2 Settlement Account Balance After FundsIn should be equal to the balance before plus the transfer amount
[ 133 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 account -> Add testfsp2 with second currency
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 134 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 account -> Add initial position and limits - testfsp2 with second currency
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 135 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTIES GET
	[ SUCCESS ]	Status code is 201
[ 136 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTIES PUT
	[ SUCCESS ]	Status code is 201
[ 137 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTIES PUT Error
	[ SUCCESS ]	Status code is 201
[ 138 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTICIPANT PUT
	[ SUCCESS ]	Status code is 201
[ 139 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTICIPANT PUT Error
	[ SUCCESS ]	Status code is 201
[ 140 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTICIPANT PUT Batch
	[ SUCCESS ]	Status code is 201
[ 141 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTICIPANT PUT Batch Error
	[ SUCCESS ]	Status code is 201
[ 142 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - QUOTES
	[ SUCCESS ]	Status code is 201
[ 143 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - TRANSFERS POST
	[ SUCCESS ]	Status code is 201
[ 144 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - TRANSFERS PUT
	[ SUCCESS ]	Status code is 201
[ 145 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - TRANSFERS ERROR
	[ SUCCESS ]	Status code is 201
[ 146 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTICIPANT SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 147 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTICIPANT SUB-ID PUT Error
	[ SUCCESS ]	Status code is 201
[ 148 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTICIPANT SUB-ID DELETE
	[ SUCCESS ]	Status code is 201
[ 149 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTIES SUB-ID GET
	[ SUCCESS ]	Status code is 201
[ 150 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTIES SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 151 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 callbacks -> Add testfsp2 callback - PARTIES SUB-ID ERROR PUT
	[ SUCCESS ]	Status code is 201
[ 152 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 notification_emails -> Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL
	[ SUCCESS ]	Status code is 201
[ 153 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 notification_emails -> Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL
	[ SUCCESS ]	Status code is 201
[ 154 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 notification_emails -> Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL
	[ SUCCESS ]	Status code is 201
[ 155 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 oracle_registration -> Add payeeIdentifier in payeeIdType Oracle
	[ SUCCESS ]	Status code is 202
[ 156 passed, 0 skipped, 0 failed of 212 ]
  testfsp2 add_users -> Add SubId User - testfsp2IdType - testfsp2Identifier - 100
	[ SUCCESS ]	Status code is 202
[ 157 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add participant
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 158 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add initial position and limits
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 159 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTICIPANT PUT
	[ SUCCESS ]	Status code is 201
[ 160 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTICIPANT PUT Error
	[ SUCCESS ]	Status code is 201
[ 161 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTIES GET
	[ SUCCESS ]	Status code is 201
[ 162 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTIES PUT
	[ SUCCESS ]	Status code is 201
[ 163 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - QUOTES PUT
	[ SUCCESS ]	Status code is 201
[ 164 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - TRANSFERS POST
	[ SUCCESS ]	Status code is 201
[ 165 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - TRANSFERS PUT
	[ SUCCESS ]	Status code is 201
[ 166 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - TRANSFERS ERROR
	[ SUCCESS ]	Status code is 201
[ 167 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTICIPANT SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 168 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTICIPANT SUB-ID PUT Error
	[ SUCCESS ]	Status code is 201
[ 169 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTICIPANT SUB-ID DELETE
	[ SUCCESS ]	Status code is 201
[ 170 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTIES SUB-ID GET
	[ SUCCESS ]	Status code is 201
[ 171 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTIES SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 172 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTIES SUB-ID ERROR PUT
	[ SUCCESS ]	Status code is 201
[ 173 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE
	[ SUCCESS ]	Status code is 201
[ 174 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Set Endpoint-NET_DEBIT_CAP_ADJUSTMENT_EMAIL
	[ SUCCESS ]	Status code is 201
[ 175 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Set Endpoint-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL
	[ SUCCESS ]	Status code is 201
[ 176 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> DFSP Endpoint-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL
	[ SUCCESS ]	Status code is 201
[ 177 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Setup Bulk POST endpoint
	[ SUCCESS ]	Status code is 201
[ 178 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Setup Bulk PUT endpoint
	[ SUCCESS ]	Status code is 201
[ 179 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Setup Bulk PUT /error endpoint
	[ SUCCESS ]	Status code is 201
[ 180 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add payerfsp callback - PARTICIPANT PUT Batch
	[ SUCCESS ]	Status code is 201
[ 181 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add payerfsp callback - PARTICIPANT PUT Batch Error
	[ SUCCESS ]	Status code is 201
[ 182 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add callback - PARTIES PUT ERROR
	[ SUCCESS ]	Status code is 201
[ 183 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add participant with second currency
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 184 passed, 0 skipped, 0 failed of 212 ]
  testingtoolkitdfsp provisioning -> Add initial position and limits with second currency
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 185 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add participant
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 186 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add initial position and limits
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists
[ 187 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTICIPANT PUT
	[ SUCCESS ]	Status code is 201
[ 188 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTICIPANT PUT Error
	[ SUCCESS ]	Status code is 201
[ 189 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTIES GET
	[ SUCCESS ]	Status code is 201
[ 190 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTIES PUT
	[ SUCCESS ]	Status code is 201
[ 191 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - QUOTES PUT
	[ SUCCESS ]	Status code is 201
[ 192 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - TRANSFERS POST
	[ SUCCESS ]	Status code is 201
[ 193 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - TRANSFERS PUT
	[ SUCCESS ]	Status code is 201
[ 194 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - TRANSFERS ERROR
	[ SUCCESS ]	Status code is 201
[ 195 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTICIPANT SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 196 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTICIPANT SUB-ID PUT Error
	[ SUCCESS ]	Status code is 201
[ 197 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTICIPANT SUB-ID DELETE
	[ SUCCESS ]	Status code is 201
[ 198 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTIES SUB-ID GET
	[ SUCCESS ]	Status code is 201
[ 199 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTIES SUB-ID PUT
	[ SUCCESS ]	Status code is 201
[ 200 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTIES SUB-ID ERROR PUT
	[ SUCCESS ]	Status code is 201
[ 201 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE
	[ SUCCESS ]	Status code is 201
[ 202 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Set Endpoint-NET_DEBIT_CAP_ADJUSTMENT_EMAIL
	[ SUCCESS ]	Status code is 201
[ 203 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Set Endpoint-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL
	[ SUCCESS ]	Status code is 201
[ 204 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> DFSP Endpoint-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL
	[ SUCCESS ]	Status code is 201
[ 205 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Setup Bulk POST endpoint
	[ SUCCESS ]	Status code is 201
[ 206 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Setup Bulk PUT endpoint
	[ SUCCESS ]	Status code is 201
[ 207 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Setup Bulk PUT /error endpoint
	[ SUCCESS ]	Status code is 201
[ 208 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add payerfsp callback - PARTICIPANT PUT Batch
	[ SUCCESS ]	Status code is 201
[ 209 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add payerfsp callback - PARTICIPANT PUT Batch Error
	[ SUCCESS ]	Status code is 201
[ 210 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add callback - PARTIES PUT ERROR
	[ SUCCESS ]	Status code is 201
[ 211 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add participant with second currency
	[ SUCCESS ]	status to be 201 if not exists or 400 if exists
[ 212 passed, 0 skipped, 0 failed of 212 ]
  ttkpayeefsp provisioning -> Add initial position and limits with second currency
	[ SUCCESS ]	status to be 201 if not exists or 500 if exists

--------------------FINAL REPORT--------------------
Hub Account
	Add Hub Account-HUB_MULTILATERAL_SETTLEMENT - POST - /participants/{name}/accounts - [1/1]
	Add Hub Account-HUB_RECONCILIATION - POST - /participants/{name}/accounts - [1/1]
	Hub Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Hub Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Hub Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Add Hub Account-HUB_MULTILATERAL_SETTLEMENT Second Currency - POST - /participants/{name}/accounts - [1/1]
	Add Hub Account-HUB_RECONCILIATION Second Currency - POST - /participants/{name}/accounts - [1/1]
Settlement Models
	Create settlement model DEFERRED NET USD - POST - /settlementModels - [1/1]
	Create settlement model DEFAULT DEFERRED NET - POST - /settlementModels - [1/1]
Oracle Onboarding
	Register MSISDN Oracle - POST - /oracles - [1/1]
	Register BUSINESS Oracle - POST - /oracles - [1/1]
	Register ALIAS Oracle - POST - /oracles - [1/1]
payerfsp account
	Add payerfsp - POST - /participants - [1/1]
	Add initial position and limits - payerfsp - POST - /participants/{name}/initialPositionAndLimits - [1/1]
	payerfsp Get Status Request before deposit - GET - /participants/{name}/accounts - [1/1]
	Deposit Funds in Settlement Account - payerfsp - POST - /participants/{name}/accounts/{id} - [1/1]
	payerfsp Get Status Request after deposit - GET - /participants/{name}/accounts - [2/2]
	Add payeefsp with different currency for default settlement case - POST - /participants - [1/1]
	Add initial position and limits with different currency - payerfsp - POST - /participants/{name}/initialPositionAndLimits - [1/1]
payerfsp callbacks
	Add payerfsp callback - AUTHORIZATIONS - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT PUT - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT PUT Batch - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT PUT Batch Error - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTIES GET - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTIES PUT - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTIES PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - QUOTES - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - TXN REQUEST - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - TRANSFERS POST - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - TRANSFERS PUT - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - TRANSFERS ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - BULK-TRANSFER POST - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - BULK-TRANSFER PUT - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - BULK-TRANSFER ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT SUB-ID PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT SUB-ID DELETE - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTIES SUB-ID GET - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTIES SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTIES SUB-ID ERROR PUT - POST - /participants/{name}/endpoints - [1/1]
payerfsp notification_emails
	Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL - POST - /participants/{name}/endpoints - [1/1]
payerfsp add_users
	Add SubId User - payerIdType - payerIdentifier - 100 - POST - /participants/{Type}/{ID}/{SubId} - [1/1]
payeefsp account
	Add payeefsp - POST - /participants - [1/1]
	Add initial position and limits - payeefsp - POST - /participants/{name}/initialPositionAndLimits - [1/1]
	payeefsp Get Status Request before deposit - GET - /participants/{name}/accounts - [1/1]
	Deposit Funds in Settlement Account - payeefsp - POST - /participants/{name}/accounts/{id} - [1/1]
	payeefsp Get Status Request after deposit - GET - /participants/{name}/accounts - [2/2]
	Add payeefsp with different currency for default settlement case - POST - /participants - [1/1]
	Add initial position and limits with different currency - payeefsp - POST - /participants/{name}/initialPositionAndLimits - [1/1]
payeefsp callbacks
	Add payeefsp callback - AUTHORIZATIONS - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - PARTICIPANT PUT - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - PARTICIPANT PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - PARTICIPANT PUT Batch - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - PARTICIPANT PUT Batch Error - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - PARTIES GET - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - PARTIES PUT - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - PARTIES PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - QUOTES - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - TXN REQUEST - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - TRANSFERS POST - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - TRANSFERS PUT - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - TRANSFERS ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - BULK-TRANSFER POST - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - BULK-TRANSFER PUT - POST - /participants/{name}/endpoints - [1/1]
	Add payeefsp callback - BULK-TRANSFER ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT SUB-ID PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT SUB-ID DELETE - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES SUB-ID GET - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES SUB-ID ERROR PUT - POST - /participants/{name}/endpoints - [1/1]
payeefsp notification_emails
	Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL - POST - /participants/{name}/endpoints - [1/1]
payeefsp oracle_registration
	Add payeeIdentifier in payeeIdType Oracle - POST - /participants/{Type}/{ID} - [1/1]
payeefsp add_users
	Add SubId User - payeeIdType - payeeIdentifier - 100 - POST - /participants/{Type}/{ID}/{SubId} - [1/1]
noresponsepayeefsp account
	Add noresponsepayeefsp - POST - /participants - [1/1]
	Add initial position and limits - noresponsepayeefsp - POST - /participants/{name}/initialPositionAndLimits - [1/1]
	noresponsepayeefsp Get Status Request before deposit - GET - /participants/{name}/accounts - [1/1]
	Deposit Funds in Settlement Account - noresponsepayeefsp - POST - /participants/{name}/accounts/{id} - [1/1]
	noresponsepayeefsp Get Status Request after deposit - GET - /participants/{name}/accounts - [2/2]
noresponsepayeefsp callbacks
	Add noresponsepayeefsp callback - TRANSFERS PUT - POST - /participants/{name}/endpoints - [1/1]
	Add noresponsepayeefsp callback - TRANSFERS ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add noresponsepayeefsp callback - BULK-TRANSFER POST - POST - /participants/{name}/endpoints - [1/1]
	Add noresponsepayeefsp callback - BULK-TRANSFER PUT - POST - /participants/{name}/endpoints - [1/1]
	Add noresponsepayeefsp callback - BULK-TRANSFER ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add noresponsepayeefsp callback - QUOTES - POST - /participants/{name}/endpoints - [1/1]
noresponsepayeefsp notification_emails
	Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL - POST - /participants/{name}/endpoints - [1/1]
testfsp1 account
	Add testfsp1 - POST - /participants - [1/1]
	Add initial position and limits - testfsp1 - POST - /participants/{name}/initialPositionAndLimits - [1/1]
	testfsp1 Get Status Request before deposit - GET - /participants/{name}/accounts - [1/1]
	Deposit Funds in Settlement Account - testfsp1 - POST - /participants/{name}/accounts/{id} - [1/1]
	testfsp1 Get Status Request after deposit - GET - /participants/{name}/accounts - [2/2]
	Add testfsp1 with second currency - POST - /participants - [1/1]
	Add initial position and limits - testfsp1 with second currency - POST - /participants/{name}/initialPositionAndLimits - [1/1]
testfsp1 callbacks
	Add testfsp1 callback - PARTIES GET - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTIES PUT - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTIES PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTICIPANT PUT - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTICIPANT PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTICIPANT PUT Batch - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTICIPANT PUT Batch Error - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - QUOTES - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - TRANSFERS POST - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - TRANSFERS PUT - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - TRANSFERS ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTICIPANT SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTICIPANT SUB-ID PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTICIPANT SUB-ID DELETE - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTIES SUB-ID GET - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTIES SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp1 callback - PARTIES SUB-ID ERROR PUT - POST - /participants/{name}/endpoints - [1/1]
testfsp1 notification_emails
	Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL - POST - /participants/{name}/endpoints - [1/1]
testfsp1 oracle_registration
	Add payeeIdentifier in payeeIdType Oracle - POST - /participants/{Type}/{ID} - [1/1]
testfsp1 add_users
	Add SubId User - testfsp1IdType - testfsp1Identifier - 100 - POST - /participants/{Type}/{ID}/{SubId} - [1/1]
testfsp2 account
	Add testfsp2 - POST - /participants - [1/1]
	Add initial position and limits - testfsp2 - POST - /participants/{name}/initialPositionAndLimits - [1/1]
	testfsp2 Get Status Request before deposit - GET - /participants/{name}/accounts - [1/1]
	Deposit Funds in Settlement Account - testfsp2 - POST - /participants/{name}/accounts/{id} - [1/1]
	testfsp2 Get Status Request after deposit - GET - /participants/{name}/accounts - [2/2]
	Add testfsp2 with second currency - POST - /participants - [1/1]
	Add initial position and limits - testfsp2 with second currency - POST - /participants/{name}/initialPositionAndLimits - [1/1]
testfsp2 callbacks
	Add testfsp2 callback - PARTIES GET - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTIES PUT - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTIES PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTICIPANT PUT - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTICIPANT PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTICIPANT PUT Batch - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTICIPANT PUT Batch Error - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - QUOTES - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - TRANSFERS POST - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - TRANSFERS PUT - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - TRANSFERS ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTICIPANT SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTICIPANT SUB-ID PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTICIPANT SUB-ID DELETE - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTIES SUB-ID GET - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTIES SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add testfsp2 callback - PARTIES SUB-ID ERROR PUT - POST - /participants/{name}/endpoints - [1/1]
testfsp2 notification_emails
	Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL - POST - /participants/{name}/endpoints - [1/1]
testfsp2 oracle_registration
	Add payeeIdentifier in payeeIdType Oracle - POST - /participants/{Type}/{ID} - [1/1]
testfsp2 add_users
	Add SubId User - testfsp2IdType - testfsp2Identifier - 100 - POST - /participants/{Type}/{ID}/{SubId} - [1/1]
testingtoolkitdfsp provisioning
	Add participant - POST - /participants - [1/1]
	Add initial position and limits - POST - /participants/{name}/initialPositionAndLimits - [1/1]
	Add callback - PARTICIPANT PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES GET - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - QUOTES PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - TRANSFERS POST - POST - /participants/{name}/endpoints - [1/1]
	Add callback - TRANSFERS PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - TRANSFERS ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT SUB-ID PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT SUB-ID DELETE - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES SUB-ID GET - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES SUB-ID ERROR PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE - POST - /participants/{name}/endpoints - [1/1]
	Set Endpoint-NET_DEBIT_CAP_ADJUSTMENT_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Endpoint-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	DFSP Endpoint-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Setup Bulk POST endpoint - POST - /participants/{name}/endpoints - [1/1]
	Setup Bulk PUT endpoint - POST - /participants/{name}/endpoints - [1/1]
	Setup Bulk PUT /error endpoint - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT PUT Batch - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT PUT Batch Error - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES PUT ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add participant with second currency - POST - /participants - [1/1]
	Add initial position and limits with second currency - POST - /participants/{name}/initialPositionAndLimits - [1/1]
ttkpayeefsp provisioning
	Add participant - POST - /participants - [1/1]
	Add initial position and limits - POST - /participants/{name}/initialPositionAndLimits - [1/1]
	Add callback - PARTICIPANT PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES GET - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - QUOTES PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - TRANSFERS POST - POST - /participants/{name}/endpoints - [1/1]
	Add callback - TRANSFERS PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - TRANSFERS ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT SUB-ID PUT Error - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTICIPANT SUB-ID DELETE - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES SUB-ID GET - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES SUB-ID PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES SUB-ID ERROR PUT - POST - /participants/{name}/endpoints - [1/1]
	Add callback - FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE - POST - /participants/{name}/endpoints - [1/1]
	Set Endpoint-NET_DEBIT_CAP_ADJUSTMENT_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Set Endpoint-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	DFSP Endpoint-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL - POST - /participants/{name}/endpoints - [1/1]
	Setup Bulk POST endpoint - POST - /participants/{name}/endpoints - [1/1]
	Setup Bulk PUT endpoint - POST - /participants/{name}/endpoints - [1/1]
	Setup Bulk PUT /error endpoint - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT PUT Batch - POST - /participants/{name}/endpoints - [1/1]
	Add payerfsp callback - PARTICIPANT PUT Batch Error - POST - /participants/{name}/endpoints - [1/1]
	Add callback - PARTIES PUT ERROR - POST - /participants/{name}/endpoints - [1/1]
	Add participant with second currency - POST - /participants - [1/1]
	Add initial position and limits with second currency - POST - /participants/{name}/initialPositionAndLimits - [1/1]
--------------------FINAL REPORT--------------------

Test Suite:GP Tests
Environment:Development
┌───────────────────────────────────────────────────┐
│                      SUMMARY                      │
├───────────────────┬───────────────────────────────┤
│ Total assertions  │ 212                           │
├───────────────────┼───────────────────────────────┤
│ Passed assertions │ 212                           │
├───────────────────┼───────────────────────────────┤
│ Failed assertions │ 0                             │
├───────────────────┼───────────────────────────────┤
│ Total requests    │ 207                           │
├───────────────────┼───────────────────────────────┤
│ Total test cases  │ 27                            │
├───────────────────┼───────────────────────────────┤
│ Passed percentage │ 100.00%                       │
├───────────────────┼───────────────────────────────┤
│ Started time      │ Fri, 17 Sep 2021 10:47:18 GMT │
├───────────────────┼───────────────────────────────┤
│ Completed time    │ Fri, 17 Sep 2021 10:48:00 GMT │
├───────────────────┼───────────────────────────────┤
│ Runtime duration  │ 42130 ms                      │
└───────────────────┴───────────────────────────────┘
TTK-Assertion-Report-multi-2021-09-17T10:48:00.808Z.html was generated
Terminate with exit code 0
Done

POD LOGS: ml-ml-ttk-test-validation
Downloading the test collection...
Connecting to github.com (52.64.108.95:443)
Connecting to codeload.github.com (54.79.46.55:443)
saving to 'downloaded-test-collections.zip'
downloaded-test-coll 100% |********************************|  284k  0:00:00 ETA
'downloaded-test-collections.zip' saved
Archive:  downloaded-test-collections.zip
   creating: testing-toolkit-test-cases-13.0.1/
  inflating: testing-toolkit-test-cases-13.0.1/.gitignore
  inflating: testing-toolkit-test-cases-13.0.1/LICENSE.md
  inflating: testing-toolkit-test-cases-13.0.1/README.md
   creating: testing-toolkit-test-cases-13.0.1/collections/
   creating: testing-toolkit-test-cases-13.0.1/collections/dfsp/
   creating: testing-toolkit-test-cases-13.0.1/collections/dfsp/additional-tests/
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/additional-tests/p2p_scheme_adapter_websocket.json
   creating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/get_quotes_transfers.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/negative_scenarios/
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/negative_scenarios/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/negative_scenarios/parties_negative.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/negative_scenarios/quotes_negative.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/negative_scenarios/transfers_negative.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/golden_path/p2p_happy_path.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/dfsp/provisioning/
  inflating: testing-toolkit-test-cases-13.0.1/collections/dfsp/provisioning/provision_mojaloop_simulator.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/Quotes/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/Quotes/quotes-negative-scenarios.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/SettlementWindows/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/SettlementWindows/settlementadmin.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/admin-api-tests/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/admin-api-tests/Admintests-20201221.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/api-tests/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Test for 4 decimal points #949.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Test for Bugfix #1378 - extension list missing.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Test for Bugfix #742 - Error code check.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Test for Bugfix #849 - missing ID for transfers and quotes.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Tests for Bugfix #1009 - ML Adapter and ALS service health should include broker status.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Tests for Bugfix #981 - Fix 500 http code instead of 400.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Tests for Bugfix #990 and #1016 - Quotes.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/Tests for Bugfix #998 - Quoting service not using most recent endpoint.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/bug fixes/other-bug-fixes.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/Active_Inactive_participants/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/Active_Inactive_participants/active_and_inactive_participant.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/Active_Inactive_participants/active_and_inactive_participants_accounts.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/Active_Inactive_participants/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/block_transfer.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/transfers/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/transfers/fulfill_commit.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/transfers/fulfill_reject.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/transfers/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/duplicate_handling/transfers/original_transfer_at_committed.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_in/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_in/funds_in_ttk.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/Reserve&Abort/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/Reserve&Abort/funds_out_abort.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/Reserve&Commit/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/Reserve&Commit/funds_out_commit.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/funds_out/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/get_transfers.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/p2p_money_transfer/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/p2p_money_transfer/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/p2p_money_transfer/p2p_happy_path.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/p2p_money_transfer/p2p_happy_path_subid.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/post_scenarios/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/post_scenarios/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/post_scenarios/positive.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/post_scenarios/reserve_notification_positive_testfsp1_testfsp2.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/fulfil-reserved-v1.0.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/payee_abort_v1.1.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/payee_invalid_fulfillment.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/feature_tests/transfer_negative_scenarios/payee_invalid_timestamp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/p2p_on_us_transfers/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/p2p_on_us_transfers/p2p_money_transfer_on_us.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/quoting_service/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/quoting_service/quoting_service.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/settlement_management/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/settlement_management/Settlement-management-primary-currency-test.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/settlement_management/Settlement-management-second-currency-test.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/settlement_management/mixed_settlement_model.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/Error-framework-authorizations.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/authorizations.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/error-framework.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/received State.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/rejected State.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path/transaction_request_service/transaction_request_service_health.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path_cgs/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path_cgs/settlement_management/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/golden_path_cgs/settlement_management/ttk-dev2-new-cgs-settlement.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/bulk_transfers/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/bulk_transfers/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/bulk_transfers/negative_scenarios.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/bulk_transfers/positive_scenarios.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/new_changes/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/new_changes/get_parties_subid.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/v1.1_changes/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/other_tests/v1.1_changes/patch_notification.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopHub_Setup/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopHub_Setup/hub.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/master.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/noresponsepayeefsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/payeefsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/payerfsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/testfsp1.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/testfsp2.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/testingtoolkitdfsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/MojaloopSims_Onboarding/ttkpayeefsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Adjust all participants limits/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Adjust all participants limits/adjust ALL participants limits  NET DEBIT CAP (parametrized).json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-noresponsepayeefsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-payeefsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-payerfsp.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-testfsp1.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-testfsp2.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-testfsp3.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/CGS-onboarding-testfsp4.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/FSP Onboarding/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Hub accounts/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Hub accounts/CGS-onboarding-hub.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Settlement modesl/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/Settlement modesl/CGS-onboarding-settlementmodel.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/add users to new sims/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/add users to new sims/Add Users to new Sims ; ALS registration.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/master.json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/oracle onboarding/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/provisioning_cgs/oracle onboarding/Oracle Onboarding(MojaloopHub_Setup).json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service-admin/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service-admin/Create Oracle Endpoints - [seq-acct-lookup-admin-post-oracle-7.3.2].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service-admin/Delete Oracle Endpoints - [seq-acct-lookup-admin-delete-oracle-7.3.4].json.json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service-admin/Get Oracles - [seq-acct-lookup-admin-get-oracle-7.3.1].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service-admin/Update Oracle Endpoints - [seq-acct-lookup-admin-put-oracle-7.3.3].json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/Create Batch Participants - [seq-acct-lookup-post-participants-batch-7.1.1].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/Create Participant - [seq-acct-lookup-post-participant-7.1.3].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/Delete Participant Details - [seq-acct-lookup-del-participants-7.1.2].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/Get Participant Details - [seq-acct-lookup-get-participants-7.1.0].json
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/account-lookup-service/Get Party Details - [seq-acct-lookup-get-parties-7.2.0].json
   creating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/quoting-service/
  inflating: testing-toolkit-test-cases-13.0.1/collections/hub/sequence/quoting-service/Quoting Service Sequences [seq-quote-1.0.0].json
   creating: testing-toolkit-test-cases-13.0.1/environments/
  inflating: testing-toolkit-test-cases-13.0.1/environments/hub.json
  inflating: testing-toolkit-test-cases-13.0.1/environments/hub_cgs.json
   creating: testing-toolkit-test-cases-13.0.1/scripts/
  inflating: testing-toolkit-test-cases-13.0.1/scripts/env-compare.js

> ml-testing-toolkit@13.0.2 cli /opt/mojaloop-testing-toolkit
> node src/cli_client/client.js "-c" "cli-default-config.json" "-e" "cli-testcase-environment.json" "-i" "tmp_test_cases/testing-toolkit-test-cases-13.0.1/collections/hub/golden_path" "-u" "http://ml-ml-testing-toolkit-backend:5050" "--report-format" "html" "--report-auto-filename-enable" "true" "--extra-summary-information=Test Suite:GP Tests,Environment:Development"

Listening on http://ml-ml-testing-toolkit-backend:5050 outboundProgress events...
[ 0 passed, 0 skipped, 0 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE -> Add Participant to ALS
[ 0 passed, 0 skipped, 0 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE -> Add Party to Simulator
[ 6 passed, 0 skipped, 4 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE -> Get party information
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Content Length not 0
	[ FAILED ]	Callback body should contain party
	[ SUCCESS ]	Request FSPIOP-Source same as inputs fromFspId
	[ SUCCESS ]	Callback FSPIOP-Destination same as request FSPIOP-Source
	[ SUCCESS ]	Callback content-type to be parties
	[ FAILED ]	Callback partyIdInfo (partyIdType, partyIdentifier)
	[ FAILED ]	Payee FSPIOP-Source
	[ FAILED ]	Payee Content-Type
[ 10 passed, 0 skipped, 15 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE -> Send quote
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
	[ FAILED ]	Payee FSPIOP-Source
	[ FAILED ]	Payee Content-Type
	[ FAILED ]	Payee Body QuoteId
	[ FAILED ]	Payee Body TransactionId
[ 11 passed, 0 skipped, 27 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ FAILED ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
	[ FAILED ]	Payee FSPIOP-Source
	[ FAILED ]	Payee Content-Type
	[ FAILED ]	Payee Body TransferId
	[ FAILED ]	Payee Body Amount
[ 11 passed, 0 skipped, 27 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path with subID -> Add Participant to ALS
[ 11 passed, 0 skipped, 27 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path with subID -> Add Party to Simulator
[ 17 passed, 0 skipped, 32 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path with subID -> Get party information
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Content Length not 0
	[ FAILED ]	Callback body should contain party
	[ SUCCESS ]	Request FSPIOP-Source same as inputs fromFspId
	[ SUCCESS ]	Callback FSPIOP-Destination same as request FSPIOP-Source
	[ SUCCESS ]	Callback content-type to be parties
	[ FAILED ]	Callback partyIdInfo (partyIdType, partyIdentifier)
	[ FAILED ]	Payee FSPIOP-Source
	[ FAILED ]	Payee Content-Type
	[ FAILED ]	Callback FSPIOP-URI should contain ID and SubID
[ 21 passed, 0 skipped, 43 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path with subID -> Send quote
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
	[ FAILED ]	Payee FSPIOP-Source
	[ FAILED ]	Payee Content-Type
	[ FAILED ]	Payee Body QuoteId
	[ FAILED ]	Payee Body TransactionId
[ 22 passed, 0 skipped, 55 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path with subID -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ FAILED ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
	[ FAILED ]	Payee FSPIOP-Source
	[ FAILED ]	Payee Content-Type
	[ FAILED ]	Payee Body TransferId
	[ FAILED ]	Payee Body Amount
[ 30 passed, 1 skipped, 66 failed of 2064 ]
  Fulfil Reserved 1.0 -> Send Quote - RECEIVE
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 30 passed, 1 skipped, 67 failed of 2064 ]
  Fulfil Reserved 1.0 -> Send Transfer-Prepare
	[ FAILED ]	Response status to be 202
[ 31 passed, 1 skipped, 67 failed of 2064 ]
  Fulfil Reserved 1.0 -> Send Fulfill-Reserved
	[ SUCCESS ]	Response status to be 200
[ 39 passed, 1 skipped, 69 failed of 2064 ]
  Fulfil Reserved 1.0 -> Check Transfer status immediately
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Header - fspiop-source is switch
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.transfers+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ SUCCESS ]	Callback Header - Date is not empty
	[ FAILED ]	Callback Header - fspiop-uri is /transfers/transferId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Callback Body -  transferState is RESERVED
[ 48 passed, 1 skipped, 71 failed of 2064 ]
  Fulfil Reserved 1.0 -> Check Transfer status after expiry time
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Header - fspiop-source is switch
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.transfers+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ SUCCESS ]	Callback Header - Date is not empty
	[ SUCCESS ]	Callback Header - fspiop-uri is /transfers/transferId/error
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Callback Body -  errorCode is 3303
	[ FAILED ]	Callback Body -  errorDescription is Transfer expired
[ 49 passed, 1 skipped, 71 failed of 2064 ]
  payee_invalid_fulfillment -> Store SIMPAYER position
	[ SUCCESS ]	Status code is 200
[ 50 passed, 1 skipped, 71 failed of 2064 ]
  payee_invalid_fulfillment -> Store SIMPAYEE position
	[ SUCCESS ]	Status code is 200
[ 58 passed, 2 skipped, 82 failed of 2064 ]
  payee_invalid_fulfillment -> Send Quote - RECEIVE
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 58 passed, 2 skipped, 84 failed of 2064 ]
  payee_invalid_fulfillment -> Send Prepare
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
[ 60 passed, 2 skipped, 85 failed of 2064 ]
  payee_invalid_fulfillment -> Send Payee Invalid Fulfillment
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	Response statusText be OK
	[ FAILED ]	eventListener Body - errorCode is 3100
[ 68 passed, 2 skipped, 88 failed of 2064 ]
  payee_invalid_fulfillment -> Check Transfer status on SIMPAYER - ABORTED
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Header - fspiop-source is switch
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.transfers+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ SUCCESS ]	Callback Header - Date is not empty
	[ FAILED ]	Callback Header - fspiop-uri is /transfers/transferId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Callback Body -  transferState is ABORTED
	[ FAILED ]	Callback Body -  Extension List value is 3100: Generic validation error - invalid fulfilment
[ 70 passed, 2 skipped, 88 failed of 2064 ]
  payee_invalid_fulfillment -> Check Payeefsp position
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Payeefsp position after Payee Invalid Fulfillment should be same as position before transfer.
[ 72 passed, 2 skipped, 88 failed of 2064 ]
  payee_invalid_fulfillment -> Check Payerfsp positio
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Payeefsp position after Payee Invalid Fulfillment should be same as position before transfer.
[ 73 passed, 2 skipped, 88 failed of 2064 ]
  payee_invalid_timestamp -> Store SIMPAYER position
	[ SUCCESS ]	Status code is 200
[ 74 passed, 2 skipped, 88 failed of 2064 ]
  payee_invalid_timestamp -> Store SIMPAYEE position
	[ SUCCESS ]	Status code is 200
[ 82 passed, 3 skipped, 99 failed of 2064 ]
  payee_invalid_timestamp -> Send Quote - RECEIVE
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 82 passed, 3 skipped, 103 failed of 2064 ]
  payee_invalid_timestamp -> Send Prepare
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Body - errorCode is 3303
	[ FAILED ]	Callback Body - errorDescription is Transfer expired
[ 83 passed, 3 skipped, 103 failed of 2064 ]
  payee_invalid_timestamp -> Send Payee Invalid Timestamp
	[ SUCCESS ]	Response status to be 400
[ 92 passed, 3 skipped, 105 failed of 2064 ]
  payee_invalid_timestamp -> Check Transfer status on SIMPAYER - ABORTED
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Header - fspiop-source is switch
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.transfers+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ SUCCESS ]	Callback Header - Date is not empty
	[ SUCCESS ]	Callback Header - fspiop-uri is /transfers/transferId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Callback Body -  errorCode is 3303
	[ FAILED ]	Callback Body -  errorDesciption is Transfer expired
[ 94 passed, 3 skipped, 105 failed of 2064 ]
  payee_invalid_timestamp -> Check Payeefsp position
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Payeefsp position after Payee Invalid Fulfillment should be same as position before transfer.
[ 96 passed, 3 skipped, 105 failed of 2064 ]
  payee_invalid_timestamp -> Check Payerfsp positio
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Payeefsp position after Payee Invalid Fulfillment should be same as position before transfer.
[ 97 passed, 3 skipped, 105 failed of 2064 ]
  payee_abort_v1.1 -> Store SIMPAYER position before prepare
	[ SUCCESS ]	Status code is 200
[ 98 passed, 3 skipped, 105 failed of 2064 ]
  payee_abort_v1.1 -> Store NORESPONSE_SIMPAYEE position before prepare
	[ SUCCESS ]	Status code is 200
[ 100 passed, 3 skipped, 105 failed of 2064 ]
  payee_abort_v1.1 -> Send Prepare
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
[ 101 passed, 3 skipped, 105 failed of 2064 ]
  payee_abort_v1.1 -> Store SIMPAYER position after Prepare
	[ SUCCESS ]	Status code is 200
[ 102 passed, 3 skipped, 105 failed of 2064 ]
  payee_abort_v1.1 -> Send SIMPAYEE Abort - should do nothing but log in fulfil handler
	[ SUCCESS ]	Response status to be 200
[ 104 passed, 3 skipped, 105 failed of 2064 ]
  payee_abort_v1.1 -> Check SIMPAYER position after Abort to wrong URL
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Payeefsp position after Payee Invalid Fulfillment should be same as position before transfer.
[ 105 passed, 3 skipped, 105 failed of 2064 ]
  payee_abort_v1.1 -> Send Fulfill-Reject
	[ SUCCESS ]	Status code is 200
[ 115 passed, 3 skipped, 105 failed of 2064 ]
  payee_abort_v1.1 -> Check Transfer status - ABORTED
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Header - fspiop-source is switch
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.transfers+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ SUCCESS ]	Callback Header - Date is not empty
	[ SUCCESS ]	Callback Header - fspiop-uri is /transfers/transferId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body -  transferState is ABORTED
[ 117 passed, 3 skipped, 105 failed of 2064 ]
  payee_abort_v1.1 -> Check SIMPAYER position after Abort
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Payeefsp position after after Payee ABORT should be same as position before prepare
[ 119 passed, 3 skipped, 105 failed of 2064 ]
  payee_abort_v1.1 -> Check NORESPONSE_SIMPAYEE position after Abort
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Payeefsp position after Payee ABORT should be same as position before prepare
[ 119 passed, 3 skipped, 105 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE -> Add Participant to ALS
[ 119 passed, 3 skipped, 105 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE -> Add Party to Simulator
[ 127 passed, 4 skipped, 120 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Payee Side Request Body - QuoteId
	[ FAILED ]	Payee Side Body - TransactionId
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
[ 127 passed, 5 skipped, 146 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Payee Side Request Body - TransferId
	[ FAILED ]	Payee Side Request Body - payerFsp is same
	[ FAILED ]	Payee Side Request Body - payeeFsp is same
	[ FAILED ]	Payee Side Request Body - amount is same
	[ FAILED ]	Payee Side Request Body - currency is same
	[ FAILED ]	Payee Side Request Body - expiration is same
	[ FAILED ]	Payee Side Request Body - ilpPacket is same
	[ FAILED ]	Payee Side Request Body - condition is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ FAILED ]	Callback Header - fspiop-desination is fspiop-source in request
	[ FAILED ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ FAILED ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ FAILED ]	Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Callback Body - transferId is null
	[ FAILED ]	Callback Body - transferState is COMMITTED
	[ FAILED ]	Callback Body - fulfilment is not nul
[ 127 passed, 5 skipped, 158 failed of 2064 ]
  p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE -> Duplicate transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Header - fspiop-source is switch
	[ FAILED ]	Callback Header - fspiop-desination is fspiop-source in request
	[ FAILED ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ FAILED ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-signature is not null
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ FAILED ]	Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Callback Body - transferId is null
	[ FAILED ]	Callback Body - transferState is COMMITTED
	[ FAILED ]	Callback Body - fulfilment is same as in the last callback
[ 135 passed, 6 skipped, 169 failed of 2064 ]
  positive -> Send Quote - RECEIVE
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 136 passed, 6 skipped, 169 failed of 2064 ]
  positive -> Send Transfer-Prepare
	[ SUCCESS ]	Response status to be 202
[ 137 passed, 6 skipped, 169 failed of 2064 ]
  positive -> Send Fulfill
	[ SUCCESS ]	Response status to be 200
[ 138 passed, 6 skipped, 169 failed of 2064 ]
  positive -> Duplicate Fulfill
	[ SUCCESS ]	Response status to be 200
[ 149 passed, 6 skipped, 169 failed of 2064 ]
  positive -> Check Transfer status
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Header - fspiop-source is switch
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.transfers+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ SUCCESS ]	Callback Header - Date is not empty
	[ SUCCESS ]	Callback Header - fspiop-uri is /transfers/transferId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body -  transferState is RESERVED
	[ SUCCESS ]	Callback Body -  fulfillment is same as request
[ 157 passed, 7 skipped, 180 failed of 2064 ]
  negative -> Send Quote - RECEIVE
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 158 passed, 7 skipped, 180 failed of 2064 ]
  negative -> Send Transfer-Prepare
	[ SUCCESS ]	Response status to be 202
[ 159 passed, 7 skipped, 180 failed of 2064 ]
  negative -> Send Fulfill
	[ SUCCESS ]	Response status to be 200
[ 161 passed, 7 skipped, 189 failed of 2064 ]
  negative -> Duplicate Fulfill
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	Response statusText be OK
	[ FAILED ]	Payee Side Callback Header - fspiop-source is switch
	[ FAILED ]	Payee Side Callback Header - fspiop-destination is NORESPONSE_SIMPAYEE_NAME
	[ FAILED ]	Payee Side Callback Header - fspiop-signature is not empty
	[ FAILED ]	Payee Side Callback Header - accept is empty
	[ FAILED ]	Payee Side Callback Header - content-type is same
	[ FAILED ]	Payee Side Callback Header - fspiop-uri is /transfers/tranderId/error
	[ FAILED ]	Payee Side Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Payee Side Callback Body - Response Error Code is 3106
	[ FAILED ]	Payee Side Callback Body - Response Error Desription is Modified request
[ 169 passed, 8 skipped, 200 failed of 2064 ]
  positive -> Send Quote - RECEIVE
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 170 passed, 8 skipped, 200 failed of 2064 ]
  positive -> Send Transfer-Prepare
	[ SUCCESS ]	Response status to be 202
[ 171 passed, 8 skipped, 200 failed of 2064 ]
  positive -> Send Fulfill-Reject
	[ SUCCESS ]	Response status to be 200
[ 172 passed, 8 skipped, 200 failed of 2064 ]
  positive -> Send Duplicate Fulfill-Reject
	[ SUCCESS ]	Response status to be 200
[ 182 passed, 8 skipped, 200 failed of 2064 ]
  positive -> Check Transfer status
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Header - fspiop-source is switch
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.transfers+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ SUCCESS ]	Callback Header - Date is not empty
	[ SUCCESS ]	Callback Header - fspiop-uri is /transfers/transferId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body -  transferState is ABORTED
[ 190 passed, 9 skipped, 211 failed of 2064 ]
  negative -> Send Quote - RECEIVE
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 191 passed, 9 skipped, 211 failed of 2064 ]
  negative -> Send Transfer-Prepare
	[ SUCCESS ]	Response status to be 202
[ 192 passed, 9 skipped, 211 failed of 2064 ]
  negative -> Send Fulfill-Reject
	[ SUCCESS ]	Response status to be 200
[ 194 passed, 9 skipped, 211 failed of 2064 ]
  negative -> Send Invalid Duplicate Fulfill-Reject
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	Response statusText be OK
[ 204 passed, 9 skipped, 211 failed of 2064 ]
  negative -> Check Transfer status
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Header - fspiop-source is switch
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.transfers+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ SUCCESS ]	Callback Header - Date is not empty
	[ SUCCESS ]	Callback Header - fspiop-uri is /transfers/transferId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body -  transferState is ABORTED
[ 205 passed, 9 skipped, 211 failed of 2064 ]
  Active and inactive participant -> Update participant (SIM2 to inactive)
	[ SUCCESS ]	Response status code is 200
[ 207 passed, 10 skipped, 220 failed of 2064 ]
  Active and inactive participant -> Send Quote fail (SIM1 to SIM2)
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payer side Callback Header - fspiop-source is switch
	[ FAILED ]	Payer side Callback Header - fspiop-destination is SIM1
	[ FAILED ]	Payer side Callback Header - accept is empty
	[ FAILED ]	Payer side Callback Header - content-type is same
	[ FAILED ]	Payer side Callback Header - fspiop-uri is /quotes/quoteId/error
	[ FAILED ]	Payer side Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Payer side Callback Body - errorCode is 3201
	[ FAILED ]	Payer side Callback Body - Error Description is Destination FSP Error
[ 209 passed, 11 skipped, 229 failed of 2064 ]
  Active and inactive participant -> Send Transfer fail (SIM1 to SIM2)
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payer side Callback Header - fspiop-source is switch
	[ FAILED ]	Payer side Callback Header - fspiop-destination is SIM1
	[ FAILED ]	Payer side Callback Header - accept is empty
	[ FAILED ]	Payer side Callback Header - content-type is same
	[ FAILED ]	Payer side Callback Header - fspiop-uri is /transfers/transferId/error
	[ FAILED ]	Payer side Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Payer side Callback Body - errorCode is 3100
	[ FAILED ]	Payer side Callback Body - Error Description is Generic validation error
[ 210 passed, 11 skipped, 229 failed of 2064 ]
  Active and inactive participant -> Update participant (SIM2 to active)
	[ SUCCESS ]	Response status code is 200
[ 212 passed, 12 skipped, 245 failed of 2064 ]
  Active and inactive participant -> Send Quote (SIM1 to SIM2)
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee side Request Header - fspiop-source is SIM1
	[ FAILED ]	Payee side Request Header - fspiop-destination is SIM2
	[ FAILED ]	Payee side Request Header - accept is same
	[ FAILED ]	Payee side Request Header - content-type is same
	[ FAILED ]	Payee side Request Header - fspiop-uri is /quotes
	[ FAILED ]	Payee side Request Header - fspiop-http-method is POST
	[ FAILED ]	Payer side Callback Header - fspiop-source is SIM2
	[ FAILED ]	Payer side Callback Header - fspiop-destination is SIM1
	[ FAILED ]	Payer side Callback Header - accept is empty
	[ FAILED ]	Payer side Callback Header - content-type is as expected
	[ FAILED ]	Payer side Callback Header - fspiop-uri is /quotes/quoteId
	[ FAILED ]	Payer side Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Payer side Callback Body - quoteId is null
	[ FAILED ]	Payer side Callback Body - ilpPacket is not null
	[ FAILED ]	Payer side Callback Body - condition is not null
[ 212 passed, 13 skipped, 262 failed of 2064 ]
  Active and inactive participant -> Send Transfer (SIM1 to SIM2)
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee side Request Header - fspiop-source is SIM1
	[ FAILED ]	Payee side Request Header - fspiop-destination is SIM2
	[ FAILED ]	Payee side Request Header - accept is same
	[ FAILED ]	Payee side Request Header - content-type is same
	[ FAILED ]	Payee side Request Header - fspiop-uri is /transfers
	[ FAILED ]	Payee side Request Header - fspiop-http-method is POST
	[ FAILED ]	Payer side Callback Header - fspiop-source is SIM2
	[ FAILED ]	Payer side Callback Header - fspiop-destination is SIM1
	[ FAILED ]	Payer side Callback Header - accept is empty
	[ FAILED ]	Payer side Callback Header - content-type is as expected
	[ FAILED ]	Payer side Callback Header - fspiop-uri is /transfers/transferId
	[ FAILED ]	Payer side Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Payer side Callback Body - transferId is null
	[ FAILED ]	Payer side Callback Body - transferState is COMMITTED
[ 213 passed, 13 skipped, 262 failed of 2064 ]
  Active and inactive participant account -> Get SIM2 Participant Account
	[ SUCCESS ]	Response status code is 200
[ 213 passed, 13 skipped, 262 failed of 2064 ]
  Active and inactive participant account -> Update SIM2 to inactive_XOF account
[ 215 passed, 14 skipped, 271 failed of 2064 ]
  Active and inactive participant account -> Send Quote fail (SIM1 to SIM2)
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payer side Callback Header - fspiop-source is switch
	[ FAILED ]	Payer side Callback Header - fspiop-destination is SIM1
	[ FAILED ]	Payer side Callback Header - accept is empty
	[ FAILED ]	Payer side Callback Header - content-type is same
	[ FAILED ]	Payer side Callback Header - fspiop-uri is /quotes/quoteId/error
	[ FAILED ]	Payer side Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Payer side Callback Body - errorCode is 3201
	[ FAILED ]	Payer side Callback Body - Error Description is Destination FSP Error
[ 217 passed, 15 skipped, 280 failed of 2064 ]
  Active and inactive participant account -> Send Transfer fail (SIM1 to SIM2)
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payer side Callback Header - fspiop-source is switch
	[ FAILED ]	Payer side Callback Header - fspiop-destination is SIM1
	[ FAILED ]	Payer side Callback Header - accept is empty
	[ FAILED ]	Payer side Callback Header - content-type is same
	[ FAILED ]	Payer side Callback Header - fspiop-uri is /transfers/transferId/error
	[ FAILED ]	Payer side Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Payer side Callback Body - errorCode is 3100
	[ FAILED ]	Payer side Callback Body - Error Description is Generic validation error
[ 218 passed, 15 skipped, 280 failed of 2064 ]
  Active and inactive participant account -> Update participant (SIM2 to active) account
	[ SUCCESS ]	Response status code is 200
[ 220 passed, 16 skipped, 296 failed of 2064 ]
  Active and inactive participant account -> Send Quote (SIM1 to SIM2)
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee side Request Header - fspiop-source is SIM1
	[ FAILED ]	Payee side Request Header - fspiop-destination is SIM2
	[ FAILED ]	Payee side Request Header - accept is same
	[ FAILED ]	Payee side Request Header - content-type is same
	[ FAILED ]	Payee side Request Header - fspiop-uri is /quotes
	[ FAILED ]	Payee side Request Header - fspiop-http-method is POST
	[ FAILED ]	Payer side Callback Header - fspiop-source is SIM2
	[ FAILED ]	Payer side Callback Header - fspiop-destination is SIM1
	[ FAILED ]	Payer side Callback Header - accept is empty
	[ FAILED ]	Payer side Callback Header - content-type is as expected
	[ FAILED ]	Payer side Callback Header - fspiop-uri is /quotes/quoteId
	[ FAILED ]	Payer side Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Payer side Callback Body - quoteId is null
	[ FAILED ]	Payer side Callback Body - ilpPacket is not null
	[ FAILED ]	Payer side Callback Body - condition is not null
[ 220 passed, 17 skipped, 313 failed of 2064 ]
  Active and inactive participant account -> Send Transfer (SIM1 to SIM2)
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Validate Protected Headers
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee side Request Header - fspiop-source is SIM1
	[ FAILED ]	Payee side Request Header - fspiop-destination is SIM2
	[ FAILED ]	Payee side Request Header - accept is same
	[ FAILED ]	Payee side Request Header - content-type is same
	[ FAILED ]	Payee side Request Header - fspiop-uri is /transfers
	[ FAILED ]	Payee side Request Header - fspiop-http-method is POST
	[ FAILED ]	Payer side Callback Header - fspiop-source is SIM2
	[ FAILED ]	Payer side Callback Header - fspiop-destination is SIM1
	[ FAILED ]	Payer side Callback Header - accept is empty
	[ FAILED ]	Payer side Callback Header - content-type is as expected
	[ FAILED ]	Payer side Callback Header - fspiop-uri is /transfers/transferId
	[ FAILED ]	Payer side Callback Header - fspiop-http-method is PUT
	[ FAILED ]	Payer side Callback Body - transferId is null
	[ FAILED ]	Payer side Callback Body - transferState is COMMITTED
[ 222 passed, 17 skipped, 313 failed of 2064 ]
  Block Transfer -> GET limits - SIMPAYER
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	NDC limit set correctly
[ 224 passed, 17 skipped, 313 failed of 2064 ]
  Block Transfer -> GET limits - SIMPAYEE
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	NDC limit set correctly
[ 226 passed, 17 skipped, 313 failed of 2064 ]
  Block Transfer -> GET SIMPAYER position before the transfer
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Payer FSP position correctly set
[ 228 passed, 17 skipped, 313 failed of 2064 ]
  Block Transfer -> GET SIMPAYEE position before the transfer
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Payee FSP position correctly set
[ 234 passed, 18 skipped, 322 failed of 2064 ]
  Block Transfer -> Send Quote
	[ SUCCESS ]	Status code is 202
	[ FAILED ]	Payee FSP 'fspiop-source' is 'testingtoolkitdfsp'
	[ FAILED ]	Payee FSP 'fspiop-destination' is 'payeefsp'
	[ FAILED ]	Payee FSP: 'fspiop-signature' is same as sent in the request
	[ FAILED ]	Payee FSP 'accept' is same as sent in the request
	[ FAILED ]	Payee FSP 'content-type' is same as sent in the request
	[ FAILED ]	Payee FSP 'fspiop-uri' is /quotes
	[ FAILED ]	Payee FSP 'fspiop-http-method' is 'POST'
	[ FAILED ]	Payer FSP Callback: 'fspiop-source' is 'payeefsp'
	[ SUCCESS ]	Payer FSP Callback: 'fspiop-destination' is 'testingtoolkitdfsp'
	[ SKIPPED ]	Payer FSP Callback:  JWS signature valid
	[ SUCCESS ]	Payer Callback: JWS protected headers are valid
	[ SUCCESS ]	Payer FSP Callback: 'accept' is empty
	[ SUCCESS ]	Payer FSP Callback: 'content-type' is as expected
	[ FAILED ]	Payer FSP Callback: 'fspiop-uri' is /quotes
	[ SUCCESS ]	Payer FSP Callback: 'fspiop-http-method' is 'PUT'
[ 234 passed, 18 skipped, 332 failed of 2064 ]
  Block Transfer -> Send Block Transfer
	[ FAILED ]	Status code is 202
	[ FAILED ]	Error code should be returned
	[ FAILED ]	Error description should be returned
	[ FAILED ]	'fspiop-source' should be 'switch'
	[ FAILED ]	'fspiop-destination' should be 'testingtoolkitdfsp'
	[ FAILED ]	'accept' should be empty
	[ FAILED ]	'content-type' should be in proper format
	[ FAILED ]	'fspiop-signature' should be present
	[ FAILED ]	'fspiop-uri' is /transfers/{transferId}/error
	[ FAILED ]	'fspiop-http-method' is PUT
[ 236 passed, 18 skipped, 332 failed of 2064 ]
  Block Transfer -> GET SIMPAYER position after the transfer
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Position before and after transfer should be the same
[ 238 passed, 18 skipped, 332 failed of 2064 ]
  Block Transfer -> GET SIMPAYEE position after the transfer
	[ SUCCESS ]	Status code is 200
	[ SUCCESS ]	Position before and after transfer should be the same
[ 239 passed, 18 skipped, 332 failed of 2064 ]
  Funds_in_ttk -> Get testingtoolkitdfsp settlement account
	[ SUCCESS ]	Response code is 200
[ 240 passed, 18 skipped, 332 failed of 2064 ]
  Funds_in_ttk -> Get Hub Reconcilliation account
	[ SUCCESS ]	Response code is 200
[ 241 passed, 18 skipped, 332 failed of 2064 ]
  Funds_in_ttk -> Record funds in - prepare 2
	[ SUCCESS ]	Response code is 202
[ 243 passed, 18 skipped, 332 failed of 2064 ]
  Funds_in_ttk -> Get testingtoolkitdfsp settlement account after funds in
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testingtoolkitdfsp Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount
[ 245 passed, 18 skipped, 332 failed of 2064 ]
  Funds_in_ttk -> Get Hub Reconcilliation account after funds in
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Final Hub Reconciliation Account Balance should be same as before FundsIn + fundsInPrepareAmount
[ 254 passed, 18 skipped, 332 failed of 2064 ]
  Funds_in_ttk -> Record Funds in - prepare transfer status
	[ SUCCESS ]	Response code is 202
	[ SUCCESS ]	fspiop-source is switch
	[ SUCCESS ]	fspiop-destination is testingtoolkitdfsp
	[ SUCCESS ]	content-type should be in the proper format
	[ SUCCESS ]	accept is empty
	[ SUCCESS ]	fspiop-signature is not empty
	[ SUCCESS ]	fspiop-uri includes "transfer/transferid"
	[ SUCCESS ]	fspiop-http-method is PUT
	[ SUCCESS ]	Transfer State should be COMMITTED
[ 255 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Get testingtoolkitdfsp settlement account
	[ SUCCESS ]	Response code is 200
[ 256 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Get Hub Reconcilliation account
	[ SUCCESS ]	Response code is 200
[ 257 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Record Funds Out Prepare&Reserve- SIMPAYER
	[ SUCCESS ]	Response code is 202
[ 259 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Get testingtoolkitdfsp settlement account after funds out
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testingtoolkitdfsp Settlement Account Balance should decrease by the transfer amount
[ 261 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Get Hub Reconcilliation account after funds out
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Final Hub Reconciliation Account Balance should stay the same in prepare phase
[ 270 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Record Funds Out Prepare&Reserve - transferStatus
	[ SUCCESS ]	Response code is 202
	[ SUCCESS ]	fspiop-source is switch
	[ SUCCESS ]	fspiop-destination is testingtoolkitdfsp
	[ SUCCESS ]	content-type should match with the proper format
	[ SUCCESS ]	accept is empty
	[ SUCCESS ]	fspiop-signature is not empty
	[ SUCCESS ]	fspiop-uri includes "transfer/transferid"
	[ SUCCESS ]	fspiop-http-method is PUT
	[ SUCCESS ]	Transfer State should be RESERVED
[ 271 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Get testingtoolkitdfsp settlement account before abort
	[ SUCCESS ]	Response code is 200
[ 272 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Get Hub Reconcilliation account before abort
	[ SUCCESS ]	Response code is 200
[ 273 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Record Funds Out Abort - SIMPAYER
	[ SUCCESS ]	Response code is 202
[ 275 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Get testingtoolkitdfsp settlement account after abort
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testingtoolkitdfsp Settlement Account Balance should rollback to the value before Prepare
[ 277 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Get Hub Reconcilliation account after abort
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Final Hub Reconciliation Account Balance should not change
[ 286 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Abort -> Record Funds Out Abort - transfer status
	[ SUCCESS ]	Response code is 202
	[ SUCCESS ]	fspiop-source is switch
	[ SUCCESS ]	fspiop-destination is testingtoolkitdfsp
	[ SUCCESS ]	content-type should match with the proper format
	[ SUCCESS ]	accept is empty
	[ SUCCESS ]	fspiop-signature is not empty
	[ SUCCESS ]	fspiop-uri includes "transfer/transferid"
	[ SUCCESS ]	fspiop-http-method is PUT
	[ SUCCESS ]	Transfer State should be ABORTED
[ 287 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Get testingtoolkitdfsp settlement account
	[ SUCCESS ]	Response code is 200
[ 288 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Get Hub Reconcilliation account
	[ SUCCESS ]	Response code is 200
[ 289 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Record Funds Out Prepare&Reserve- SIMPAYER
	[ SUCCESS ]	Response code is 202
[ 291 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Get testingtoolkitdfsp settlement account after funds out
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testingtoolkitdfsp Settlement Account Balance should decrease by the transfer amount
[ 293 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Get Hub Reconcilliation account after funds out
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Final Hub Reconciliation Account Balance should stay the same in prepare phase
[ 302 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Record Funds Out Prepare&Reserve - transferStatus
	[ SUCCESS ]	Response code is 202
	[ SUCCESS ]	fspiop-source is switch
	[ SUCCESS ]	fspiop-destination is testingtoolkitdfsp
	[ SUCCESS ]	content-type should match with the proper format
	[ SUCCESS ]	accept is empty
	[ SUCCESS ]	fspiop-signature is not empty
	[ SUCCESS ]	fspiop-uri includes "transfer/transferid"
	[ SUCCESS ]	fspiop-http-method is PUT
	[ SUCCESS ]	Transfer State should be RESERVED
[ 303 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Get testingtoolkitdfsp settlement account before commit
	[ SUCCESS ]	Response code is 200
[ 304 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Get Hub Reconcilliation account before commit
	[ SUCCESS ]	Response code is 200
[ 305 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Record Funds Out Commit - SIMPAYER
	[ SUCCESS ]	Response code is 202
[ 307 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Get testingtoolkitdfsp settlement account after commit
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testingtoolkitdfsp Settlement Account Balance should not change during commit phase
[ 309 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Get Hub Reconcilliation account after commit
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Final Hub Reconciliation Account Balance should decrease by the transfer amount
[ 318 passed, 18 skipped, 332 failed of 2064 ]
  Funds_out/Reserve&Commit_ttk -> Record Funds Out Commit - transfer status
	[ SUCCESS ]	Response code is 202
	[ SUCCESS ]	fspiop-source is switch
	[ SUCCESS ]	fspiop-destination is testingtoolkitdfsp
	[ SUCCESS ]	content-type should be in the proper format
	[ SUCCESS ]	accept is empty
	[ SUCCESS ]	fspiop-signature is not empty
	[ SUCCESS ]	fspiop-uri includes "transfer/transferid"
	[ SUCCESS ]	fspiop-http-method is PUT
	[ SUCCESS ]	Transfer State should be COMMITTED
[ 324 passed, 19 skipped, 341 failed of 2064 ]
  Get Transfers -> Send Quote
	[ SUCCESS ]	Status code is 202
	[ FAILED ]	Payee FSP 'fspiop-source' is 'testingtoolkitdfsp'
	[ FAILED ]	Payee FSP 'fspiop-destination' is 'payeefsp'
	[ FAILED ]	Payee FSP: 'fspiop-signature' is same as sent in the request
	[ FAILED ]	Payee FSP 'accept' is same as sent in the request
	[ FAILED ]	Payee FSP 'content-type' is same as sent in the request
	[ FAILED ]	Payee FSP 'fspiop-uri' is /quotes
	[ FAILED ]	Payee FSP 'fspiop-http-method' is 'POST'
	[ FAILED ]	Payer FSP Callback: 'fspiop-source' is 'payeefsp'
	[ SUCCESS ]	Payer FSP Callback: 'fspiop-destination' is 'testingtoolkitdfsp'
	[ SKIPPED ]	Payer FSP Callback:  JWS signature valid
	[ SUCCESS ]	Payer Callback: JWS protected headers are valid
	[ SUCCESS ]	Payer FSP Callback: 'accept' is empty
	[ SUCCESS ]	Payer FSP Callback: 'content-type' is same as sent in the request
	[ FAILED ]	Payer FSP Callback: 'fspiop-uri' is /quotes/{quoteId}
	[ SUCCESS ]	Payer FSP Callback: 'fspiop-http-method' is 'PUT'
[ 324 passed, 19 skipped, 365 failed of 2064 ]
  Get Transfers -> Send Transfer
	[ FAILED ]	Status code is 202
	[ FAILED ]	Payee FSP: 'fspiop-source' should be 'testingtoolkitdfsp'
	[ FAILED ]	Payee FSP: 'fspiop-destination' should be 'payeefsp'
	[ FAILED ]	Payee FSP: 'content-type' should be same as sent in the request
	[ FAILED ]	Payee FSP: 'accept' should be same as sent in the request
	[ FAILED ]	Payee FSP: 'fspiop-signature' should be same as sent in the request
	[ FAILED ]	Payee FSP: 'fspiop-http-method' is POST
	[ FAILED ]	Payee FSP: 'fspiop-uri' is /transfers
	[ FAILED ]	Payee FSP: Data should have the same transferId as request
	[ FAILED ]	Payee FSP: Data should have the same Payer FSP ID as request
	[ FAILED ]	Payee FSP: Data should have the same Payee FSP ID as request
	[ FAILED ]	Payee FSP: Data should have the same amount as request
	[ FAILED ]	Payee FSP: Data should have the same currency as request
	[ FAILED ]	Payee FSP: Data should have the same expiration as request
	[ FAILED ]	Payee FSP: Data should have the same ilpPacket as request
	[ FAILED ]	Payee FSP: Data should have the same condition as request
	[ FAILED ]	Payer FSP: 'fspiop-source' is 'payefsp'
	[ FAILED ]	Payer FSP: 'fspiop-destination' is 'testingtoolkitdfsp'
	[ FAILED ]	Payer FSP: 'content-type' should be 'application/vnd.interoperability.transfers+json;version=1.0'
	[ FAILED ]	Payer FSP: 'accept' should be empty
	[ FAILED ]	Payer FSP: 'fspiop-uri' should include '/transfers/{transferId}'
	[ FAILED ]	Payer FSP: 'fspiop-http-method' should be 'PUT'
	[ FAILED ]	Payer FSP: Response data does not have transferId
	[ FAILED ]	Payer FSP: Response status is 'COMMITTED'
[ 332 passed, 19 skipped, 367 failed of 2064 ]
  Get Transfers -> GET transfer - COMMITTED
	[ SUCCESS ]	Status code is 202
	[ SUCCESS ]	Payer FSP: 'fspiop-source' is 'switch'
	[ SUCCESS ]	Payer FSP: 'fspiop-destination' is 'payerfsp'
	[ SUCCESS ]	Payer FSP: 'content-type' should be in proper format
	[ SUCCESS ]	Payer FSP: 'accept' should be empty
	[ SUCCESS ]	Payer FSP: 'fspiop-signature' is not empty
	[ FAILED ]	Payer FSP: 'fspiop-uri' includes /transfers/{transferId}
	[ SUCCESS ]	Payer FSP: 'fspiop-http-method' is PUT
	[ SUCCESS ]	Payer FSP: Response data does not have transfer ID
	[ FAILED ]	Payer FSP: Response status is 'COMMITTED'
[ 333 passed, 19 skipped, 375 failed of 2064 ]
  Get Transfers -> Source is original receiver
	[ SUCCESS ]	Status code is 202
	[ FAILED ]	Payee FSP: 'fspiop-source' is 'switch'
	[ FAILED ]	Payee FSP: 'fspiop-destination' is 'payerfsp'
	[ FAILED ]	Payee FSP: 'content-type' should be same as request
	[ FAILED ]	Payee FSP: 'accept' should be empty
	[ FAILED ]	Payee FSP: 'fspiop-uri' includes /transfers/{transferId}
	[ FAILED ]	Payee FSP: 'fspiop-signature' is not empty
	[ FAILED ]	Payee FSP: 'fspiop-http-method' is PUT
	[ FAILED ]	Payee FSP: Response status is 'COMMITTED'
[ 334 passed, 19 skipped, 384 failed of 2064 ]
  Get Transfers -> Source is not part of original sender/receiver
	[ SUCCESS ]	Status code is 202
	[ FAILED ]	Payee FSP: 'fspiop-source' is 'switch'
	[ FAILED ]	Payee FSP: 'fspiop-destination' is 'payerfsp'
	[ FAILED ]	Payee FSP: 'content-type' should be same as request
	[ FAILED ]	Payee FSP: 'accept' should be empty
	[ FAILED ]	Payee FSP: 'fspiop-uri' includes /transfers/{transferId}/error
	[ FAILED ]	Payee FSP: 'fspiop-signature' is not empty
	[ FAILED ]	Payee FSP: 'fspiop-http-method' is PUT
	[ FAILED ]	Payee FSP: Error Code should be returned
	[ FAILED ]	Payee FSP: Error Description should be returned
[ 344 passed, 19 skipped, 384 failed of 2064 ]
  Get Transfers -> 200 - 3208 - Transfer ID not found
	[ SUCCESS ]	Status code is 202
	[ SUCCESS ]	Payer FSP: 'fspiop-source' is 'switch'
	[ SUCCESS ]	Payer FSP: 'fspiop-destination' is 'payerfsp'
	[ SUCCESS ]	Payer FSP: 'content-type' should be in proper format
	[ SUCCESS ]	Payer FSP: 'accept' should be empty
	[ SUCCESS ]	Payer FSP: 'fspiop-uri' includes /transfers/{transferId}/error
	[ SUCCESS ]	Payer FSP: 'fspiop-signature' is not empty
	[ SUCCESS ]	Payer FSP: 'fspiop-http-method' is PUT
	[ SUCCESS ]	Payer FSP: Error Code should be returned
	[ SUCCESS ]	Payer FSP: Error Description should be returned
[ 344 passed, 19 skipped, 384 failed of 2064 ]
  Positive Scenarios -> Add Participant to ALS
[ 344 passed, 19 skipped, 384 failed of 2064 ]
  Positive Scenarios -> Delete party from simulator
[ 344 passed, 19 skipped, 384 failed of 2064 ]
  Positive Scenarios -> Add Party to Simulator
[ 350 passed, 19 skipped, 388 failed of 2064 ]
  Positive Scenarios -> Get party information
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Content Length not 0
	[ FAILED ]	Callback body should contain party
	[ SUCCESS ]	Request FSPIOP-Source same as inputs fromFspId
	[ SUCCESS ]	Callback FSPIOP-Destination same as request FSPIOP-Source
	[ SUCCESS ]	Callback content-type to be parties
	[ FAILED ]	Callback partyIdInfo (partyIdType, partyIdentifier)
	[ FAILED ]	Payee FSPIOP-Source
	[ FAILED ]	Payee Content-Type
[ 350 passed, 19 skipped, 480 failed of 2064 ]
  Positive Scenarios -> Post scenario
	[ FAILED ]	Status code is 200
	[ FAILED ]	Payer name matches
	[ FAILED ]	Payer IdType matches
	[ FAILED ]	Payer IdValue matches
	[ FAILED ]	Payee IdType matches
	[ FAILED ]	Payee IdValue matches
	[ FAILED ]	Payee fspId matches
	[ FAILED ]	Payee First Name matches
	[ FAILED ]	Payee Last Name matches
	[ FAILED ]	Payee DOB matches
	[ FAILED ]	Amount Type is 'SEND'
	[ FAILED ]	Currency matches
	[ FAILED ]	Transfer Amount matches
	[ FAILED ]	Transaction Type is 'Transfer'
	[ FAILED ]	Initiator Type is 'CONSUMER'
	[ FAILED ]	Note matches
	[ FAILED ]	Transfer ID matches
	[ FAILED ]	Home transaction ID matches
	[ FAILED ]	Current state on quote is 'COMPLETED'
	[ FAILED ]	Quote amount matches
	[ FAILED ]	Currency matches
	[ FAILED ]	Quote response expiration is not null
	[ FAILED ]	Quote response ilp packet is not null
	[ FAILED ]	Quote response condition is not null
	[ FAILED ]	Payee fee amount is zero (0)
	[ FAILED ]	Payee fee currency matches
	[ FAILED ]	Payee commission amount is zero (0)
	[ FAILED ]	Payee FSP commission currency matches
	[ FAILED ]	Payer FSP name matches
	[ FAILED ]	Payer IdType matches
	[ FAILED ]	Payer IdValue matches
	[ FAILED ]	Payee IdType matches
	[ FAILED ]	Payee  ReceiverMSISDN IdValue matches
	[ FAILED ]	Payee fspId matches
	[ FAILED ]	Payee First Name matches
	[ FAILED ]	Payee Last Name matches
	[ FAILED ]	Payee DOB matches
	[ FAILED ]	Amount type in quote response is 'SEND'
	[ FAILED ]	Currency in quotes matches
	[ FAILED ]	Transfer amount matches
	[ FAILED ]	Transaction Type is TRANSFER
	[ FAILED ]	Initiator type is CONSUMER
	[ FAILED ]	Note matches
	[ FAILED ]	Home transaction ID is 123ABC
	[ FAILED ]	Current state of the transfer is 'COMPLETED'
	[ FAILED ]	Transfer Amount matches
	[ FAILED ]	Currency matches
	[ FAILED ]	Quote expiration is not null
	[ FAILED ]	Response ilpPacket is not null
	[ FAILED ]	Response condition is not null
	[ FAILED ]	Payee FSP Fee is zero (0)
	[ FAILED ]	Payee FSP commission is zero (0)
	[ FAILED ]	Transfer currency matches
	[ FAILED ]	CompletedTimestamp is not empty
	[ FAILED ]	Transfer state is 'COMMITTED'
	[ FAILED ]	Fulfilment is not empty
	[ FAILED ]	Payee Request: fspiop-source header is 'payerfsp'
	[ FAILED ]	Payee Request: fspiop-destination header is 'payeefsp'
	[ FAILED ]	Payee Request: Content-Type is 'application/vnd.interoperability.parties+json;version=1.0'
	[ FAILED ]	Payee Request: Accept matches 'application/vnd.interoperability.parties+json;version=1(\.\d)?/' 
	[ FAILED ]	Payee Request: Date is not null
	[ FAILED ]	Payer Callback: 'fspiop-source' header is 'payeefsp'
	[ FAILED ]	Payer Callback: 'fspiop-destination' header is 'payerfsp'
	[ FAILED ]	Payer Callback: 'content-type' header matches
	[ FAILED ]	Payer Callback: 'Accept' header is empty
	[ FAILED ]	Payer Callback: 'fspiop-uri' header matches
	[ FAILED ]	Payer Callback: 'fspiop-http-method' headers is 'PUT'
	[ FAILED ]	Payer Callback: Expected partyIdType is MSISDN
	[ FAILED ]	Payer Callback: Payee partyIdentifier matches
	[ FAILED ]	Payer Callback: Payee fspId matches
	[ FAILED ]	Payer Callback: Payee first name matches
	[ FAILED ]	Payer Callback: Payee last name matches
	[ FAILED ]	Payer Callback: Payee DOB matches
	[ FAILED ]	Payee Request: 'fspiop-source' header matches
	[ FAILED ]	Payee Request: 'fspiop-destination' header matches
	[ FAILED ]	Payee Request: 'content-type' header should be in proper format
	[ FAILED ]	Payee Request: 'accept' header is the same as sent in the request
	[ FAILED ]	Payee Request: 'fspiop-http-method' i s POST
	[ FAILED ]	Payee Request: 'fspiop-uri'  is /transfers
	[ FAILED ]	Payee Request: data should have the same "transferId" as request
	[ FAILED ]	Payee Request: data should have the same Payer FSP as request
	[ FAILED ]	Payee Request: data should have the same Payee FSP as request
	[ FAILED ]	Payee Request: data should have the same amount as request
	[ FAILED ]	Payee Request: data should have the same currency as request
	[ FAILED ]	Payer Callback: 'fspiop-source' header matches
	[ FAILED ]	Payer Callback: 'fspiop-destination' header matches
	[ FAILED ]	Payer Callback: 'content-type' header is 'application/vnd.interoperability.transfers+json;version=1.0'
	[ FAILED ]	Payer Callback: 'accept' header is empty
	[ FAILED ]	Payer Callback: 'fspiop-uri' header includes /transfers
	[ FAILED ]	Payer Callback: 'fspiop-http-method' header is 'PUT'
	[ FAILED ]	Payer Callback: Response data does not have transferId
	[ FAILED ]	Payer Callback: Transfer state is 'COMMITTED'
[ 351 passed, 19 skipped, 480 failed of 2064 ]
  Reserve Notification Positive - Testfsp1 Testfsp2 -> Add {{testfsp1MSISDN}} to testfsp1
	[ SUCCESS ]	Successfully POST request
[ 352 passed, 19 skipped, 480 failed of 2064 ]
  Reserve Notification Positive - Testfsp1 Testfsp2 -> Add {{testfsp2MSISDN}} to testfsp2
	[ SUCCESS ]	Successfully POST request
[ 353 passed, 19 skipped, 480 failed of 2064 ]
  Reserve Notification Positive - Testfsp1 Testfsp2 -> Add party to SIMPAYEE - MSISDN
	[ SUCCESS ]	Successfully POST request
[ 353 passed, 23 skipped, 564 failed of 2064 ]
  Reserve Notification Positive - Testfsp1 Testfsp2 -> Post scenarios - MSISDN - TESTFSP2 to TESTFSP1 - PATCH notification
	[ FAILED ]	Status code is 200
	[ FAILED ]	Payer name matches
	[ FAILED ]	Payer idType is 'MSISDN'
	[ FAILED ]	Payer idValue matches
	[ FAILED ]	Payee idType is 'MSISDN'
	[ FAILED ]	Payee idValue matches
	[ FAILED ]	Payee fspId is "testfsp1"
	[ FAILED ]	Payee First name "Testfsp1First"
	[ FAILED ]	Payee Last name "Testfsp1Last"
	[ FAILED ]	Payee DOB matches
	[ FAILED ]	Amount type is 'SEND'
	[ FAILED ]	Currency matches
	[ FAILED ]	Transfer amount matches
	[ FAILED ]	Transaction type is 'TRANSFER'
	[ FAILED ]	Initiator type is 'CONSUMER'
	[ FAILED ]	Note matches
	[ FAILED ]	transferId matches
	[ FAILED ]	Home transaction ID matches
	[ FAILED ]	Current state on quote is 'COMPLETED'
	[ FAILED ]	Transfer amount matches
	[ FAILED ]	Currency matches
	[ FAILED ]	Quote response expiration is not null
	[ FAILED ]	Quote request ILP packet is not null
	[ FAILED ]	Quote response condition is not null
	[ FAILED ]	Payee Fee amount is 0
	[ FAILED ]	Payee fee currency matches
	[ FAILED ]	Payee FSP commission amount is '0'
	[ FAILED ]	Payee FSP commission currency matches
	[ FAILED ]	Payer FSP name matches
	[ FAILED ]	Payer IdType is 'MSISDN'
	[ FAILED ]	Payer MSISDN matches
	[ FAILED ]	Payee IdType is 'MSISDN'
	[ FAILED ]	Receiver MSISDN value matches
	[ FAILED ]	fspId is 'testfsp1'
	[ FAILED ]	First name of the party matches
	[ FAILED ]	Last name of the party matches
	[ FAILED ]	Date of Birth of the MSISDN is '2010-10-10'
	[ FAILED ]	Amount-Type in Quote request is 'SEND'
	[ FAILED ]	Currency in Quote request matches
	[ FAILED ]	Transfer amount is '10'
	[ FAILED ]	Transaction type is 'TRANSFER'
	[ FAILED ]	Initiator type is 'CONSUMER'
	[ FAILED ]	Note matches
	[ FAILED ]	HomeTransactionId is 123ABC
	[ FAILED ]	Current state of the transfer is 'COMPLETED'
	[ FAILED ]	Transfer Amount is '10'
	[ FAILED ]	Response validation: Currency matches
	[ FAILED ]	Quote expiration is not null
	[ FAILED ]	Response ilpPacket is not null
	[ FAILED ]	Response condition is not null
	[ FAILED ]	PayeeFspFee is '0'
	[ FAILED ]	Payee FSP fee currency matches
	[ FAILED ]	Payee FSP commission is '0'
	[ FAILED ]	Payee FSP Transfer commission currency matches
	[ FAILED ]	CompletedTimestamp is not empty
	[ FAILED ]	transferState is 'COMMITTED'
	[ FAILED ]	Fulfilment is not empty
	[ FAILED ]	On testfsp2 fspiop-source is testfsp2
	[ FAILED ]	On testfsp2 content-type should be application/vnd.interoperability.parties+json;version=1.0
	[ FAILED ]	On Payee FSP 'accept' header should be 'application/vnd.interoperability.parties+json;version=1.1'
	[ FAILED ]	On Payee FSP date cannot be undefined
	[ FAILED ]	On testfsp2 'fspiop-source' is 'testfsp1'
	[ FAILED ]	On testfsp2 'fspiop-destination' is 'testfsp2'
	[ FAILED ]	On testfsp2 'content-type' header should be 'application/vnd.interoperability.parties+json;version=1.0'
	[ FAILED ]	Payer FSP 'accept' header is empty
	[ FAILED ]	Payer FSP JWS headers validation
	[ SKIPPED ]	Payer FSP JWS validation
	[ FAILED ]	Payer FSP 'fspiop-uri' should be /parties/MSISDN/17039811907
	[ FAILED ]	Payer FSP 'fspiop-http-method' is PUT
	[ FAILED ]	Expected partyIdType is 'MSISDN'
	[ FAILED ]	Expected partyIdentifier matches
	[ FAILED ]	Expected fspId is 'testfsp1'
	[ FAILED ]	Expected receiver first name is 'Testfsp1First'
	[ FAILED ]	Expected receiver last name is 'Testfsp1Last'
	[ FAILED ]	Expected receiver DOB is '2010-10-10'
	[ SKIPPED ]	On testfsp1 'fspiop-source' is 'switch'
	[ FAILED ]	On testfsp1 'fspiop-destination' is 'testfsp1'
	[ FAILED ]	On testfsp1 'content-type' should be in the proper format
	[ SKIPPED ]	On testfsp1 'fspiop-http-method' is PATCH
	[ FAILED ]	On testfsp1 'fspiop-uri' contains '/transfers'
	[ FAILED ]	On testfsp2 'fspiop-source' is 'testfsp1'
	[ FAILED ]	On testfsp2 'fspiop-destination' is 'testfsp2'
	[ SKIPPED ]	On Payer FSP 'content-type' should be 'application/vnd.interoperability.transfers+json;version=1.1'
	[ FAILED ]	On Payer FSP 'accept' is empty
	[ FAILED ]	On Payer FSP 'fspiop-uri' includes '/transfers'
	[ FAILED ]	On Payer FSP 'fspiop-http-method' is PUT
	[ FAILED ]	Response data does not have transferId
	[ FAILED ]	Response 'transferState' is 'COMMITTED'
[ 356 passed, 23 skipped, 564 failed of 2064 ]
  Check Settlements Error #956 -> Check Settlements Error #956
	[ SUCCESS ]	Response code status 400
	[ SUCCESS ]	Check Malformed syntax in settlements
	[ SUCCESS ]	Check Error code 3101
[ 357 passed, 23 skipped, 566 failed of 2064 ]
  Check Settlements Error #956 -> Check FSPIOP Headers from Switch #883
	[ SUCCESS ]	Response code status 202
	[ FAILED ]	Expected error code is 3204
	[ FAILED ]	Expected error description - party not Found
[ 358 passed, 23 skipped, 568 failed of 2064 ]
  Check Settlements Error #956 -> Check FSPIOP Headers from ML-API-Adapter #1032
	[ SUCCESS ]	Response code status 202
	[ FAILED ]	Response data does not have transferId
	[ FAILED ]	Error code is 3100
[ 367 passed, 23 skipped, 570 failed of 2064 ]
  Test for 4 decimal points #949 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Content Length not 0
	[ SUCCESS ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ SUCCESS ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 369 passed, 23 skipped, 577 failed of 2064 ]
  Test for 4 decimal points #949 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ FAILED ]	Request transferAmount (amount & currency) to match quote request
	[ SUCCESS ]	Request FSP source the same as quote callback FSP destination
[ 372 passed, 23 skipped, 577 failed of 2064 ]
  Test for Bugfix #1378 - extension list missing -> Send quote
	[ SUCCESS ]	Response status to be 406
	[ SUCCESS ]	Check Unacceptable version requested
	[ SUCCESS ]	Check Error code 3001
[ 375 passed, 23 skipped, 577 failed of 2064 ]
  Test for Bugfix #1378 - extension list missing -> Send quote Copy
	[ SUCCESS ]	Response status to be 406
	[ SUCCESS ]	Check Unacceptable version requested
	[ SUCCESS ]	Check Error code 3001
[ 378 passed, 23 skipped, 577 failed of 2064 ]
  Test for Bugfix #742 - Error code check -> Add Participant - Invalid Currency
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Malformed syntax - malformed currency
	[ SUCCESS ]	Check Error code 3101
[ 381 passed, 23 skipped, 577 failed of 2064 ]
  Test for Bugfix #742 - Error code check -> Check Error 3003 Add Party information error #742
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check ID missing
	[ SUCCESS ]	Check Error code 3003
[ 385 passed, 23 skipped, 577 failed of 2064 ]
  Test for Bugfix #742 - Error code check -> Check Error 3101 Malformed syntax #742
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Malformed syntax
	[ SUCCESS ]	Check Transfer Id is included in error
	[ SUCCESS ]	Check Error code 3101
[ 388 passed, 23 skipped, 577 failed of 2064 ]
  Test for Bugfix #849 - missing ID for transfers and quotes -> Check transfers/ Missing ID #849
	[ SUCCESS ]	Response status to be 404
	[ SUCCESS ]	Check ID missing
	[ SUCCESS ]	Check Error code 3002
[ 391 passed, 23 skipped, 577 failed of 2064 ]
  Test for Bugfix #849 - missing ID for transfers and quotes -> Check quotes/ Missing ID #849
	[ SUCCESS ]	Response status equals 404
	[ SUCCESS ]	Check error description equals 'Unknown URI'
	[ SUCCESS ]	Check Error code equals 3002
[ 395 passed, 23 skipped, 577 failed of 2064 ]
  Tests for Bugfix #1009 - ML Adapter and ALS service health should include broker status -> transaction service health
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	ML Adaptor - Expected Status is OK
	[ SUCCESS ]	ML Adaptor - Expected body to have services array
	[ SUCCESS ]	ML Adaptor - Expected services to have broker and status is OK
[ 399 passed, 23 skipped, 577 failed of 2064 ]
  Tests for Bugfix #1009 - ML Adapter and ALS service health should include broker status -> Get health status of ALS
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	Expected Status is OK
	[ SUCCESS ]	Expected body to have services array
	[ SUCCESS ]	Expected services to have datastore and status is OK
[ 403 passed, 23 skipped, 577 failed of 2064 ]
  Tests for Bugfix #1009 - ML Adapter and ALS service health should include broker status -> Get health status of Central Ledger
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	Expected Status is OK
	[ SUCCESS ]	Expected body to have services array
	[ SUCCESS ]	Expected services to have broker and status is OK
[ 407 passed, 23 skipped, 577 failed of 2064 ]
  Tests for Bugfix #1009 - ML Adapter and ALS service health should include broker status -> Get health status of Central Settlement
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	Expected Status is OK
	[ SUCCESS ]	Expected body to have services array
	[ SUCCESS ]	Expected services to have datastore and status is OK
[ 410 passed, 23 skipped, 577 failed of 2064 ]
  Tests for Bugfix #981 - Fix 500 http code instead of 400 -> Add participant - duplicate account
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Generic client error for duplicate currency
	[ SUCCESS ]	Check Error code 3000
[ 413 passed, 23 skipped, 577 failed of 2064 ]
  Tests for Bugfix #981 - Fix 500 http code instead of 400 -> Add non existing Participant
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Generic ID not found - non existing participant
	[ SUCCESS ]	Check Error code 3200
[ 416 passed, 23 skipped, 577 failed of 2064 ]
  Tests for Bugfix #981 - Fix 500 http code instead of 400 -> Add Participant - Invalid Currency
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Malformed syntax - malformed currency
	[ SUCCESS ]	Check Error code 3101
[ 425 passed, 23 skipped, 579 failed of 2064 ]
  Tests for Bugfix #990 and #1016 - Quotes -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ SUCCESS ]	Callback Content Length not 0
	[ SUCCESS ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ SUCCESS ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 426 passed, 25 skipped, 579 failed of 2064 ]
  Tests for Bugfix #990 and #1016 - Quotes -> Send Quote_SEND - 12 - Validate Within Expire Time w Duplicate Quote Id Copy
	[ SUCCESS ]	Response status to be 202
	[ SKIPPED ]	Check Modified request - Duplicate Quote before expire time
	[ SKIPPED ]	Check Error code 3106
[ 427 passed, 27 skipped, 579 failed of 2064 ]
  Tests for Bugfix #990 and #1016 - Quotes -> Send Quote_SEND - 12 - Validate After Expire Time w Duplicate Quote Id
	[ SUCCESS ]	Response status to be 202
	[ SKIPPED ]	Check Modified request - Duplicate Quote before expire time
	[ SKIPPED ]	Check Error code 3106
[ 430 passed, 27 skipped, 579 failed of 2064 ]
  other -> Send Quote_SEND - Missing content-type version
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Missing mandatory element
	[ SUCCESS ]	Check Error code 3101
[ 433 passed, 27 skipped, 579 failed of 2064 ]
  other -> Send Quote_SEND - 6a - Invalid Content Type - application/json
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Missing mandatory element
	[ SUCCESS ]	Check Error code 3101
[ 436 passed, 27 skipped, 579 failed of 2064 ]
  other -> Send Quote_SEND - 6b - Invalid Content Type - xml
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Missing mandatory element
	[ SUCCESS ]	Check Error code 3101
[ 439 passed, 27 skipped, 579 failed of 2064 ]
  other -> Send Quote_SEND - 9- Destination FSP NOT FOUND
	[ SUCCESS ]	Response code is 202
	[ SUCCESS ]	Check Destination FSP Error - Unsupported participant
	[ SUCCESS ]	Check Error code 3201
[ 443 passed, 27 skipped, 579 failed of 2064 ]
  other -> Send Quote_SEND - 10 - PayeePartyIdentifier NOT FOUND
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Malformed sintax - Generic validation error
	[ SUCCESS ]	Check Error code 3100
	[ SUCCESS ]	Check partyIdentifier is included in Error description
[ 446 passed, 27 skipped, 579 failed of 2064 ]
  other -> Send Quote_SEND - 14 - Incorrect Switch Version Header
	[ SUCCESS ]	Response code is 406
	[ SUCCESS ]	Check Unacceptable version requested error
	[ SUCCESS ]	Check Error code 3001
[ 448 passed, 27 skipped, 579 failed of 2064 ]
  other -> QuotesByID - 11 - Missing Condition Field
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Missing mandatory element condition
[ 451 passed, 27 skipped, 579 failed of 2064 ]
  other -> QuotedById - 13a- 400- Missing Accept header
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Malformed syntax - Invalid accept header
	[ SUCCESS ]	Check error code 3101
[ 455 passed, 27 skipped, 579 failed of 2064 ]
  other -> QuotesById - 13b - 400-Missing FSPIOP-Source header
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Missing mandatory element
	[ SUCCESS ]	Check error code 3102
	[ SUCCESS ]	Error message fspiop-source is required
[ 459 passed, 27 skipped, 579 failed of 2064 ]
  other -> QuotesById - 13c - 400-Missing Date header (BUG)
	[ SUCCESS ]	Response code is 400
	[ SUCCESS ]	Check Missing mandatory element
	[ SUCCESS ]	Check error code 3102
	[ SUCCESS ]	Error message date is required
[ 460 passed, 27 skipped, 579 failed of 2064 ]
  Tests for Bugfix #998 - Quoting service not using most recent endpoint -> Add payeefsp request URL - QUOTES PUT with incorrect endpoint
	[ SUCCESS ]	Response status to be 201
[ 461 passed, 27 skipped, 580 failed of 2064 ]
  Tests for Bugfix #998 - Quoting service not using most recent endpoint -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ FAILED ]	Test Passed - Because didn't get request at payeefsp request URL
[ 462 passed, 27 skipped, 580 failed of 2064 ]
  Tests for Bugfix #998 - Quoting service not using most recent endpoint -> Add payeefsp request URL - QUOTES PUT with correct endpoint
	[ SUCCESS ]	Response status to be 201
[ 463 passed, 27 skipped, 582 failed of 2064 ]
  Tests for Bugfix #998 - Quoting service not using most recent endpoint -> Send quote Copy
	[ SUCCESS ]	Response status to be 202
	[ FAILED ]	Ilppacket exist
	[ FAILED ]	condition exist
[ 464 passed, 27 skipped, 582 failed of 2064 ]
  p2p_money_transfer_on_us -> Add Participant to ALS
	[ SUCCESS ]	Response code should be 202
[ 464 passed, 27 skipped, 582 failed of 2064 ]
  p2p_money_transfer_on_us -> Add Party to Simulator
[ 470 passed, 27 skipped, 591 failed of 2064 ]
  p2p_money_transfer_on_us -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be SEND
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
	[ FAILED ]	Payee FSPIOP-Source
	[ FAILED ]	Payee Content-Type
	[ FAILED ]	IlpPacket exists
	[ FAILED ]	confition exists
[ 471 passed, 29 skipped, 601 failed of 2064 ]
  p2p_money_transfer_on_us -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED or check error
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SKIPPED ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
	[ FAILED ]	Check FSPIOP-Source
	[ FAILED ]	Payee Content-Type
	[ FAILED ]	Payee Body TransferId
	[ SKIPPED ]	Payee Body Amount
[ 477 passed, 29 skipped, 610 failed of 2064 ]
  quoting_service -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be SEND
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
	[ FAILED ]	Payee FSPIOP-Source
	[ FAILED ]	Payee Content-Type
	[ FAILED ]	IlpPacket exists
	[ FAILED ]	confition exists
[ 479 passed, 30 skipped, 610 failed of 2064 ]
  quoting_service -> Get health status of Quoting Service
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	Response services to be an array
	[ SKIPPED ]	Expected services to have data store and status is OK
[ 480 passed, 30 skipped, 610 failed of 2064 ]
  quoting_service -> Get Quote
	[ SUCCESS ]	Response status to be 202
[ 484 passed, 30 skipped, 610 failed of 2064 ]
  quoting_service -> Send quote - missing date
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Error code 3102
	[ SUCCESS ]	Error message date is required
	[ SUCCESS ]	Missing mandatory element error
[ 487 passed, 30 skipped, 610 failed of 2064 ]
  quoting_service -> Send quote Copy
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Error code 3102
	[ SUCCESS ]	Check Missing mandatory element - Invalid accept header
[ 490 passed, 30 skipped, 610 failed of 2064 ]
  quoting_service -> Get Quote - Missing content type
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Missing mandatory element error
	[ SUCCESS ]	Check Error code 3102
[ 493 passed, 30 skipped, 610 failed of 2064 ]
  quoting_service -> Get Quote - Invalid content type
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Malformed syntax error
	[ SUCCESS ]	Check Error code 3101
[ 494 passed, 30 skipped, 610 failed of 2064 ]
  Authorizations -> Get authorizations
	[ SUCCESS ]	Response status to be 202
[ 495 passed, 30 skipped, 610 failed of 2064 ]
  Authorizations -> authorizations
	[ SUCCESS ]	Response status to be 200
[ 498 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check retriesLeft missing
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Missing mandatory element
	[ SUCCESS ]	Check Error code 3102
[ 501 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check authenticationType missing
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Missing mandatory element
	[ SUCCESS ]	Check Error code 3102
[ 504 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check currency missing
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Missing mandatory element
	[ SUCCESS ]	Check Error code 3102
[ 507 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check retriesLeft with non-number 
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Malformed syntax
	[ SUCCESS ]	Check Error code 3101
[ 510 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check retriesLeft with floating number
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Malformed syntax with floating retriesLeft
	[ SUCCESS ]	Check Error code 3101
[ 513 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check wrong authentication type
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Generic validation error
	[ SUCCESS ]	Check Error code 3100
[ 516 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check accept header missing
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Missing mandatory element - Accept
	[ SUCCESS ]	Check Error code 3102
[ 519 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check date missing
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Missing mandatory element 
	[ SUCCESS ]	Check Error code 3102
[ 522 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check fspiop-source missing
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check Generic validation error
	[ SUCCESS ]	Check Error code 3102
[ 525 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check Content-type missing
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check missing mandatory element
	[ SUCCESS ]	Check Error code 3102
[ 528 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check  Unacceptable Content-type 
	[ SUCCESS ]	Response status to be 406
	[ SUCCESS ]	Check missing mandatory element
	[ SUCCESS ]	Check Error code 3001
[ 529 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check Authorizatons - wrong responseType
	[ SUCCESS ]	Response status to be 200
[ 532 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check authentication missing - 400 - 3102 Error code
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check mandatory element missing
	[ SUCCESS ]	Check error code 3102
[ 535 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check authenticationValue missing - 400 - 3102 Error code
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check mandatory element missing
	[ SUCCESS ]	Check error code 3102
[ 538 passed, 30 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check responseType missing - 400 - 3102 Error code
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check mandatory element missing
	[ SUCCESS ]	Check error code 3102
[ 539 passed, 32 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check authorization with content-type header missing
	[ SUCCESS ]	Response status to be 400
	[ SKIPPED ]	Check mandatory element missing
	[ SKIPPED ]	Check error code 3102
[ 542 passed, 32 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check authorization with date header missing
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check mandatory element missing
	[ SUCCESS ]	Check error code 3102
[ 545 passed, 32 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check authorization with fspiop header missing 
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check mandatory element missing
	[ SUCCESS ]	Check error code 3102
[ 548 passed, 32 skipped, 610 failed of 2064 ]
  Error-framework-authorizations -> Check authorization with accept header missing
	[ SUCCESS ]	Response status to be 400
	[ SUCCESS ]	Check mandatory element missing
	[ SUCCESS ]	Check error code 3101
[ 549 passed, 32 skipped, 610 failed of 2064 ]
  error-framework -> Check transactionRequest state - invalid transactionid
	[ SUCCESS ]	Response code status 202
[ 552 passed, 32 skipped, 610 failed of 2064 ]
  error-framework -> Payee initiate request - MIssing date
	[ SUCCESS ]	Response code status 400
	[ SUCCESS ]	Error message date is required
	[ SUCCESS ]	Check Error code 3102
[ 555 passed, 32 skipped, 610 failed of 2064 ]
  error-framework -> Payee initiate request - Missing fspiop-source
	[ SUCCESS ]	Response code status 400
	[ SUCCESS ]	Error message fspiop-source is required
	[ SUCCESS ]	Check Error code 3102
[ 558 passed, 32 skipped, 610 failed of 2064 ]
  error-framework -> Payee initiate request - Wrong content type version
	[ SUCCESS ]	Response code status 406
	[ SUCCESS ]	Error message Unacceptable version requested 
	[ SUCCESS ]	Check Error code 3001
[ 561 passed, 32 skipped, 610 failed of 2064 ]
  error-framework -> Payee initiate request - Unsupported Media Type
	[ SUCCESS ]	Response code status 400
	[ SUCCESS ]	Check Malformed syntax - Unsupported Media Type
	[ SUCCESS ]	Check Error code 3101
[ 562 passed, 32 skipped, 611 failed of 2064 ]
  received State -> Payee initiate request
	[ SUCCESS ]	Response code status 202
	[ FAILED ]	transactionRequestState is RECEIVED
[ 563 passed, 32 skipped, 615 failed of 2064 ]
  received State -> send RECEIVED state
	[ SUCCESS ]	Response code status 200
	[ FAILED ]	check fsp source
	[ FAILED ]	check fsp destination
	[ FAILED ]	check method put
	[ FAILED ]	transactionId matches
[ 564 passed, 33 skipped, 615 failed of 2064 ]
  received State -> Check transactionRequest state
	[ SUCCESS ]	Response code status 202
	[ SKIPPED ]	transactionRequestState is RECEIVED
[ 565 passed, 33 skipped, 616 failed of 2064 ]
  rejected State -> Payee initiate request
	[ SUCCESS ]	Response code status 202
	[ FAILED ]	transactionRequestState is RECEIVED
[ 566 passed, 33 skipped, 620 failed of 2064 ]
  rejected State -> send REJECTED state
	[ SUCCESS ]	Response code status 200
	[ FAILED ]	check fsp source
	[ FAILED ]	check fsp destination
	[ FAILED ]	check method put
	[ FAILED ]	transactionId matches
[ 567 passed, 34 skipped, 620 failed of 2064 ]
  rejected State -> Check transactionRequest state
	[ SUCCESS ]	Response code status 202
	[ SKIPPED ]	transactionRequestState is REJECTED
[ 568 passed, 34 skipped, 620 failed of 2064 ]
  transaction_request_service -> transaction service health
	[ SUCCESS ]	Response status to be 200
[ 570 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Get payerfsp account id
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 571 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Active account for currency for payerfsp
	[ SUCCESS ]	Response code is 200
[ 572 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Active account for currency2 for payerfsp
	[ SUCCESS ]	Response code is 200
[ 574 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Get payeefsp account id
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 575 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Active account for currency for payeefsp
	[ SUCCESS ]	Response code is 200
[ 576 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Active account for currency2 for payeefsp
	[ SUCCESS ]	Response code is 200
[ 578 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Get testfsp1 account id
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 579 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Active account for currency for testfsp1
	[ SUCCESS ]	Response code is 200
[ 580 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Active account for currency2 for testfsp1
	[ SUCCESS ]	Response code is 200
[ 582 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Get testfsp2 account id
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 583 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Active account for currency for testfsp2
	[ SUCCESS ]	Response code is 200
[ 584 passed, 34 skipped, 620 failed of 2064 ]
  Pre-settlement account activation per participant and currency -> Active account for currency2 for testfsp2
	[ SUCCESS ]	Response code is 200
[ 586 passed, 34 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Get Existing Open Window
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	State should be OPEN
[ 588 passed, 34 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Close existent window
	[ SUCCESS ]	Status code is 200 or 400
	[ SUCCESS ]	New window State should be OPEN
[ 588 passed, 39 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Create Settlement for Closed Window in deferred settlement model for currency
	[ SKIPPED ]	Status code is 200
	[ SKIPPED ]	Settlement State should be PENDING_SETTLEMENT
	[ SKIPPED ]	Number of associated windows should be 1
	[ SKIPPED ]	Associated Settlement Window ID is the correct one
	[ SKIPPED ]	Associated Settlement Window state should be PENDING_SETTLEMENT
[ 588 passed, 40 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Prepare Settlement
	[ SKIPPED ]	Response code status is 200
[ 588 passed, 41 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Reserve Settlement
	[ SKIPPED ]	Response code status is 200
[ 588 passed, 42 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Commit Settlement
	[ SKIPPED ]	Response code status is 200
[ 588 passed, 43 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Settle Settlement
	[ SKIPPED ]	Response code status is 200
[ 588 passed, 48 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Create Settlement for Closed Window in default deferred settlement model 
	[ SKIPPED ]	Status code is 200
	[ SKIPPED ]	Settlement State should be PENDING_SETTLEMENT
	[ SKIPPED ]	Number of associated windows should be 1
	[ SKIPPED ]	Associated Settlement Window ID is the correct one
	[ SKIPPED ]	Associated Settlement Window state should be PENDING_SETTLEMENT
[ 588 passed, 49 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Prepare Settlement Default Settlement Model
	[ SKIPPED ]	Response code status is 200
[ 588 passed, 50 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Reserve Settlement Default Settlement Model
	[ SKIPPED ]	Response code status is 200
[ 588 passed, 51 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Commit Settlement Default Settlement Model
	[ SKIPPED ]	Response code status is 200
[ 588 passed, 52 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> Settle Settlement Default Settlement Model
	[ SKIPPED ]	Response code status is 200
[ 589 passed, 52 skipped, 620 failed of 2064 ]
  Create Settlement on the current open window -> get settlements models
	[ SUCCESS ]	status code is 200
[ 590 passed, 52 skipped, 620 failed of 2064 ]
  Store settlement and position balances before -> get balances for testfsp1
	[ SUCCESS ]	Response code is 200
[ 591 passed, 52 skipped, 620 failed of 2064 ]
  Store settlement and position balances before -> get balances for testfsp2
	[ SUCCESS ]	Response code is 200
[ 592 passed, 52 skipped, 620 failed of 2064 ]
  Store settlement and position balances before -> get balances for payerfsp
	[ SUCCESS ]	Response code is 200
[ 593 passed, 52 skipped, 620 failed of 2064 ]
  Store settlement and position balances before -> get balances for payeefsp
	[ SUCCESS ]	Response code is 200
[ 594 passed, 52 skipped, 620 failed of 2064 ]
  Store settlement and position balances before -> Get Hub balances
	[ SUCCESS ]	Response code is 200
[ 600 passed, 52 skipped, 625 failed of 2064 ]
  Send transfer $currency from SIM1 to SIM2 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 602 passed, 52 skipped, 632 failed of 2064 ]
  Send transfer $currency from SIM1 to SIM2 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 608 passed, 52 skipped, 637 failed of 2064 ]
  Send transfer $currency2 from SIM1 to PAYEEFSP -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 610 passed, 52 skipped, 644 failed of 2064 ]
  Send transfer $currency2 from SIM1 to PAYEEFSP -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 616 passed, 52 skipped, 649 failed of 2064 ]
  Send transfer $currency from PAYERFSP to SIM1 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 618 passed, 52 skipped, 656 failed of 2064 ]
  Send transfer $currency from PAYERFSP to SIM1 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 624 passed, 52 skipped, 661 failed of 2064 ]
  Send transfer $currency2 from SIM2 to PAYERFSP -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 626 passed, 52 skipped, 668 failed of 2064 ]
  Send transfer $currency2 from SIM2 to PAYERFSP -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 632 passed, 52 skipped, 673 failed of 2064 ]
  Send transfer $currency from PAYEEFSP to SIM2 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 634 passed, 52 skipped, 680 failed of 2064 ]
  Send transfer $currency from PAYEEFSP to SIM2 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 640 passed, 52 skipped, 685 failed of 2064 ]
  Send transfer $currency2 from PAYEEFSP to PAYERFSP -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 642 passed, 52 skipped, 692 failed of 2064 ]
  Send transfer $currency2 from PAYEEFSP to PAYERFSP -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 644 passed, 52 skipped, 692 failed of 2064 ]
  Create Settlement on the current open window -> Get Existing Open Window
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	State should be OPEN
[ 646 passed, 52 skipped, 692 failed of 2064 ]
  Create Settlement on the current open window -> Close existent window
	[ SUCCESS ]	Status code is 200 or 400
	[ SUCCESS ]	New window State should be OPEN
[ 646 passed, 52 skipped, 697 failed of 2064 ]
  Create Settlement on the current open window -> Create Settlement for Closed Window with Settlement Model for Currency
	[ FAILED ]	Status code is 200
	[ FAILED ]	Settlement State should be PENDING_SETTLEMENT
	[ FAILED ]	Number of associated windows should be 1
	[ FAILED ]	Associated Settlement Window ID is the correct one
	[ FAILED ]	Associated Settlement Window state should be PENDING_SETTLEMENT
[ 646 passed, 52 skipped, 702 failed of 2064 ]
  Create Settlement on the current open window -> Create Settlement for Closed Window for Default Settlement Model
	[ FAILED ]	Status code is 200
	[ FAILED ]	Settlement State should be PENDING_SETTLEMENT
	[ FAILED ]	Number of associated windows should be 1
	[ FAILED ]	Associated Settlement Window ID is the correct one
	[ FAILED ]	Associated Settlement Window state should be PENDING_SETTLEMENT
[ 647 passed, 52 skipped, 702 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
[ 648 passed, 52 skipped, 702 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
[ 649 passed, 52 skipped, 702 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for ttkdfsp
	[ SUCCESS ]	Response code is 200
[ 650 passed, 52 skipped, 702 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
[ 650 passed, 52 skipped, 703 failed of 2064 ]
  Prepare-settlements -> Prepare Settlement with deferred settlement model for currency
	[ FAILED ]	Response code status is 200
[ 651 passed, 52 skipped, 706 failed of 2064 ]
  Prepare-settlements -> check state for participants after prepare deferred settlement model
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_RECORDED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_RECORDED for all accounts
[ 651 passed, 52 skipped, 707 failed of 2064 ]
  Prepare-settlements -> Prepare Settlement with default settlement model
	[ FAILED ]	Response code status is 200
[ 652 passed, 52 skipped, 710 failed of 2064 ]
  Prepare-settlements -> check state for participants after prepare default settlement
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_RECORDED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_RECORDED for all accounts
[ 654 passed, 52 skipped, 710 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 account balance before and  after prepare should be the same
[ 656 passed, 52 skipped, 710 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 account balance before and after prepare should be the same
[ 658 passed, 52 skipped, 710 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp account balance before and after prepare should be the same
[ 660 passed, 52 skipped, 710 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp account balance before and after prepare should be the same
[ 660 passed, 52 skipped, 711 failed of 2064 ]
  reserve-settlement -> reserve Settlement with Currency Deferred Settlement Model
	[ FAILED ]	Response code status is 200
[ 661 passed, 52 skipped, 714 failed of 2064 ]
  reserve-settlement -> check state for participants after reserve with deferred settlement model
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_RESERVED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_RESERVEDfor all accounts
[ 661 passed, 52 skipped, 715 failed of 2064 ]
  reserve-settlement -> reserve Settlement with default settlement model
	[ FAILED ]	Response code status is 200
[ 662 passed, 52 skipped, 718 failed of 2064 ]
  reserve-settlement -> check state for participants after reserve with default settlement model
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_RESERVED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_RESERVEDfor all accounts
[ 664 passed, 52 skipped, 718 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 account balance before and  after reserve should be the same
[ 667 passed, 52 skipped, 718 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 account for currency balance before and after reserve should be the same
	[ SUCCESS ]	testfsp2 account for currency2 balance before and after reserve should be the same
[ 670 passed, 52 skipped, 718 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp account for currency balance before and after reserve should be the same
	[ SUCCESS ]	payerfsp account for currency2 balance before and after reserve should be the same
[ 673 passed, 52 skipped, 718 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp account for currency balance before and after Reserve should be the same
	[ SUCCESS ]	payeefsp account for currency 2 balance before and after Reserve should be the same
[ 673 passed, 52 skipped, 719 failed of 2064 ]
  commit-settlement -> commit Settlement with deferred settlement model
	[ FAILED ]	Response code status is 200
[ 674 passed, 52 skipped, 722 failed of 2064 ]
  commit-settlement -> check state for participants after commit deferred settlement model
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_COMMITTED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_COMMITTED for all accounts
[ 674 passed, 52 skipped, 723 failed of 2064 ]
  commit-settlement -> commit Settlement default settlement model
	[ FAILED ]	Response code status is 200
[ 675 passed, 52 skipped, 726 failed of 2064 ]
  commit-settlement -> check state for participants after commit default settlement model
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_COMMITTED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_COMMITTED for all accounts
[ 677 passed, 52 skipped, 726 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 account balance before and  after Commit should be the same
[ 679 passed, 52 skipped, 726 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 account balance before and after Commit should be the same
[ 681 passed, 52 skipped, 726 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp account balance before and after Commit should be the same
[ 683 passed, 52 skipped, 726 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp account balance before and after Commit should be the same
[ 685 passed, 52 skipped, 726 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> hub account balance check
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	hub reconciliation account balance before transfer and  after commit should be the same.
[ 685 passed, 52 skipped, 727 failed of 2064 ]
  settle-settlement -> settle Settlement with deferred settlement model
	[ FAILED ]	Response code status is 200
[ 686 passed, 52 skipped, 730 failed of 2064 ]
  settle-settlement -> check state for participants after settle with deferred settlement model
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status SETTLED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is SETTLED for all accounts
[ 686 passed, 52 skipped, 731 failed of 2064 ]
  settle-settlement -> settle Settlement default settlement model
	[ FAILED ]	Response code status is 200
[ 687 passed, 52 skipped, 734 failed of 2064 ]
  settle-settlement -> check state for participants after settle default settlement model
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status SETTLED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is SETTLED for all accounts
[ 689 passed, 52 skipped, 734 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 account balance before and  after Settle should be the same
[ 691 passed, 52 skipped, 734 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 account balance before and after Settle should be the same
[ 693 passed, 52 skipped, 734 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp account balance before and after Settle should be the same
[ 695 passed, 52 skipped, 734 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp settlement balance before and after Settle should be the same
[ 697 passed, 52 skipped, 734 failed of 2064 ]
  Pre-settlement account activation per participant for $currency -> Get payerfsp account id
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 698 passed, 52 skipped, 734 failed of 2064 ]
  Pre-settlement account activation per participant for $currency -> Active account for payerfsp
	[ SUCCESS ]	Response code is 200
[ 700 passed, 52 skipped, 734 failed of 2064 ]
  Pre-settlement account activation per participant for $currency -> Get payeefsp account id
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 701 passed, 52 skipped, 734 failed of 2064 ]
  Pre-settlement account activation per participant for $currency -> Active account for payeefsp
	[ SUCCESS ]	Response code is 200
[ 703 passed, 52 skipped, 734 failed of 2064 ]
  Pre-settlement account activation per participant for $currency -> Get testfsp1 account id 
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 704 passed, 52 skipped, 734 failed of 2064 ]
  Pre-settlement account activation per participant for $currency -> Active account for testfsp1
	[ SUCCESS ]	Response code is 200
[ 706 passed, 52 skipped, 734 failed of 2064 ]
  Pre-settlement account activation per participant for $currency -> Get testfsp2 account id 
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 707 passed, 52 skipped, 734 failed of 2064 ]
  Pre-settlement account activation per participant for $currency -> Active account for testfsp2
	[ SUCCESS ]	Response code is 200
[ 709 passed, 52 skipped, 734 failed of 2064 ]
  Create Settlement on the current open window -> Get Existing Open Window
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	State should be OPEN
[ 711 passed, 52 skipped, 734 failed of 2064 ]
  Create Settlement on the current open window -> Close existent window
	[ SUCCESS ]	Status code is 200 or 400
	[ SUCCESS ]	New window State should be OPEN
[ 711 passed, 57 skipped, 734 failed of 2064 ]
  Create Settlement on the current open window -> Create Settlement for Closed Window
	[ SKIPPED ]	Status code is 200
	[ SKIPPED ]	Settlement State should be PENDING_SETTLEMENT
	[ SKIPPED ]	Number of associated windows should be 1
	[ SKIPPED ]	Associated Settlement Window ID is the correct one
	[ SKIPPED ]	Associated Settlement Window state should be PENDING_SETTLEMENT
[ 711 passed, 58 skipped, 734 failed of 2064 ]
  Create Settlement on the current open window -> Prepare Settlement
	[ SKIPPED ]	Response code status is 200
[ 711 passed, 59 skipped, 734 failed of 2064 ]
  Create Settlement on the current open window -> Reserve Settlement
	[ SKIPPED ]	Response code status is 200
[ 711 passed, 60 skipped, 734 failed of 2064 ]
  Create Settlement on the current open window -> Commit Settlement
	[ SKIPPED ]	Response code status is 200
[ 711 passed, 61 skipped, 734 failed of 2064 ]
  Create Settlement on the current open window -> Settle Settlement
	[ SKIPPED ]	Response code status is 200
[ 712 passed, 61 skipped, 734 failed of 2064 ]
  Store settlement and position balances before -> get balances for testfsp1
	[ SUCCESS ]	Response code is 200
[ 713 passed, 61 skipped, 734 failed of 2064 ]
  Store settlement and position balances before -> get balances for testfsp2
	[ SUCCESS ]	Response code is 200
[ 714 passed, 61 skipped, 734 failed of 2064 ]
  Store settlement and position balances before -> get balances for payerfsp
	[ SUCCESS ]	Response code is 200
[ 715 passed, 61 skipped, 734 failed of 2064 ]
  Store settlement and position balances before -> get balances for payeefsp
	[ SUCCESS ]	Response code is 200
[ 716 passed, 61 skipped, 734 failed of 2064 ]
  Store settlement and position balances before -> Get Hub balances
	[ SUCCESS ]	Response code is 200
[ 722 passed, 61 skipped, 739 failed of 2064 ]
  Send transfer in $currency from SIM1 to SIM2 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 724 passed, 61 skipped, 746 failed of 2064 ]
  Send transfer in $currency from SIM1 to SIM2 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 730 passed, 61 skipped, 751 failed of 2064 ]
  Send transfer in $currency from SIM1 to PAYEEFSP -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 732 passed, 61 skipped, 758 failed of 2064 ]
  Send transfer in $currency from SIM1 to PAYEEFSP -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 738 passed, 61 skipped, 763 failed of 2064 ]
  Send transfer in $currency from PAYERFSP to SIM1 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 740 passed, 61 skipped, 770 failed of 2064 ]
  Send transfer in $currency from PAYERFSP to SIM1 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 746 passed, 61 skipped, 775 failed of 2064 ]
  Send transfer in $currency from SIM2 to PAYERFSP -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 748 passed, 61 skipped, 782 failed of 2064 ]
  Send transfer in $currency from SIM2 to PAYERFSP -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 754 passed, 61 skipped, 787 failed of 2064 ]
  Send transfer in $currency from PAYEEFSP to SIM2 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 756 passed, 61 skipped, 794 failed of 2064 ]
  Send transfer in $currency from PAYEEFSP to SIM2 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 762 passed, 61 skipped, 799 failed of 2064 ]
  Send transfer in $currency from PAYEEFSP to PAYERFSP -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 764 passed, 61 skipped, 806 failed of 2064 ]
  Send transfer in $currency from PAYEEFSP to PAYERFSP -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 766 passed, 61 skipped, 806 failed of 2064 ]
  Create Settlement on the current open window -> Get Existing Open Window
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	State should be OPEN
[ 768 passed, 61 skipped, 806 failed of 2064 ]
  Create Settlement on the current open window -> Close existent window
	[ SUCCESS ]	Status code is 200 or 400
	[ SUCCESS ]	New window State should be OPEN
[ 768 passed, 61 skipped, 811 failed of 2064 ]
  Create Settlement on the current open window -> Create Settlement for Closed Window
	[ FAILED ]	Status code is 200
	[ FAILED ]	Settlement State should be PENDING_SETTLEMENT
	[ FAILED ]	Number of associated windows should be 1
	[ FAILED ]	Associated Settlement Window ID is the correct one
	[ FAILED ]	Associated Settlement Window state should be PENDING_SETTLEMENT
[ 769 passed, 61 skipped, 811 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
[ 770 passed, 61 skipped, 811 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
[ 771 passed, 61 skipped, 811 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for ttkdfsp
	[ SUCCESS ]	Response code is 200
[ 772 passed, 61 skipped, 811 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
[ 772 passed, 61 skipped, 812 failed of 2064 ]
  Prepare-settlement -> Prepare Settlement
	[ FAILED ]	Response code status is 200
[ 773 passed, 61 skipped, 815 failed of 2064 ]
  Prepare-settlement -> check state for participants after prepare
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_RECORDED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_RECORDED for all accounts
[ 776 passed, 61 skipped, 815 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 settlement account balance before and  after prepare should be the same
	[ SUCCESS ]	testfsp1 position account balance before and  after prepare should be the same.
[ 779 passed, 61 skipped, 815 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 settlement account balance before and after prepare should be the same
	[ SUCCESS ]	testfsp2 position account balance before and after prepare should be the same.
[ 782 passed, 61 skipped, 815 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp settlement account balance before and after prepare should be the same
	[ SUCCESS ]	payerfsp position account balance before and after prepare should be the same.
[ 785 passed, 61 skipped, 815 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp settlement account balance before and after prepare should be the same
	[ SUCCESS ]	payeefsp position account balance before and after prepare should be the same.
[ 785 passed, 61 skipped, 816 failed of 2064 ]
  reserve-settlement -> reserve Settlement
	[ FAILED ]	Response code status is 200
[ 786 passed, 61 skipped, 819 failed of 2064 ]
  reserve-settlement -> check state for participants after prepare
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_RESERVED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_RESERVEDfor all accounts
[ 789 passed, 61 skipped, 819 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 settlement account balance before and  after reserve should be the same
	[ SUCCESS ]	testfsp1 position account balance before and  after reserve  should be the same.
[ 792 passed, 61 skipped, 819 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 settlement account balance before and after reserve should be the same
	[ SUCCESS ]	testfsp2 position account balance before and after reserve should be the same.
[ 795 passed, 61 skipped, 819 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp settlement account balance before and after reserve should be the same
	[ SUCCESS ]	payerfsp position account balance before and after reserve should be the same.
[ 798 passed, 61 skipped, 819 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp settlement account balance before and after Reserve should be the same
	[ SUCCESS ]	payeefsp position account balance before and after Reserve should be the same.
[ 798 passed, 61 skipped, 820 failed of 2064 ]
  commit-settlement -> commit Settlement
	[ FAILED ]	Response code status is 200
[ 799 passed, 61 skipped, 823 failed of 2064 ]
  commit-settlement -> check state for participants after commit
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_COMMITTED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_COMMITTED for all accounts
[ 802 passed, 61 skipped, 823 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 settlement account balance before and  after Commit should be the same
	[ SUCCESS ]	testfsp1 position account balance before and  after Commit should be the same.
[ 805 passed, 61 skipped, 823 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 settlement account balance before and after Commit should be the same
	[ SUCCESS ]	testfsp2 position account balance before and after Commit should be the same.
[ 808 passed, 61 skipped, 823 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp settlement account balance before and after Commit should be the same
	[ SUCCESS ]	payerfsp position account balance before and after Commit should be the same.
[ 811 passed, 61 skipped, 823 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp settlement account balance before and after Commit should be the same
	[ SUCCESS ]	payeefsp position account balance before and after Commit should be the same.
[ 814 passed, 61 skipped, 823 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> hub account balance check
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	hub reconciliation account balance before transfer and  after commit should be the same.
	[ SUCCESS ]	hub multilateral account balance before transfer and  after commit should be the same.
[ 814 passed, 61 skipped, 824 failed of 2064 ]
  settle-settlement -> settle Settlement
	[ FAILED ]	Response code status is 200
[ 815 passed, 61 skipped, 827 failed of 2064 ]
  settle-settlement -> check state for participants after commit
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status SETTLED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is SETTLED for all accounts
[ 818 passed, 61 skipped, 827 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 settlement account balance before and  after Settle should be the same
	[ SUCCESS ]	testfsp1 position account balance before and  after Settle should be the same.
[ 821 passed, 61 skipped, 827 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 settlement account balance before and after Settle should be the same
	[ SUCCESS ]	testfsp2 position account balance before and after Settle should be the same.
[ 824 passed, 61 skipped, 827 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp settlement account balance before and after Settle should be the same
	[ SUCCESS ]	payerfsp position account balance before and after Settle should be the same.
[ 827 passed, 61 skipped, 827 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp settlement account balance before and after Settle should be the same
	[ SUCCESS ]	payeefsp position account balance before and after Settle should be the same.
[ 829 passed, 61 skipped, 827 failed of 2064 ]
  Pre-settlement account activation per participant for $currency2 -> Get payerfsp account id
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 830 passed, 61 skipped, 827 failed of 2064 ]
  Pre-settlement account activation per participant for $currency2 -> Active account for payerfsp
	[ SUCCESS ]	Response code is 200
[ 832 passed, 61 skipped, 827 failed of 2064 ]
  Pre-settlement account activation per participant for $currency2 -> Get payeefsp account id
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 833 passed, 61 skipped, 827 failed of 2064 ]
  Pre-settlement account activation per participant for $currency2 -> Active account for payeefsp
	[ SUCCESS ]	Response code is 200
[ 835 passed, 61 skipped, 827 failed of 2064 ]
  Pre-settlement account activation per participant for $currency2 -> Get testfsp1 account id 
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 836 passed, 61 skipped, 827 failed of 2064 ]
  Pre-settlement account activation per participant for $currency2 -> Active account for testfsp1
	[ SUCCESS ]	Response code is 200
[ 838 passed, 61 skipped, 827 failed of 2064 ]
  Pre-settlement account activation per participant for $currency2 -> Get testfsp2 account id 
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Account id not null
[ 839 passed, 61 skipped, 827 failed of 2064 ]
  Pre-settlement account activation per participant for $currency2 -> Active account for testfsp2
	[ SUCCESS ]	Response code is 200
[ 841 passed, 61 skipped, 827 failed of 2064 ]
  Create Settlement on the current open window -> Get Existing Open Window
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	State should be OPEN
[ 843 passed, 61 skipped, 827 failed of 2064 ]
  Create Settlement on the current open window -> Close existent window
	[ SUCCESS ]	Status code is 200 or 400
	[ SUCCESS ]	New window State should be OPEN
[ 843 passed, 66 skipped, 827 failed of 2064 ]
  Create Settlement on the current open window -> Create Settlement for Closed Window
	[ SKIPPED ]	Status code is 200
	[ SKIPPED ]	Settlement State should be PENDING_SETTLEMENT
	[ SKIPPED ]	Number of associated windows should be 1
	[ SKIPPED ]	Associated Settlement Window ID is the correct one
	[ SKIPPED ]	Associated Settlement Window state should be PENDING_SETTLEMENT
[ 843 passed, 67 skipped, 827 failed of 2064 ]
  Create Settlement on the current open window -> Prepare Settlement
	[ SKIPPED ]	Response code status is 200
[ 843 passed, 68 skipped, 827 failed of 2064 ]
  Create Settlement on the current open window -> Reserve Settlement
	[ SKIPPED ]	Response code status is 200
[ 843 passed, 69 skipped, 827 failed of 2064 ]
  Create Settlement on the current open window -> Commit Settlement
	[ SKIPPED ]	Response code status is 200
[ 843 passed, 70 skipped, 827 failed of 2064 ]
  Create Settlement on the current open window -> Settle Settlement
	[ SKIPPED ]	Response code status is 200
[ 844 passed, 70 skipped, 827 failed of 2064 ]
  Store settlement and position balances before -> get balances for testfsp1
	[ SUCCESS ]	Response code is 200
[ 845 passed, 70 skipped, 827 failed of 2064 ]
  Store settlement and position balances before -> get balances for testfsp2
	[ SUCCESS ]	Response code is 200
[ 846 passed, 70 skipped, 827 failed of 2064 ]
  Store settlement and position balances before -> get balances for payerfsp
	[ SUCCESS ]	Response code is 200
[ 847 passed, 70 skipped, 827 failed of 2064 ]
  Store settlement and position balances before -> get balances for payeefsp
	[ SUCCESS ]	Response code is 200
[ 848 passed, 70 skipped, 827 failed of 2064 ]
  Store settlement and position balances before -> Get Hub balances
	[ SUCCESS ]	Response code is 200
[ 854 passed, 70 skipped, 832 failed of 2064 ]
  Send transfer from SIM1 to SIM2 in $currency2 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 856 passed, 70 skipped, 839 failed of 2064 ]
  Send transfer from SIM1 to SIM2 in $currency2 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 862 passed, 70 skipped, 844 failed of 2064 ]
  Send transfer from SIM1 to PAYEEFSP in $currency2 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 864 passed, 70 skipped, 851 failed of 2064 ]
  Send transfer from SIM1 to PAYEEFSP in $currency2 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 870 passed, 70 skipped, 856 failed of 2064 ]
  Send transfer from PAYERFSP to SIM1 in $currency2 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 872 passed, 70 skipped, 863 failed of 2064 ]
  Send transfer from PAYERFSP to SIM1 in $currency2 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 878 passed, 70 skipped, 868 failed of 2064 ]
  Send transfer from SIM2 to PAYERFSP in $currency2 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 880 passed, 70 skipped, 875 failed of 2064 ]
  Send transfer from SIM2 to PAYERFSP in $currency2 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 886 passed, 70 skipped, 880 failed of 2064 ]
  Send transfer from PAYEEFSP to SIM2 in $currency2 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 888 passed, 70 skipped, 887 failed of 2064 ]
  Send transfer from PAYEEFSP to SIM2 in $currency2 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 894 passed, 70 skipped, 892 failed of 2064 ]
  Send transfer from PAYEEFSP to PAYERFSP in $currency2 -> Send quote
	[ SUCCESS ]	Response status to be 202
	[ SUCCESS ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback body should contain transferAmount
	[ FAILED ]	Callback transferAmount (amount & currency)to match the request
	[ FAILED ]	Callback content-type to be quotes
	[ SUCCESS ]	Request amountType to be RECEIVE
	[ SUCCESS ]	Request transactionType scenario to be TRANSFER
	[ SUCCESS ]	Request transactionType initiator to be PAYER
	[ SUCCESS ]	Request transactionType initiatorType to be CONSUMER
[ 896 passed, 70 skipped, 899 failed of 2064 ]
  Send transfer from PAYEEFSP to PAYERFSP in $currency2 -> Send transfer
	[ FAILED ]	Response status to be 202
	[ FAILED ]	Response statusText be Accepted
	[ FAILED ]	Callback Content Length not 0
	[ FAILED ]	Callback FSP Destination equal to request FSP Source
	[ FAILED ]	Callback transferState to be COMMITTED
	[ FAILED ]	Callback content-type to be transfers
	[ SUCCESS ]	Request transferId same as quote request transferId
	[ SUCCESS ]	Request transferAmount (amount & currency) to match quote request
	[ FAILED ]	Request FSP source the same as quote callback FSP destination
[ 898 passed, 70 skipped, 899 failed of 2064 ]
  Create Settlement on the current open window -> Get Existing Open Window
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	State should be OPEN
[ 900 passed, 70 skipped, 899 failed of 2064 ]
  Create Settlement on the current open window -> Close existent window
	[ SUCCESS ]	Status code is 200 or 400
	[ SUCCESS ]	New window State should be OPEN
[ 900 passed, 70 skipped, 904 failed of 2064 ]
  Create Settlement on the current open window -> Create Settlement for Closed Window
	[ FAILED ]	Status code is 200
	[ FAILED ]	Settlement State should be PENDING_SETTLEMENT
	[ FAILED ]	Number of associated windows should be 1
	[ FAILED ]	Associated Settlement Window ID is the correct one
	[ FAILED ]	Associated Settlement Window state should be PENDING_SETTLEMENT
[ 901 passed, 70 skipped, 904 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
[ 902 passed, 70 skipped, 904 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
[ 903 passed, 70 skipped, 904 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for ttkdfsp
	[ SUCCESS ]	Response code is 200
[ 904 passed, 70 skipped, 904 failed of 2064 ]
  Store Settlement&Position Account Balances After Transfers -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
[ 904 passed, 70 skipped, 905 failed of 2064 ]
  Prepare-settlement -> Prepare Settlement
	[ FAILED ]	Response code status is 200
[ 905 passed, 70 skipped, 908 failed of 2064 ]
  Prepare-settlement -> check state for participants after prepare
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_RECORDED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_RECORDED for all accounts
[ 908 passed, 70 skipped, 908 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 settlement account balance before and  after prepare should be the same
	[ SUCCESS ]	testfsp1 position account balance before and  after prepare should be the same.
[ 911 passed, 70 skipped, 908 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 settlement account balance before and after prepare should be the same
	[ SUCCESS ]	testfsp2 position account balance before and after prepare should be the same.
[ 914 passed, 70 skipped, 908 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp settlement account balance before and after prepare should be the same
	[ SUCCESS ]	payerfsp position account balance before and after prepare should be the same.
[ 917 passed, 70 skipped, 908 failed of 2064 ]
  Store Settlement&Position Account Balances After Prepare -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp settlement account balance before and after prepare should be the same
	[ SUCCESS ]	payeefsp position account balance before and after prepare should be the same.
[ 917 passed, 70 skipped, 909 failed of 2064 ]
  reserve-settlement -> reserve Settlement
	[ FAILED ]	Response code status is 200
[ 918 passed, 70 skipped, 912 failed of 2064 ]
  reserve-settlement -> check state for participants after prepare
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_RESERVED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_RESERVEDfor all accounts
[ 921 passed, 70 skipped, 912 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 settlement account balance before and  after reserve should be the same
	[ SUCCESS ]	testfsp1 position account balance before and  after reserve  should be the same.
[ 924 passed, 70 skipped, 912 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 settlement account balance before and after reserve should be the same
	[ SUCCESS ]	testfsp2 position account balance before and after reserve should be the same.
[ 927 passed, 70 skipped, 912 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp settlement account balance before and after reserve should be the same
	[ SUCCESS ]	payerfsp position account balance before and after reserve should be the same.
[ 930 passed, 70 skipped, 912 failed of 2064 ]
  Store Settlement&Position Account Balances After Reserve -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp settlement account balance before and after Reserve should be the same
	[ SUCCESS ]	payeefsp position account balance before and after Reserve should be the same.
[ 930 passed, 70 skipped, 913 failed of 2064 ]
  commit-settlement -> commit Settlement
	[ FAILED ]	Response code status is 200
[ 931 passed, 70 skipped, 916 failed of 2064 ]
  commit-settlement -> check state for participants after commit
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status PS_TRANSFERS_COMMITTED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is PS_TRANSFERS_COMMITTED for all accounts
[ 934 passed, 70 skipped, 916 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 settlement account balance before and  after Commit should be the same
	[ SUCCESS ]	testfsp1 position account balance before and  after Commit should be the same.
[ 937 passed, 70 skipped, 916 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 settlement account balance before and after Commit should be the same
	[ SUCCESS ]	testfsp2 position account balance before and after Commit should be the same.
[ 940 passed, 70 skipped, 916 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp settlement account balance before and after Commit should be the same
	[ SUCCESS ]	payerfsp position account balance before and after Commit should be the same.
[ 943 passed, 70 skipped, 916 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp settlement account balance before and after Commit should be the same
	[ SUCCESS ]	payeefsp position account balance before and after Commit should be the same.
[ 946 passed, 70 skipped, 916 failed of 2064 ]
  Store Settlement&Position Account Balances After commit -> hub account balance check
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	hub reconciliation account balance before transfer and  after commit should be the same.
	[ SUCCESS ]	hub multilateral account balance before transfer and  after commit should be the same.
[ 946 passed, 70 skipped, 917 failed of 2064 ]
  settle-settlement -> settle Settlement
	[ FAILED ]	Response code status is 200
[ 947 passed, 70 skipped, 920 failed of 2064 ]
  settle-settlement -> check state for participants after commit
	[ FAILED ]	Response code status is 200
	[ FAILED ]	Check status SETTLED
	[ FAILED ]	Check status for window is PENDING SETTLEMENT
	[ SUCCESS ]	Account state is SETTLED for all accounts
[ 950 passed, 70 skipped, 920 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for testfsp1
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp1 settlement account balance before and  after Settle should be the same
	[ SUCCESS ]	testfsp1 position account balance before and  after Settle should be the same.
[ 953 passed, 70 skipped, 920 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for testfsp2
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	testfsp2 settlement account balance before and after Settle should be the same
	[ SUCCESS ]	testfsp2 position account balance before and after Settle should be the same.
[ 956 passed, 70 skipped, 920 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for payerfsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payerfsp settlement account balance before and after Settle should be the same
	[ SUCCESS ]	payerfsp position account balance before and after Settle should be the same.
[ 959 passed, 70 skipped, 920 failed of 2064 ]
  Store Settlement&Position Account Balances After Settle -> Get balances for payeefsp
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	payeefsp settlement account balance before and after Settle should be the same
	[ SUCCESS ]	payeefsp position account balance before and after Settle should be the same.
[ 960 passed, 70 skipped, 920 failed of 2064 ]
  api-tests/admin-api-tests -> Get participants list
	[ SUCCESS ]	Response code is 200
[ 961 passed, 70 skipped, 920 failed of 2064 ]
  api-tests/admin-api-tests -> Get participant
	[ SUCCESS ]	Response code is 200
[ 962 passed, 70 skipped, 920 failed of 2064 ]
  api-tests/admin-api-tests -> Get Hub account
	[ SUCCESS ]	Response code is 200
[ 963 passed, 70 skipped, 920 failed of 2064 ]
  api-tests/admin-api-tests -> Get participants endpoints
	[ SUCCESS ]	Response code is 200
[ 964 passed, 70 skipped, 920 failed of 2064 ]
  api-tests/admin-api-tests -> Get limits all FSPs
	[ SUCCESS ]	Response code is 200
[ 966 passed, 70 skipped, 920 failed of 2064 ]
  api-tests/admin-api-tests -> Get participant position
	[ SUCCESS ]	Response code is 200
	[ SUCCESS ]	Atleast one account position should be returned
[ 972 passed, 71 skipped, 931 failed of 2064 ]
  api-tests/quotes -> FNLN-Send Quotes - missing FN
	[ SUCCESS ]	Response code 202
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 978 passed, 72 skipped, 942 failed of 2064 ]
  api-tests/quotes -> FNLN-Send Quotes - missing LN
	[ SUCCESS ]	Response code 202
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 981 passed, 72 skipped, 942 failed of 2064 ]
  api-tests/quotes -> FNLN-Send Quotes - Invalid Lastname (not string)
	[ SUCCESS ]	Response code 400
	[ SUCCESS ]	Error code is 3100
	[ SUCCESS ]	ERROR msg is Malformed Payer Lastname
[ 987 passed, 73 skipped, 953 failed of 2064 ]
  api-tests/quotes -> FNLN-Send Quotes - Payer personal info missing
	[ SUCCESS ]	Response code 202
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 993 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/quotes -> FNLN-Send Quotes - String payerFN (Mats123)
	[ SUCCESS ]	Response code 202
	[ SKIPPED ]	Callback Validate JWS
	[ FAILED ]	Payee Side Request Header - fspiop-source is same
	[ FAILED ]	Payee Side Request Header - fspiop-destination is same
	[ FAILED ]	Payee Side Request Header - fspiop-signature is same
	[ FAILED ]	Payee Side Request Header - accept is same
	[ FAILED ]	Payee Side Request Header - content-type is same
	[ FAILED ]	Payee Side Request Header - fspiop-uri is same
	[ FAILED ]	Payee Side Request Header - fspiop-http-method is same
	[ FAILED ]	Callback Header - fspiop-source is fspiop-destination in request
	[ SUCCESS ]	Callback Header - fspiop-desination is fspiop-source in request
	[ SUCCESS ]	Callback Header - content-type is application/vnd.interoperability.quotes+json;version=1.0
	[ SUCCESS ]	Callback Header - accept is empty
	[ FAILED ]	Callback Header - fspiop-uri is /quotes/quoteId
	[ SUCCESS ]	Callback Header - fspiop-http-method is PUT
	[ SUCCESS ]	Callback Body - quoteId is null
	[ FAILED ]	Callback Body - ilpPacket is not null
	[ FAILED ]	Callback Body - condition is not nul
[ 996 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/quotes -> FNLN-Send Quote - String payerFN (Mats123@#$)
	[ SUCCESS ]	Response code 400
	[ SUCCESS ]	Error code is 3100
	[ SUCCESS ]	ERROR msg is Malformed Payer Lastname
[ 999 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/Quotes/DOB -> Send Quote - Malformed DOB
	[ SUCCESS ]	Response code should be 400
	[ SUCCESS ]	Error code 3100
	[ SUCCESS ]	Malformed DOB from payer
[ 1002 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/Quotes/DOB -> Send Quote - Empty string DOB
	[ SUCCESS ]	Response code should be 400
	[ SUCCESS ]	Error code 3100
	[ SUCCESS ]	Malformed DOB from payer
[ 1005 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/Quotes/DOB -> Send Quote - null string DOB
	[ SUCCESS ]	Response code should be 400
	[ SUCCESS ]	Error code 3100
	[ SUCCESS ]	Malformed DOB from payer
[ 1008 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/Quotes/DOB -> Send Quote - null DOB
	[ SUCCESS ]	Response code should be 400
	[ SUCCESS ]	Error code 3100
	[ SUCCESS ]	Malformed DOB from payer
[ 1011 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/Quotes/DOB -> Send Quote - Invalid DOB format
	[ SUCCESS ]	Response code should be 400
	[ SUCCESS ]	Error code 3100
	[ SUCCESS ]	Malformed DOB from payer
[ 1014 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/Quotes/DOB -> Send Quote - MIssing DOB on payer object
	[ SUCCESS ]	Response code should be 400
	[ SUCCESS ]	Error code 3100
	[ SUCCESS ]	Malformed DOB from payer
[ 1017 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/Quotes/DOB -> Send Quote - Malformed DOB2
	[ SUCCESS ]	Response code should be 400
	[ SUCCESS ]	Error code 3100
	[ SUCCESS ]	Malformed DOB from payer
[ 1020 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/Quotes/DOB -> Send Quote - Malformed DOB3
	[ SUCCESS ]	Response code should be 400
	[ SUCCESS ]	Error code 3100
	[ SUCCESS ]	Malformed DOB from payer
[ 1022 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/SettlementWindows -> Window- state (OPEN)
	[ SUCCESS ]	Response status to be 200
	[ SUCCESS ]	Check state for window is OPEN
[ 1023 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/SettlementWindows -> ValidRequest - closedWindowById
	[ SUCCESS ]	Response status to be 200
[ 1024 passed, 74 skipped, 964 failed of 2064 ]
  api-tests/SettlementWindows -> Bad Request-CloseWindow
	[ SUCCESS ]	Response status to be 400
[ 1024 passed, 74 skipped, 966 failed of 2064 ]
  api-tests/SettlementWindows -> Window- state (SETTLED)
	[ FAILED ]	Response status to be 200
	[ FAILED ]	Check state for window is SETTLED

--------------------FINAL REPORT--------------------
p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE
	Add Participant to ALS - POST - /participants/{Type}/{ID} - [0/0]
	Add Party to Simulator - POST - /repository/parties - [0/0]
	Get party information - GET - /parties/{Type}/{ID} - [6/10]
	Send quote - POST - /quotes - [4/15]
	Send transfer - POST - /transfers - [1/13]
p2p_money_transfer - p2p_happy_path with subID
	Add Participant to ALS - POST - /participants/{Type}/{ID}/{SubId} - [0/0]
	Add Party to Simulator - POST - /repository/parties - [0/0]
	Get party information - GET - /parties/{Type}/{ID}/{SubId} - [6/11]
	Send quote - POST - /quotes - [4/15]
	Send transfer - POST - /transfers - [1/13]
Fulfil Reserved 1.0
	Send Quote - RECEIVE - POST - /quotes - [9/20]
	Send Transfer-Prepare - POST - /transfers - [0/1]
	Send Fulfill-Reserved - PUT - /transfers/{ID} - [1/1]
	Check Transfer status immediately - GET - /transfers/{ID} - [8/10]
	Check Transfer status after expiry time - GET - /transfers/{ID} - [9/11]
payee_invalid_fulfillment
	Store SIMPAYER position - GET - /participants/{name}/positions - [1/1]
	Store SIMPAYEE position - GET - /participants/{name}/positions - [1/1]
	Send Quote - RECEIVE - POST - /quotes - [9/20]
	Send Prepare - POST - /transfers - [0/2]
	Send Payee Invalid Fulfillment - PUT - /transfers/{ID} - [2/3]
	Check Transfer status on SIMPAYER - ABORTED - GET - /transfers/{ID} - [8/11]
	Check Payeefsp position - GET - /participants/{name}/positions - [2/2]
	Check Payerfsp positio - GET - /participants/{name}/positions - [2/2]
payee_invalid_timestamp
	Store SIMPAYER position - GET - /participants/{name}/positions - [1/1]
	Store SIMPAYEE position - GET - /participants/{name}/positions - [1/1]
	Send Quote - RECEIVE - POST - /quotes - [9/20]
	Send Prepare - POST - /transfers - [0/4]
	Send Payee Invalid Timestamp - PUT - /transfers/{ID} - [1/1]
	Check Transfer status on SIMPAYER - ABORTED - GET - /transfers/{ID} - [9/11]
	Check Payeefsp position - GET - /participants/{name}/positions - [2/2]
	Check Payerfsp positio - GET - /participants/{name}/positions - [2/2]
payee_abort_v1.1
	Store SIMPAYER position before prepare - GET - /participants/{name}/positions - [1/1]
	Store NORESPONSE_SIMPAYEE position before prepare - GET - /participants/{name}/positions - [1/1]
	Send Prepare - POST - /transfers - [2/2]
	Store SIMPAYER position after Prepare - GET - /participants/{name}/positions - [1/1]
	Send SIMPAYEE Abort - should do nothing but log in fulfil handler - PUT - /transfers/{ID} - [1/1]
	Check SIMPAYER position after Abort to wrong URL - GET - /participants/{name}/positions - [2/2]
	Send Fulfill-Reject - PUT - /transfers/{ID}/error - [1/1]
	Check Transfer status - ABORTED - GET - /transfers/{ID} - [10/10]
	Check SIMPAYER position after Abort - GET - /participants/{name}/positions - [2/2]
	Check NORESPONSE_SIMPAYEE position after Abort - GET - /participants/{name}/positions - [2/2]
p2p_money_transfer - p2p_happy_path RECEIVE_QUOTE
	Add Participant to ALS - POST - /participants/{Type}/{ID} - [0/0]
	Add Party to Simulator - POST - /repository/parties - [0/0]
	Send quote - POST - /quotes - [9/24]
	Send transfer - POST - /transfers - [1/27]
	Duplicate transfer - POST - /transfers - [0/12]
positive
	Send Quote - RECEIVE - POST - /quotes - [9/20]
	Send Transfer-Prepare - POST - /transfers - [1/1]
	Send Fulfill - PUT - /transfers/{ID} - [1/1]
	Duplicate Fulfill - PUT - /transfers/{ID} - [1/1]
	Check Transfer status - GET - /transfers/{ID} - [11/11]
negative
	Send Quote - RECEIVE - POST - /quotes - [9/20]
	Send Transfer-Prepare - POST - /transfers - [1/1]
	Send Fulfill - PUT - /transfers/{ID} - [1/1]
	Duplicate Fulfill - PUT - /transfers/{ID} - [2/11]
positive
	Send Quote - RECEIVE - POST - /quotes - [9/20]
	Send Transfer-Prepare - POST - /transfers - [1/1]
	Send Fulfill-Reject - PUT - /transfers/{ID}/error - [1/1]
	Send Duplicate Fulfill-Reject - PUT - /transfers/{ID}/error - [1/1]
	Check Transfer status - GET - /transfers/{ID} - [10/10]
negative
	Send Quote - RECEIVE - POST - /quotes - [9/20]
	Send Transfer-Prepare - POST - /transfers - [1/1]
	Send Fulfill-Reject - PUT - /transfers/{ID}/error - [1/1]
	Send Invalid Duplicate Fulfill-Reject - PUT - /transfers/{ID}/error - [2/2]
	Check Transfer status - GET - /transfers/{ID} - [10/10]
Active and inactive participant
	Update participant (SIM2 to inactive) - PUT - /participants/{name} - [1/1]
	Send Quote fail (SIM1 to SIM2) - POST - /quotes - [3/12]
	Send Transfer fail (SIM1 to SIM2) - POST - /transfers - [3/12]
	Update participant (SIM2 to active) - PUT - /participants/{name} - [1/1]
	Send Quote (SIM1 to SIM2) - POST - /quotes - [3/19]
	Send Transfer (SIM1 to SIM2) - POST - /transfers - [1/18]
Active and inactive participant account
	Get SIM2 Participant Account - GET - /participants/{name}/accounts - [1/1]
	Update SIM2 to inactive_XOF account - PUT - /participants/{name}/accounts/{id} - [0/0]
	Send Quote fail (SIM1 to SIM2) - POST - /quotes - [3/12]
	Send Transfer fail (SIM1 to SIM2) - POST - /transfers - [3/12]
	Update participant (SIM2 to active) account - PUT - /participants/{name}/accounts/{id} - [1/1]
	Send Quote (SIM1 to SIM2) - POST - /quotes - [3/19]
	Send Transfer (SIM1 to SIM2) - POST - /transfers - [1/18]
Block Transfer
	GET limits - SIMPAYER - GET - /participants/{name}/limits - [2/2]
	GET limits - SIMPAYEE - GET - /participants/{name}/limits - [2/2]
	GET SIMPAYER position before the transfer - GET - /participants/{name}/positions - [2/2]
	GET SIMPAYEE position before the transfer - GET - /participants/{name}/positions - [2/2]
	Send Quote - POST - /quotes - [7/16]
	Send Block Transfer - POST - /transfers - [0/10]
	GET SIMPAYER position after the transfer - GET - /participants/{name}/positions - [2/2]
	GET SIMPAYEE position after the transfer - GET - /participants/{name}/positions - [2/2]
Funds_in_ttk
	Get testingtoolkitdfsp settlement account - GET - /participants/{name}/accounts - [1/1]
	Get Hub Reconcilliation account - GET - /participants/{name}/accounts - [1/1]
	Record funds in - prepare 2 - POST - /participants/{name}/accounts/{id} - [1/1]
	Get testingtoolkitdfsp settlement account after funds in - GET - /participants/{name}/accounts - [2/2]
	Get Hub Reconcilliation account after funds in - GET - /participants/{name}/accounts - [2/2]
	Record Funds in - prepare transfer status - GET - /transfers/{ID} - [9/9]
Funds_out/Reserve&Abort
	Get testingtoolkitdfsp settlement account - GET - /participants/{name}/accounts - [1/1]
	Get Hub Reconcilliation account - GET - /participants/{name}/accounts - [1/1]
	Record Funds Out Prepare&Reserve- SIMPAYER - POST - /participants/{name}/accounts/{id} - [1/1]
	Get testingtoolkitdfsp settlement account after funds out - GET - /participants/{name}/accounts - [2/2]
	Get Hub Reconcilliation account after funds out - GET - /participants/{name}/accounts - [2/2]
	Record Funds Out Prepare&Reserve - transferStatus - GET - /transfers/{ID} - [9/9]
	Get testingtoolkitdfsp settlement account before abort - GET - /participants/{name}/accounts - [1/1]
	Get Hub Reconcilliation account before abort - GET - /participants/{name}/accounts - [1/1]
	Record Funds Out Abort - SIMPAYER - PUT - /participants/{name}/accounts/{id}/transfers/{transferId} - [1/1]
	Get testingtoolkitdfsp settlement account after abort - GET - /participants/{name}/accounts - [2/2]
	Get Hub Reconcilliation account after abort - GET - /participants/{name}/accounts - [2/2]
	Record Funds Out Abort - transfer status - GET - /transfers/{ID} - [9/9]
Funds_out/Reserve&Commit_ttk
	Get testingtoolkitdfsp settlement account - GET - /participants/{name}/accounts - [1/1]
	Get Hub Reconcilliation account - GET - /participants/{name}/accounts - [1/1]
	Record Funds Out Prepare&Reserve- SIMPAYER - POST - /participants/{name}/accounts/{id} - [1/1]
	Get testingtoolkitdfsp settlement account after funds out - GET - /participants/{name}/accounts - [2/2]
	Get Hub Reconcilliation account after funds out - GET - /participants/{name}/accounts - [2/2]
	Record Funds Out Prepare&Reserve - transferStatus - GET - /transfers/{ID} - [9/9]
	Get testingtoolkitdfsp settlement account before commit - GET - /participants/{name}/accounts - [1/1]
	Get Hub Reconcilliation account before commit - GET - /participants/{name}/accounts - [1/1]
	Record Funds Out Commit - SIMPAYER - PUT - /participants/{name}/accounts/{id}/transfers/{transferId} - [1/1]
	Get testingtoolkitdfsp settlement account after commit - GET - /participants/{name}/accounts - [2/2]
	Get Hub Reconcilliation account after commit - GET - /participants/{name}/accounts - [2/2]
	Record Funds Out Commit - transfer status - GET - /transfers/{ID} - [9/9]
Get Transfers
	Send Quote - POST - /quotes - [7/16]
	Send Transfer - POST - /transfers - [0/24]
	GET transfer - COMMITTED - GET - /transfers/{ID} - [8/10]
	Source is original receiver - GET - /transfers/{ID} - [1/9]
	Source is not part of original sender/receiver - GET - /transfers/{ID} - [1/10]
	200 - 3208 - Transfer ID not found - GET - /transfers/{ID} - [10/10]
Positive Scenarios
	Add Participant to ALS - POST - /participants/{Type}/{ID} - [0/0]
	Delete party from simulator - DELETE - /repository/parties/{idType}/{idValue} - [0/0]
	Add Party to Simulator - POST - /repository/parties - [0/0]
	Get party information - GET - /parties/{Type}/{ID} - [6/10]
	Post scenario - POST - /scenarios - [0/92]
Reserve Notification Positive - Testfsp1 Testfsp2
	Add {{testfsp1MSISDN}} to testfsp1 - POST - /repository/parties - [1/1]
	Add {{testfsp2MSISDN}} to testfsp2 - POST - /repository/parties - [1/1]
	Add party to SIMPAYEE - MSISDN - POST - /repository/parties - [1/1]
	Post scenarios - MSISDN - TESTFSP2 to TESTFSP1 - PATCH notification - POST - /scenarios - [4/88]
Check Settlements Error #956
	Check Settlements Error #956 - GET - /settlementWindows - [3/3]
	Check FSPIOP Headers from Switch #883 - GET - /parties/{Type}/{ID} - [1/3]
	Check FSPIOP Headers from ML-API-Adapter #1032 - POST - /transfers - [1/3]
Test for 4 decimal points #949
	Send quote - POST - /quotes - [9/11]
	Send transfer - POST - /transfers - [2/9]
Test for Bugfix #1378 - extension list missing
	Send quote - POST - /quotes - [3/3]
	Send quote Copy - POST - /quotes - [3/3]
Test for Bugfix #742 - Error code check
	Add Participant - Invalid Currency - POST - /participants - [3/3]
	Check Error 3003 Add Party information error #742 - POST - /participants - [3/3]
	Check Error 3101 Malformed syntax #742 - POST - /transfers - [4/4]
Test for Bugfix #849 - missing ID for transfers and quotes
	Check transfers/ Missing ID #849 - PUT - /transfers/{ID} - [3/3]
	Check quotes/ Missing ID #849 - PUT - /quotes/{ID} - [3/3]
Tests for Bugfix #1009 - ML Adapter and ALS service health should include broker status
	transaction service health - GET - /health - [4/4]
	Get health status of ALS - GET - /health - [4/4]
	Get health status of Central Ledger - GET - /health - [4/4]
	Get health status of Central Settlement - GET - /health - [4/4]
Tests for Bugfix #981 - Fix 500 http code instead of 400
	Add participant - duplicate account - POST - /participants - [3/3]
	Add non existing Participant - GET - /participants/{name} - [3/3]
	Add Participant - Invalid Currency - POST - /participants - [3/3]
Tests for Bugfix #990 and #1016 - Quotes
	Send quote - POST - /quotes - [9/11]
	Send Quote_SEND - 12 - Validate Within Expire Time w Duplicate Quote Id Copy - POST - /quotes - [3/3]
	Send Quote_SEND - 12 - Validate After Expire Time w Duplicate Quote Id - POST - /quotes - [3/3]
other
	Send Quote_SEND - Missing content-type version - POST - /quotes - [3/3]
	Send Quote_SEND - 6a - Invalid Content Type - application/json - POST - /quotes - [3/3]
	Send Quote_SEND - 6b - Invalid Content Type - xml - POST - /quotes - [3/3]
	Send Quote_SEND - 9- Destination FSP NOT FOUND - POST - /quotes - [3/3]
	Send Quote_SEND - 10 - PayeePartyIdentifier NOT FOUND - POST - /quotes - [4/4]
	Send Quote_SEND - 14 - Incorrect Switch Version Header - POST - /quotes - [3/3]
	QuotesByID - 11 - Missing Condition Field - PUT - /quotes/{ID} - [2/2]
	QuotedById - 13a- 400- Missing Accept header - GET - /quotes/{ID} - [3/3]
	QuotesById - 13b - 400-Missing FSPIOP-Source header - GET - /quotes/{ID} - [4/4]
	QuotesById - 13c - 400-Missing Date header (BUG) - GET - /quotes/{ID} - [4/4]
Tests for Bugfix #998 - Quoting service not using most recent endpoint
	Add payeefsp request URL - QUOTES PUT with incorrect endpoint - POST - /participants/{name}/endpoints - [1/1]
	Send quote - POST - /quotes - [1/2]
	Add payeefsp request URL - QUOTES PUT with correct endpoint - POST - /participants/{name}/endpoints - [1/1]
	Send quote Copy - POST - /quotes - [1/3]
p2p_money_transfer_on_us
	Add Participant to ALS - POST - /participants/{Type}/{ID} - [1/1]
	Add Party to Simulator - POST - /repository/parties - [0/0]
	Send quote - POST - /quotes - [6/15]
	Send transfer - POST - /transfers - [3/13]
quoting_service
	Send quote - POST - /quotes - [6/15]
	Get health status of Quoting Service - GET - /health - [3/3]
	Get Quote - GET - /quotes/{ID} - [1/1]
	Send quote - missing date - POST - /quotes - [4/4]
	Send quote Copy - POST - /quotes - [3/3]
	Get Quote - Missing content type - GET - /quotes/{ID} - [3/3]
	Get Quote - Invalid content type - GET - /quotes/{ID} - [3/3]
Authorizations
	Get authorizations - GET - /authorizations/{ID} - [1/1]
	authorizations - PUT - /authorizations/{ID} - [1/1]
Error-framework-authorizations
	Check retriesLeft missing - GET - /authorizations/{ID} - [3/3]
	Check authenticationType missing - GET - /authorizations/{ID} - [3/3]
	Check currency missing - GET - /authorizations/{ID} - [3/3]
	Check retriesLeft with non-number  - GET - /authorizations/{ID} - [3/3]
	Check retriesLeft with floating number - GET - /authorizations/{ID} - [3/3]
	Check wrong authentication type - GET - /authorizations/{ID} - [3/3]
	Check accept header missing - GET - /authorizations/{ID} - [3/3]
	Check date missing - GET - /authorizations/{ID} - [3/3]
	Check fspiop-source missing - GET - /authorizations/{ID} - [3/3]
	Check Content-type missing - GET - /authorizations/{ID} - [3/3]
	Check  Unacceptable Content-type  - GET - /authorizations/{ID} - [3/3]
	Check Authorizatons - wrong responseType - PUT - /authorizations/{ID} - [1/1]
	Check authentication missing - 400 - 3102 Error code - PUT - /authorizations/{ID} - [3/3]
	Check authenticationValue missing - 400 - 3102 Error code - PUT - /authorizations/{ID} - [3/3]
	Check responseType missing - 400 - 3102 Error code - PUT - /authorizations/{ID} - [3/3]
	Check authorization with content-type header missing - PUT - /authorizations/{ID} - [3/3]
	Check authorization with date header missing - PUT - /authorizations/{ID} - [3/3]
	Check authorization with fspiop header missing  - PUT - /authorizations/{ID} - [3/3]
	Check authorization with accept header missing - PUT - /authorizations/{ID} - [3/3]
error-framework
	Check transactionRequest state - invalid transactionid - GET - /transactionRequests/{ID} - [1/1]
	Payee initiate request - MIssing date - POST - /transactionRequests - [3/3]
	Payee initiate request - Missing fspiop-source - POST - /transactionRequests - [3/3]
	Payee initiate request - Wrong content type version - POST - /transactionRequests - [3/3]
	Payee initiate request - Unsupported Media Type - POST - /transactionRequests - [3/3]
received State
	Payee initiate request - POST - /transactionRequests - [1/2]
	send RECEIVED state - PUT - /transactionRequests/{ID} - [1/5]
	Check transactionRequest state - GET - /transactionRequests/{ID} - [2/2]
rejected State
	Payee initiate request - POST - /transactionRequests - [1/2]
	send REJECTED state - PUT - /transactionRequests/{ID} - [1/5]
	Check transactionRequest state - GET - /transactionRequests/{ID} - [2/2]
transaction_request_service
	transaction service health - GET - /health - [1/1]
Pre-settlement account activation per participant and currency
	Get payerfsp account id - GET - /participants/{name}/accounts - [2/2]
	Active account for currency for payerfsp - PUT - /participants/{name}/accounts/{id} - [1/1]
	Active account for currency2 for payerfsp - PUT - /participants/{name}/accounts/{id} - [1/1]
	Get payeefsp account id - GET - /participants/{name}/accounts - [2/2]
	Active account for currency for payeefsp - PUT - /participants/{name}/accounts/{id} - [1/1]
	Active account for currency2 for payeefsp - PUT - /participants/{name}/accounts/{id} - [1/1]
	Get testfsp1 account id - GET - /participants/{name}/accounts - [2/2]
	Active account for currency for testfsp1 - PUT - /participants/{name}/accounts/{id} - [1/1]
	Active account for currency2 for testfsp1 - PUT - /participants/{name}/accounts/{id} - [1/1]
	Get testfsp2 account id - GET - /participants/{name}/accounts - [2/2]
	Active account for currency for testfsp2 - PUT - /participants/{name}/accounts/{id} - [1/1]
	Active account for currency2 for testfsp2 - PUT - /participants/{name}/accounts/{id} - [1/1]
Create Settlement on the current open window
	Get Existing Open Window - GET - /settlementWindows - [2/2]
	Close existent window - POST - /settlementWindows/{id} - [2/2]
	Create Settlement for Closed Window in deferred settlement model for currency - POST - /settlements - [5/5]
	Prepare Settlement - GET - /settlements/{id} - [1/1]
	Reserve Settlement - GET - /settlements/{id} - [1/1]
	Commit Settlement - GET - /settlements/{id} - [1/1]
	Settle Settlement - GET - /settlements/{id} - [1/1]
	Create Settlement for Closed Window in default deferred settlement model  - POST - /settlements - [5/5]
	Prepare Settlement Default Settlement Model - GET - /settlements/{id} - [1/1]
	Reserve Settlement Default Settlement Model - GET - /settlements/{id} - [1/1]
	Commit Settlement Default Settlement Model - GET - /settlements/{id} - [1/1]
	Settle Settlement Default Settlement Model - GET - /settlements/{id} - [1/1]
	get settlements models - GET - /settlementModels - [1/1]
Store settlement and position balances before
	get balances for testfsp1 - GET - /participants/{name}/accounts - [1/1]
	get balances for testfsp2 - GET - /participants/{name}/accounts - [1/1]
	get balances for payerfsp - GET - /participants/{name}/accounts - [1/1]
	get balances for payeefsp - GET - /participants/{name}/accounts - [1/1]
	Get Hub balances - GET - /participants/{name}/accounts - [1/1]
Send transfer $currency from SIM1 to SIM2
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer $currency2 from SIM1 to PAYEEFSP
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer $currency from PAYERFSP to SIM1
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer $currency2 from SIM2 to PAYERFSP
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer $currency from PAYEEFSP to SIM2
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer $currency2 from PAYEEFSP to PAYERFSP
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Create Settlement on the current open window
	Get Existing Open Window - GET - /settlementWindows - [2/2]
	Close existent window - POST - /settlementWindows/{id} - [2/2]
	Create Settlement for Closed Window with Settlement Model for Currency - POST - /settlements - [0/5]
	Create Settlement for Closed Window for Default Settlement Model - POST - /settlements - [0/5]
Store Settlement&Position Account Balances After Transfers
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [1/1]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [1/1]
	Get balances for ttkdfsp - GET - /participants/{name}/accounts - [1/1]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [1/1]
Prepare-settlements
	Prepare Settlement with deferred settlement model for currency - GET - /settlements/{id} - [0/1]
	check state for participants after prepare deferred settlement model - GET - /settlements/{id} - [1/4]
	Prepare Settlement with default settlement model - GET - /settlements/{id} - [0/1]
	check state for participants after prepare default settlement - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After Prepare
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [2/2]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [2/2]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [2/2]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [2/2]
reserve-settlement
	reserve Settlement with Currency Deferred Settlement Model - GET - /settlements/{id} - [0/1]
	check state for participants after reserve with deferred settlement model - GET - /settlements/{id} - [1/4]
	reserve Settlement with default settlement model - GET - /settlements/{id} - [0/1]
	check state for participants after reserve with default settlement model - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After Reserve
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [2/2]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [3/3]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [3/3]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [3/3]
commit-settlement
	commit Settlement with deferred settlement model - GET - /settlements/{id} - [0/1]
	check state for participants after commit deferred settlement model - GET - /settlements/{id} - [1/4]
	commit Settlement default settlement model - GET - /settlements/{id} - [0/1]
	check state for participants after commit default settlement model - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After commit
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [2/2]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [2/2]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [2/2]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [2/2]
	hub account balance check - GET - /participants/{name}/accounts - [2/2]
settle-settlement
	settle Settlement with deferred settlement model - GET - /settlements/{id} - [0/1]
	check state for participants after settle with deferred settlement model - GET - /settlements/{id} - [1/4]
	settle Settlement default settlement model - GET - /settlements/{id} - [0/1]
	check state for participants after settle default settlement model - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After Settle
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [2/2]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [2/2]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [2/2]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [2/2]
Pre-settlement account activation per participant for $currency
	Get payerfsp account id - GET - /participants/{name}/accounts - [2/2]
	Active account for payerfsp - PUT - /participants/{name}/accounts/{id} - [1/1]
	Get payeefsp account id - GET - /participants/{name}/accounts - [2/2]
	Active account for payeefsp - PUT - /participants/{name}/accounts/{id} - [1/1]
	Get testfsp1 account id  - GET - /participants/{name}/accounts - [2/2]
	Active account for testfsp1 - PUT - /participants/{name}/accounts/{id} - [1/1]
	Get testfsp2 account id  - GET - /participants/{name}/accounts - [2/2]
	Active account for testfsp2 - PUT - /participants/{name}/accounts/{id} - [1/1]
Create Settlement on the current open window
	Get Existing Open Window - GET - /settlementWindows - [2/2]
	Close existent window - POST - /settlementWindows/{id} - [2/2]
	Create Settlement for Closed Window - POST - /settlements - [5/5]
	Prepare Settlement - GET - /settlements/{id} - [1/1]
	Reserve Settlement - GET - /settlements/{id} - [1/1]
	Commit Settlement - GET - /settlements/{id} - [1/1]
	Settle Settlement - GET - /settlements/{id} - [1/1]
Store settlement and position balances before
	get balances for testfsp1 - GET - /participants/{name}/accounts - [1/1]
	get balances for testfsp2 - GET - /participants/{name}/accounts - [1/1]
	get balances for payerfsp - GET - /participants/{name}/accounts - [1/1]
	get balances for payeefsp - GET - /participants/{name}/accounts - [1/1]
	Get Hub balances - GET - /participants/{name}/accounts - [1/1]
Send transfer in $currency from SIM1 to SIM2
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer in $currency from SIM1 to PAYEEFSP
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer in $currency from PAYERFSP to SIM1
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer in $currency from SIM2 to PAYERFSP
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer in $currency from PAYEEFSP to SIM2
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer in $currency from PAYEEFSP to PAYERFSP
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Create Settlement on the current open window
	Get Existing Open Window - GET - /settlementWindows - [2/2]
	Close existent window - POST - /settlementWindows/{id} - [2/2]
	Create Settlement for Closed Window - POST - /settlements - [0/5]
Store Settlement&Position Account Balances After Transfers
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [1/1]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [1/1]
	Get balances for ttkdfsp - GET - /participants/{name}/accounts - [1/1]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [1/1]
Prepare-settlement
	Prepare Settlement - GET - /settlements/{id} - [0/1]
	check state for participants after prepare - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After Prepare
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [3/3]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [3/3]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [3/3]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [3/3]
reserve-settlement
	reserve Settlement - GET - /settlements/{id} - [0/1]
	check state for participants after prepare - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After Reserve
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [3/3]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [3/3]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [3/3]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [3/3]
commit-settlement
	commit Settlement - GET - /settlements/{id} - [0/1]
	check state for participants after commit - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After commit
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [3/3]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [3/3]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [3/3]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [3/3]
	hub account balance check - GET - /participants/{name}/accounts - [3/3]
settle-settlement
	settle Settlement - GET - /settlements/{id} - [0/1]
	check state for participants after commit - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After Settle
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [3/3]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [3/3]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [3/3]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [3/3]
Pre-settlement account activation per participant for $currency2
	Get payerfsp account id - GET - /participants/{name}/accounts - [2/2]
	Active account for payerfsp - PUT - /participants/{name}/accounts/{id} - [1/1]
	Get payeefsp account id - GET - /participants/{name}/accounts - [2/2]
	Active account for payeefsp - PUT - /participants/{name}/accounts/{id} - [1/1]
	Get testfsp1 account id  - GET - /participants/{name}/accounts - [2/2]
	Active account for testfsp1 - PUT - /participants/{name}/accounts/{id} - [1/1]
	Get testfsp2 account id  - GET - /participants/{name}/accounts - [2/2]
	Active account for testfsp2 - PUT - /participants/{name}/accounts/{id} - [1/1]
Create Settlement on the current open window
	Get Existing Open Window - GET - /settlementWindows - [2/2]
	Close existent window - POST - /settlementWindows/{id} - [2/2]
	Create Settlement for Closed Window - POST - /settlements - [5/5]
	Prepare Settlement - GET - /settlements/{id} - [1/1]
	Reserve Settlement - GET - /settlements/{id} - [1/1]
	Commit Settlement - GET - /settlements/{id} - [1/1]
	Settle Settlement - GET - /settlements/{id} - [1/1]
Store settlement and position balances before
	get balances for testfsp1 - GET - /participants/{name}/accounts - [1/1]
	get balances for testfsp2 - GET - /participants/{name}/accounts - [1/1]
	get balances for payerfsp - GET - /participants/{name}/accounts - [1/1]
	get balances for payeefsp - GET - /participants/{name}/accounts - [1/1]
	Get Hub balances - GET - /participants/{name}/accounts - [1/1]
Send transfer from SIM1 to SIM2 in $currency2
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer from SIM1 to PAYEEFSP in $currency2
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer from PAYERFSP to SIM1 in $currency2
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer from SIM2 to PAYERFSP in $currency2
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer from PAYEEFSP to SIM2 in $currency2
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Send transfer from PAYEEFSP to PAYERFSP in $currency2
	Send quote - POST - /quotes - [6/11]
	Send transfer - POST - /transfers - [2/9]
Create Settlement on the current open window
	Get Existing Open Window - GET - /settlementWindows - [2/2]
	Close existent window - POST - /settlementWindows/{id} - [2/2]
	Create Settlement for Closed Window - POST - /settlements - [0/5]
Store Settlement&Position Account Balances After Transfers
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [1/1]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [1/1]
	Get balances for ttkdfsp - GET - /participants/{name}/accounts - [1/1]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [1/1]
Prepare-settlement
	Prepare Settlement - GET - /settlements/{id} - [0/1]
	check state for participants after prepare - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After Prepare
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [3/3]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [3/3]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [3/3]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [3/3]
reserve-settlement
	reserve Settlement - GET - /settlements/{id} - [0/1]
	check state for participants after prepare - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After Reserve
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [3/3]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [3/3]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [3/3]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [3/3]
commit-settlement
	commit Settlement - GET - /settlements/{id} - [0/1]
	check state for participants after commit - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After commit
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [3/3]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [3/3]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [3/3]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [3/3]
	hub account balance check - GET - /participants/{name}/accounts - [3/3]
settle-settlement
	settle Settlement - GET - /settlements/{id} - [0/1]
	check state for participants after commit - GET - /settlements/{id} - [1/4]
Store Settlement&Position Account Balances After Settle
	Get balances for testfsp1 - GET - /participants/{name}/accounts - [3/3]
	Get balances for testfsp2 - GET - /participants/{name}/accounts - [3/3]
	Get balances for payerfsp - GET - /participants/{name}/accounts - [3/3]
	Get balances for payeefsp - GET - /participants/{name}/accounts - [3/3]
api-tests/admin-api-tests
	Get participants list - GET - /participants - [1/1]
	Get participant - GET - /participants/{name} - [1/1]
	Get Hub account - GET - /participants/{name}/accounts - [1/1]
	Get participants endpoints - GET - /participants/{name}/endpoints - [1/1]
	Get limits all FSPs - GET - /participants/limits - [1/1]
	Get participant position - GET - /participants/{name}/positions - [2/2]
api-tests/quotes
	FNLN-Send Quotes - missing FN - POST - /quotes - [7/18]
	FNLN-Send Quotes - missing LN - POST - /quotes - [7/18]
	FNLN-Send Quotes - Invalid Lastname (not string) - POST - /quotes - [3/3]
	FNLN-Send Quotes - Payer personal info missing - POST - /quotes - [7/18]
	FNLN-Send Quotes - String payerFN (Mats123) - POST - /quotes - [7/18]
	FNLN-Send Quote - String payerFN (Mats123@#$) - POST - /quotes - [3/3]
api-tests/Quotes/DOB
	Send Quote - Malformed DOB - POST - /quotes - [3/3]
	Send Quote - Empty string DOB - POST - /quotes - [3/3]
	Send Quote - null string DOB - POST - /quotes - [3/3]
	Send Quote - null DOB - POST - /quotes - [3/3]
	Send Quote - Invalid DOB format - POST - /quotes - [3/3]
	Send Quote - MIssing DOB on payer object - POST - /quotes - [3/3]
	Send Quote - Malformed DOB2 - POST - /quotes - [3/3]
	Send Quote - Malformed DOB3 - POST - /quotes - [3/3]
api-tests/SettlementWindows
	Window- state (OPEN) - GET - /settlementWindows - [2/2]
	ValidRequest - closedWindowById - GET - /settlementWindows/{id} - [1/1]
	Bad Request-CloseWindow - POST - /settlementWindows/{id} - [1/1]
	Window- state (SETTLED) - GET - /settlementWindows - [0/2]
--------------------FINAL REPORT--------------------

Test Suite:GP Tests
Environment:Development
┌───────────────────────────────────────────────────┐
│                      SUMMARY                      │
├───────────────────┬───────────────────────────────┤
│ Total assertions  │ 2064                          │
├───────────────────┼───────────────────────────────┤
│ Passed assertions │ 1098                          │
├───────────────────┼───────────────────────────────┤
│ Failed assertions │ 966                           │
├───────────────────┼───────────────────────────────┤
│ Total requests    │ 446                           │
├───────────────────┼───────────────────────────────┤
│ Total test cases  │ 99                            │
├───────────────────┼───────────────────────────────┤
│ Passed percentage │ 53.20%                        │
├───────────────────┼───────────────────────────────┤
│ Started time      │ Fri, 17 Sep 2021 10:48:08 GMT │
├───────────────────┼───────────────────────────────┤
│ Completed time    │ Fri, 17 Sep 2021 10:50:15 GMT │
├───────────────────┼───────────────────────────────┤
│ Runtime duration  │ 126966 ms                     │
└───────────────────┴───────────────────────────────┘
TTK-Assertion-Report-multi-2021-09-17T10:50:15.210Z.html was generated
Terminate with exit code 1
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! ml-testing-toolkit@13.0.2 cli: `node src/cli_client/client.js "-c" "cli-default-config.json" "-e" "cli-testcase-environment.json" "-i" "tmp_test_cases/testing-toolkit-test-cases-13.0.1/collections/hub/golden_path" "-u" "http://ml-ml-testing-toolkit-backend:5050" "--report-format" "html" "--report-auto-filename-enable" "true" "--extra-summary-information=Test Suite:GP Tests,Environment:Development"`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the ml-testing-toolkit@13.0.2 cli script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2021-09-17T10_50_15_872Z-debug.log
Done

vagrant@vagrant:~$ 

