# mysql: central-ledger
---
# MySQL 
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: mysql-pv-volume
#   labels:
#     type: local
# spec:
#   storageClassName: local-path
#   capacity:
#     storage: 10Gi
#   accessModes:
#     - ReadWriteOnce
#   # hostPath:
#     # path: "/mnt/data3"
#   persistentVolumeReclaimPolicy: Delete
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: ml-app
  name: mysql-cl-pv-claim
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: ml-app
  name: mysql-cl
spec:
  ports:
  - port: 3306
  selector:
    app: mysql-cl
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: ml-app
  name: mysql-cl
spec:
  selector:
    matchLabels:
      app: mysql-cl
  serviceName: mysql-cl-service
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql-cl
    spec:
      containers:
      - image: mysql:5.6
        name: mysql-cl
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_USER
          value: central_ledger
        - name: MYSQL_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: central_ledger
        ports:
        - containerPort: 3306
          name: mysql-cl
        volumeMounts:
        - name: mysql-cl-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-cl-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-cl-pv-claim
---
# mysql-als
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: ml-app
  name: mysql-als-pv-claim
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: ml-app
  name: mysql-als
spec:
  ports:
  - port: 3306
  selector:
    app: mysql-als
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: ml-app
  name: mysql-als
spec:
  selector:
    matchLabels:
      app: mysql-als
  serviceName: mysql-als-service
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql-als
    spec:
      containers:
      - image: mysql:5.6
        name: mysql-als
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_USER
          value: account_lookup
        - name: MYSQL_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: account_lookup
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-als-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-als-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-als-pv-claim
---
# Kafka util:
apiVersion: v1
kind: Pod
metadata:
  namespace: ml-app
  name: testclient
spec:
  containers:
  - name: kafka
    image: confluentinc/cp-kafka:5.0.1
    command: [ "sh", "-c", "tail -f /dev/null" ]

---
