NAME: ml
LAST DEPLOYED: Wed Sep 14 10:28:11 2022
NAMESPACE: default
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/tests/pxc-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "ml-test"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: pxc-test
    image: "percona/percona-xtradb-cluster:5.7.19"
    imagePullPolicy: "IfNotPresent"
    command: ["bash", "/tests/run.sh"]
    env:
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: ml-account-lookup-mysql
          key: mysql-root-password
    volumeMounts:
    - mountPath: /tests
      name: tests
  volumes:
  - name: tests
    configMap:
      name: ml-account-lookup-mysql-tests
  restartPolicy: Never
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/tests/pxc-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "ml-test"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: pxc-test
    image: "percona/percona-xtradb-cluster:5.7.19"
    imagePullPolicy: "IfNotPresent"
    command: ["bash", "/tests/run.sh"]
    env:
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: ml-centralledger-mysql
          key: mysql-root-password
    volumeMounts:
    - mountPath: /tests
      name: tests
  volumes:
  - name: tests
    configMap:
      name: ml-centralledger-mysql-tests
  restartPolicy: Never
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/tests/ttk-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: ml-ml-ttk-test-setup
  labels:
    helm.sh/chart: ml-ttk-test-setup-15.0.0
    app.kubernetes.io/name: ml-ttk-test-setup
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
    helm.sh/hook-weight: "-6"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  restartPolicy: Never
  containers:
  - name: ml-ttk-test-setup
    image: "mojaloop/ml-testing-toolkit-client-lib:v1.0.0"
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args:
    - echo "Downloading the test collection...";
      wget https://github.com/mojaloop/testing-toolkit-test-cases/archive/v14.0.0.1.zip -O downloaded-test-collections.zip;
      mkdir tmp_test_cases;
      unzip -d tmp_test_cases -o downloaded-test-collections.zip;
      npm run cli -- -c cli-default-config.json -e cli-testcase-environment.json -i tmp_test_cases/testing-toolkit-test-cases-14.0.0.1/collections/hub/provisioning -u http://ml-ml-testing-toolkit-backend:5050 --report-format html --report-auto-filename-enable true --extra-summary-information="Test Suite:GP Tests,Environment:Development";
      echo "Done";
    envFrom:
    - secretRef:
        name: ml-ml-ttk-test-setup-aws-creds
    volumeMounts:
      - name: ml-ml-ttk-test-setup-volume-testcase-environment-file
        mountPath: /opt/app/cli-testcase-environment.json
        subPath: cli-testcase-environment.json
      - name: ml-ml-ttk-test-setup-volume-config-file-defaults
        mountPath: /opt/app/cli-default-config.json
        subPath: cli-default-config.json
  
  volumes:
  - name: ml-ml-ttk-test-setup-volume-config-file-defaults
    configMap:
      name: ml-ml-ttk-test-setup-config-file-defaults
      items:
        - key: cli-default-config.json
          path: cli-default-config.json
  - name: ml-ml-ttk-test-setup-volume-testcase-environment-file
    configMap:
      name: ml-ml-ttk-test-setup-config-testcase-environment-file
      items:
        - key: cli-testcase-environment.json
          path: cli-testcase-environment.json
---
# Source: mojaloop/charts/ml-ttk-test-val-gp/templates/tests/ttk-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: ml-ml-ttk-test-val-gp
  labels:
    helm.sh/chart: ml-ttk-test-val-gp-15.0.0
    app.kubernetes.io/name: ml-ttk-test-val-gp
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  restartPolicy: Never
  containers:
  - name: ml-ttk-test-val-gp
    image: "mojaloop/ml-testing-toolkit-client-lib:v1.0.0"
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args:
    - echo "Downloading the test collection...";
      wget https://github.com/mojaloop/testing-toolkit-test-cases/archive/v14.0.0.1.zip -O downloaded-test-collections.zip;
      mkdir tmp_test_cases;
      unzip -d tmp_test_cases -o downloaded-test-collections.zip;
      npm run cli -- -c cli-default-config.json -e cli-testcase-environment.json -i tmp_test_cases/testing-toolkit-test-cases-14.0.0.1/collections/hub/golden_path -u http://ml-ml-testing-toolkit-backend:5050 --report-format html --report-auto-filename-enable true --extra-summary-information="Test Suite:GP Tests,Environment:Development";
      echo "Done";
    envFrom:
    - secretRef:
        name: ml-ml-ttk-test-val-gp-aws-creds
    volumeMounts:
      - name: ml-ml-ttk-test-val-gp-volume-testcase-environment-file
        mountPath: /opt/app/cli-testcase-environment.json
        subPath: cli-testcase-environment.json
      - name: ml-ml-ttk-test-val-gp-volume-config-file-defaults
        mountPath: /opt/app/cli-default-config.json
        subPath: cli-default-config.json
  
  volumes:
  - name: ml-ml-ttk-test-val-gp-volume-config-file-defaults
    configMap:
      name: ml-ml-ttk-test-val-gp-config-file-defaults
      items:
        - key: cli-default-config.json
          path: cli-default-config.json
  - name: ml-ml-ttk-test-val-gp-volume-testcase-environment-file
    configMap:
      name: ml-ml-ttk-test-val-gp-config-testcase-environment-file
      items:
        - key: cli-testcase-environment.json
          path: cli-testcase-environment.json
MANIFEST:
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ml-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: ml
    heritage: Helm
    component: server
spec:
  selector:
    matchLabels:
      app: zookeeper
      release: ml
      component: server
  maxUnavailable: 1
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-cep-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: cep-mongodb
    helm.sh/chart: mongodb-12.1.20
    app.kubernetes.io/instance: ml
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: ml-cep-mongodb
automountServiceAccountToken: true
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-account-lookup-service-jws-signing-key
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-13.0.0
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KVkFDL2l4bTZsejhrSm1pZ0lCNWpNeExyaEI5Y2dxTStwYjBPK2lzODhWUkhkeHR3OGVLRzNudnJaWXkvNG5zSgp6MzJxbzRzT0lNcUhXVGxaZ2JVUlZLNEZBVUVaL3FuNjNVblhKMVlWcVQ0VUdnMzFCQmoyYzFKZGx4RzJ0NEpWCkR2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKNU1aUEhONTFvMDRlSW9MTzB0UGZrejArTkRzNEVDd1VXdUZBZzh5bzFoeG52U29FUmlDQXdFYkZncTJ3RGUxKwpvQmhPcHVzZDRWYXN0RC9URXFPOFJocndUb2RkZE9NS3phcEpQclFKdXZUa3Jwa21rUE9HRThEZ0lWSHNVTExSClVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKRC9wMjFha1MxNTZFMzJCRUp1WVBrL1RMaUkya01Xam52Ykh2TmdyOXRxOHgzVG95VGp0cmc1Y2xxOEhyMU96bwpGbkZpcWtWSE1GUEZQUVpFVlU2NENRUEEzM0RpeHVXak1XUzNZSU5mQ0FpbkVyQnJ5MFBpTlpHbXVGaTFLL3d5CmUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKTks2SFFvRVhONFk5QVFIbjUzRmw4bjBpTk8zcXgwVGI3RXVHTkZtWjJ4VGxwREtBcDhNK0JBNVFtNVlEa2JkNgpPb3hiR2oyWXhabmNiRytSc3ZJQ3RWTUxxSXl0dWJ2WVJFWTlXR2tDZ1lFQStLNjR4aEp6V1YzY0djOC85MGtvClRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKVjhabzJHZXI2TG45OUxCZGRUaDJIWEwzTTYwY01nczhNWUd1Sjc1ZzVSL1VIbkpCTG83TkZ5VmRkQ09NVDNoYwpBWVNETjNYQ3c5eWNxVHcyL21KSEI5a0NnWUVBOVFpYUNmVHRuWGRqTXFMZVlicDJ1UUV5eU82SVpzOTU2eW03CnNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKNU5qNFNWUVd1T1hKaGRmQzlkbVRGK2N2QmVQK3ZDNlB5RGJpa3hkQ285KzA1Y2h4UzdJM01MeEN1ZTRxeHkwQwpRZlFJRTEwQ2dZQStrSGFjSG5nMnU0NXNUOS9mN3QvZEwwRHpTTlJBdkw3aWVrSWtDSVVSaDhSRG5EenJNVld3CmQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKOHloRmgzZ0pMUURJeUNYdCtLOVFhMjRma2ZIeTdHejVWTVZPWnFvaGJKZGRYSERaZnhBdndRS0JnQWRVOTQ3Kwp0akYxQmhIWXo4Q3EzS3lTZlp1SGo2dEw0QUVLWWFSWGxPNHR3Yk1lLzlJLzRBaVNocXZmWi94YkJmblNsbEdYCkhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKZ1k4WExoWkxObFY5MXU0RjZpTGFMMER6QUhLdlJSY0dIMHU5QW9HQVROaWdaZ2JSUkhKQzIxSnVjSGVFMHRQNwpIakdBTHZiNHFuMW8wb0RIc3hOWThpNnZWTnc5WWVRcFphSmhjZXVSSEpUR2NzcTJkSlNYcFl3SWhJVnMvOFJLCmJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKZWNhRy9PeW8vUytlTThuUjdtYz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-account-lookup-mysql
  labels:
    app: ml-account-lookup-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
type: Opaque
data:
  
  mysql-root-password: "WWNkd2o1SzRPdA=="
  
  
  mysql-password:  "T2RvblBpYW5vWA=="
  
  
  xtrabackup-password: "TFlvemxNcWZ2TQ=="
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-cep-mongodb
  namespace: default
  labels:
    app.kubernetes.io/name: cep-mongodb
    helm.sh/chart: mongodb-12.1.20
    app.kubernetes.io/instance: ml
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
type: Opaque
data:
  mongodb-root-password: "YWRtaW5wYXNz"
  mongodb-passwords: "cGFzc3dvcmQ="
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralledger-mysql
  labels:
    app: ml-centralledger-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
type: Opaque
data:
  
  mysql-root-password: "M1BpWUllR3pRWg=="
  
  
  mysql-password:  "b3lNeGdaQ2h1dQ=="
  
  
  xtrabackup-password: "dDZPMlV6OVk0bA=="
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralsettlement-handler-deferredsettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-14.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralsettlement-handler-grosssettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-14.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralsettlement-handler-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-14.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-14.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-ml-api-adapter-handler-notification-jws-signing-key
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-12.0.0
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KVkFDL2l4bTZsejhrSm1pZ0lCNWpNeExyaEI5Y2dxTStwYjBPK2lzODhWUkhkeHR3OGVLRzNudnJaWXkvNG5zSgp6MzJxbzRzT0lNcUhXVGxaZ2JVUlZLNEZBVUVaL3FuNjNVblhKMVlWcVQ0VUdnMzFCQmoyYzFKZGx4RzJ0NEpWCkR2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKNU1aUEhONTFvMDRlSW9MTzB0UGZrejArTkRzNEVDd1VXdUZBZzh5bzFoeG52U29FUmlDQXdFYkZncTJ3RGUxKwpvQmhPcHVzZDRWYXN0RC9URXFPOFJocndUb2RkZE9NS3phcEpQclFKdXZUa3Jwa21rUE9HRThEZ0lWSHNVTExSClVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKRC9wMjFha1MxNTZFMzJCRUp1WVBrL1RMaUkya01Xam52Ykh2TmdyOXRxOHgzVG95VGp0cmc1Y2xxOEhyMU96bwpGbkZpcWtWSE1GUEZQUVpFVlU2NENRUEEzM0RpeHVXak1XUzNZSU5mQ0FpbkVyQnJ5MFBpTlpHbXVGaTFLL3d5CmUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKTks2SFFvRVhONFk5QVFIbjUzRmw4bjBpTk8zcXgwVGI3RXVHTkZtWjJ4VGxwREtBcDhNK0JBNVFtNVlEa2JkNgpPb3hiR2oyWXhabmNiRytSc3ZJQ3RWTUxxSXl0dWJ2WVJFWTlXR2tDZ1lFQStLNjR4aEp6V1YzY0djOC85MGtvClRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKVjhabzJHZXI2TG45OUxCZGRUaDJIWEwzTTYwY01nczhNWUd1Sjc1ZzVSL1VIbkpCTG83TkZ5VmRkQ09NVDNoYwpBWVNETjNYQ3c5eWNxVHcyL21KSEI5a0NnWUVBOVFpYUNmVHRuWGRqTXFMZVlicDJ1UUV5eU82SVpzOTU2eW03CnNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKNU5qNFNWUVd1T1hKaGRmQzlkbVRGK2N2QmVQK3ZDNlB5RGJpa3hkQ285KzA1Y2h4UzdJM01MeEN1ZTRxeHkwQwpRZlFJRTEwQ2dZQStrSGFjSG5nMnU0NXNUOS9mN3QvZEwwRHpTTlJBdkw3aWVrSWtDSVVSaDhSRG5EenJNVld3CmQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKOHloRmgzZ0pMUURJeUNYdCtLOVFhMjRma2ZIeTdHejVWTVZPWnFvaGJKZGRYSERaZnhBdndRS0JnQWRVOTQ3Kwp0akYxQmhIWXo4Q3EzS3lTZlp1SGo2dEw0QUVLWWFSWGxPNHR3Yk1lLzlJLzRBaVNocXZmWi94YkJmblNsbEdYCkhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKZ1k4WExoWkxObFY5MXU0RjZpTGFMMER6QUhLdlJSY0dIMHU5QW9HQVROaWdaZ2JSUkhKQzIxSnVjSGVFMHRQNwpIakdBTHZiNHFuMW8wb0RIc3hOWThpNnZWTnc5WWVRcFphSmhjZXVSSEpUR2NzcTJkSlNYcFl3SWhJVnMvOFJLCmJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKZWNhRy9PeW8vUytlTThuUjdtYz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-ml-ttk-test-setup-aws-creds
  labels:
    app.kubernetes.io/name: ml-ttk-test-setup-aws-creds
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-setup-15.0.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "AWS_ACCESS_KEY_ID": c29tZV9hd3NfYWNjZXNzX2tleQ==
  "AWS_SECRET_ACCESS_KEY": c29tZV9hd3Nfc2VjcmV0X2tleQ==
  "AWS_REGION": dXMtd2VzdC0y
---
# Source: mojaloop/charts/ml-ttk-test-val-gp/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-ml-ttk-test-val-gp-aws-creds
  labels:
    app.kubernetes.io/name: ml-ttk-test-val-gp-aws-creds
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-val-gp-15.0.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "AWS_ACCESS_KEY_ID": c29tZV9hd3NfYWNjZXNzX2tleQ==
  "AWS_SECRET_ACCESS_KEY": c29tZV9hd3Nfc2VjcmV0X2tleQ==
  "AWS_REGION": dXMtd2VzdC0y
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-payeefsp-jws-priv-key
  labels:
    app.kubernetes.io/name: sim-payeefsp-jws-priv-key
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRE11MTI2bWlld0NVQ1QKN2Y0OUIwU3lDUEZHem1xR1NzOXJUUGJrMXNlK0JCaHFmaHNma1pqNmNSUmZybGczcm1lNndlMEliMkFGNVRRTApub1NCbERBaW1RY05PSFhycXBBWS9CMGwvbWd5VXdtZnYwTkozVWpadUNGdXczSFJyVS9vU1VmWG9ESVRDK0JpCjEyMHc0RlkyQi92UG4rMWlDL3RzYUNheW5lb2FWL1NlZHE3SDkrc21FblFmR2wzcDVRSnAvQjJXczNCejFIcUkKSW94TEVhTzlWTWVESFFQdk5Kbi83ZzllcnFBNXZJaG1nTFM0Nndvck9WamRSTEgyU0VDSDczcXA4V2cwcko4WQplVzJrUThrdVk0dUhjRzNNTzZkcllyQzAxMVUwWnlNOTBLVjdkdjJZMGgyRkhscG45cy9wbWI2MzBtNUVMcG5CClQvcFlUTGNYQWdNQkFBRUNnZ0VBRHFrNlF6M1NnQmVNTVlFV1laNFpkc1c2S3RwbStYcWcva0R5NEp5d09COXoKU2lrQlhlZUtIM1o2bHR3cTJCaWNEVjAyMFdiOFp0K3MzdlRPbUxoRHpDNTQ0L2hQbXRLZmpXZlIyZUhYNmdhcQptKzhtbCsyMHBRRm1iNEtuMk1sQy9YendtL1NPWEJ2UHlVbVR1YTk1clFFeHNLMTJEVDArRjRZaExmaFlzVGgyCkhma0V6ZEZXNHJyZCs5ZGRLRzFaQU5TNFphaU15emh0dlVXZUVCeXBCdFZmK2tCays1MXQ5cExDZGp1eW5iOEkKV3lsU0RoaWtUMy9ZUS8zZy9TejNTTXAxdTR4MEdRZTlGV1lyblB6enA1TG5NNWZtNDl2OEpXVkhVdmQwVE9pMApkUVYrTFlsZ1NEMzhZUHBpNGlLUVNoMFpmMEVCZmJBODNHc1gyQXJKN1FLQmdRRG12Y0E2UHFQbzBPVi83UktZCkp1emlBM1RwdWNMOGlWTTFpNy9MdjYrVmtYODh1RHZFandMb05BaVljZ0ltL0NNSzdXQXdBK0R6bjRyMzhFSEIKQktGNEtSaFAwcVFTMEtMWHNkMHRkc21BQjBJbjcrY2JLTDR0dHFOVVA5OHhaQWtUTEpxOVBYcVRLTjBxdHl3NApTZklzVk1qREdvZVNkV0hPYlpZYkdLSUNmUUtCZ1FEakpMd29sRHJWWDI5VjR6Vm14UVlINWlOKzVrd0tYSFhqCnN1SEJyVzAyT2ovR1FGaDNYajZKUWkzbXpUV1loSHdoQTRwZGFRdE5ZcVRhejlJYy9PMVZOUGljMm92dGcrY2QKN3NoODZxZFE0UVpZaE4zUlQ0b1gvLy91NitVSzkwbGxoOWhFQm8zR3VaNFg0N3R1QnlOdEQ0U0ZBbFVMcmtTbQpmVzRYYUMzZ0l3S0JnR2lsNkhmQ0R4NjVGMDBVblZsS1ZpY1BRRWY4aXZWejVyd2pQSUpRMW5aMFBZdXhWdElICnRsN1BzcEpKS3JhNXBiNy85NTd2TTJmcWxPRnNJclpDdm1TNzVwM1ZQN3FVeXpZZUlkekx3Z21Cd1R4UnJyUC8KbjNrbUd4OUx0Sk0yOW5LdXlTTklyYjN1UzVoaTZQaENlVVluMGNIQzEzZlNLdUN2ak9PUElYTVZBb0dCQUpnKwpDUGRSMHRVczhCeXEreUgwc0lRZTFtKzV3QUc1MHpKWXRVUHhENkFuRHBPOGtROEExZjE5by9Kc1hKM3JQcCtLCkZmVmg4TGRmaElzOGUrSCtETHp0a2l6ZnRxWHRvTHpKVFF1YzQ2UXNEdXJKc3pzVmlzTm5USTFCQXZXRXBXY3QKMCtCVVhEWjBOdWhnTlVJYityeWdoL3YyZ2pZZ0NkZGxmcUtscXdudEFvR0JBTTVLcHA1UjBHMGlvQXVxR3FmWgpzSEVkTHFKTVNlcGdjNmM3UkMrM0cvc3Z0UzJJcUNmeU5mVk1NM3FWNU1ZM0o3S25BVmpHT3cyb0piWGNQTFhhCnV1dHNWVm1QeDJkL3gyTFpkYzhkWVljZE9RWnZyVWhtQUxoQVBYTTRTUnVqYWt4aCtVeGkxVk9pVytmWkw4YVcKdXUxcHh1V0QwZ1RKeEZrcDZ1NFlJQWh3Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-payeefsp-tls-creds
  labels:
    app.kubernetes.io/name: sim-payeefsp-tls-creds
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lRUC8xellBbzNOclRVN3ZKWFNqVnhJREFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBcE1TY3dKUVlEVlFRREV4NXRiQzF6YVcwdGNHRjVaV1ZtYzNBdGMyTm9aVzFsCkxXRmtZWEIwWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN5Q3luenFRemkKUk9Xbk51NlpLRmsyZ1djZGJLSzNBZXgwR2l5TWQ3TW4yVy9LWS9uMnhuMXJhb2hqek5YUGFTMnh3OUtVY0RFSApZeWZhWHVNalNsNzh0b1VHeTNKRG1jcG5TWTJncjU1S3F3WWlaZWhCVVNYZzhvN09reDlOMXNsRUNEYjZpV3BTClQzdnVNU1FibDc5OXR1Y2h1dGFwRXYrQkRmZjRCZzcvY3E3QXR4M0cxRHBKRThNdk1aVit2WFhHUWRTQU1vcWoKdStVaU1mY0tzZFdxemp1eVREM1dLVjE0dXdNODRvT1Z1YVFCOTg5YjdDanFmZ3VGRE1JdnlNajNWTHZDeXNLSQpLbVY4VnRicGE3WVBhTGx2bVlPT20ydys4R3A5V3BiT2JLdG0xem94ZmNZLzdGSklPM3hTbEhaQzZWdDBIeW81CmVpQndXak5XcExiTkFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJITThPSApNT0hJK3FaaFpTZ0ZxaTU5TmFUT0FEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSaXliN2h3QUk2N1FLWmJzClArVTdTVjZxcTlYY3NmeGZrZGg4RkxDdG5iZUJ4d2M3TXNkTVRLU1ZFNnlFeXRpeWNqS3B5NnVWSlJQTHF3MncKcmNQcHVjRTBoa3dleWo2UDJTYUdvU2lXTXhycFlkR0lRSURuZ0NPTGdBMzh6NWcrd3loNW55RFh3SHFaWFRDbQpsbC90WnlVV240K21va3JqRElJcUlabXJHYTFudCtvSTcrdzgweEd2d2hiS1UxL0ZQNmNPcEpGVU1tQnc2dmZLCmpDeElyaWU1MGxPdExuNmxCQ1MvZ3M2TlpTb0dmWEREOUc0UmRCQ3hGMEk4N3VoTWMzY2J3ajhCUDJDLzhqbXgKTytnSS94YTF0ZHNTcVl4Nk9YWDRwZFRSeURtZ3JhbGpManRTV1NtNW9HSm43WW9nUG9ZbXJsUCtBdXU4ajFyYQpWWHozYWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc2dzcDg2a000a1RscHpidW1TaFpOb0ZuSFd5aXR3SHNkQm9zakhleko5bHZ5bVA1CjlzWjlhMnFJWTh6Vnoya3RzY1BTbEhBeEIyTW4ybDdqSTBwZS9MYUZCc3R5UTVuS1owbU5vSytlU3FzR0ltWG8KUVZFbDRQS096cE1mVGRiSlJBZzIrb2xxVWs5NzdqRWtHNWUvZmJibklicldxUkwvZ1EzMytBWU8vM0t1d0xjZAp4dFE2U1JQREx6R1ZmcjExeGtIVWdES0tvN3ZsSWpIM0NySFZxczQ3c2t3OTFpbGRlTHNEUE9LRGxibWtBZmZQClcrd282bjRMaFF6Q0w4akk5MVM3d3NyQ2lDcGxmRmJXNld1MkQyaTViNW1EanB0c1B2QnFmVnFXem15clp0YzYKTVgzR1AreFNTRHQ4VXBSMlF1bGJkQjhxT1hvZ2NGb3pWcVMyelFJREFRQUJBb0lCQUhtYmJIVVQ0MHZ0R1JzRQpSeVh2VERnUlhMZlpTcTVMTHhFQ0M2bUozS0Y4UDRIeWxYbjdpeERDUEJSR2hVZGNwS3hGZjJDSjNNTVo4OCtRCmZmM052MkZHM1VlTjBDYmlOVUFsR2dwRnlZMWdrUmtQbC9wOURhMCtuMUh6WlM5S1pFQUdpRjdKV3dpTFo2K0MKZXhJcHJNNldEZnFZM2lPdmFUcmhxcHdLcjFYRUFERm1LaDY1UkRCS2tENmNrQlhIdEN5YnNzZnJrQVoxQ1lSNApQaFY1RkRhWXZRVjJxWmFFbXpodyszdnM5cS90bXBvZFUyZC9nZjVDdFRPNld5ckpJaEZmNWNKeG0rN1ViVlRSCjhXeDd6eHhZTDV4MU9EdG9oUXl1d2dkdm1lemxSUmZvZEp1NnRqRWN3d2NMaDFIQ3d4NitJMWNJa2lKejdnRHoKMmRENFVGVUNnWUVBM3hsVnplUGt4NnYwSG9Za0NRcnJQMHIwZVNHbTcwM2pIaDE4VWhOMTRHVEd4OUV6aUJBOQpZT1pySDB5ald2R2JaMWoxd3FDc0kydHVNWjhCaFRxY3VLb2dCTEtYL0xjT2pRRkN3Mk5BQzlFYW53T0hQWlhQCnVzS0V2Q0pHVG1TQjZBSFlyQlJiYXFkU0Z6QkFYLytxZlliRTNHY1NIaWJuUnJFR2h1QmVId3NDZ1lFQXpFemEKRlVkWTlVMG1nTUZqYnNlK094blBtdWpoWjFhRzZQSkYySlpRTUNLc3FtTFJIL3JWUGx6Y2JnTlZqbjNWV2RLeAp2QmExZjZDSmVBNG8ySlVqQmRQQjJvOG9nVVFxM2xqWlBOcGFZVlN5ODlVU3gwTjh3enlXRGd1TmhLQlgveE82CjFWbEdBck5wMTJ5RUgrUVJVYTk5bW93SDE0YXluMjVxUnNwZUNJY0NnWUIxOE5qUmpZYW1vQnJnQUI0UXdicjMKck5KdEx3TW5RMCtyM2Y2WkRUeWxzZUQ4UlhZdW1oYzRvTmRFcHFrOUxMancrN0NBZ1p3KzVVNU40VGRXalZQSQpzL2RWUkd6ZzVvMUVzY1B2c3dwcXROS1QrYk9ITlNtcUc2YzhKZ3B3NnVWYUY0L0orTUVUTXYxTTBPOVhVTHQ2CnZNSlptZ3VUOFJFVzZBTUJUcCt6WFFLQmdRQ05qR1hCUG5pOUpLSWJyV0hXSEdDS0ZEMEo2SFpib2REQlR6TGoKZUduQW9CV2Z5KzEyeWRTN2E1MXlQNjhrbGJ5ZmltS0luZmRNb1E3OTlsbUlqZlFCRXBHS2U0dWwzSFFUTDkzNwowcEd5US92bEF1a0sxSkI1dU4yQ2g3Q2Fobm5SaW5yMVhQQXI2T0RaV0I5RzlUNm1xUDlPZDl6ckVERnNVeFVoClRRN1B1d0tCZ1FDSjZjeGIrUms5Z0NIeXQwQ3NwZ1ZwY29lWGI0RHcrODh4L2VwdWFLLzYydzdxWTBoRk1sbzAKKy8xUzM1dzhXY1R5clJ6TC9vY3BNUnBMQ1MvQ281a2lyMjlma256bnpmcThDSHYreUdQQVNjMWtOdUtvTW0vdQpBUGpsZm9mL2VwcEQrc2tmSlNNTUtmME1vQXhwQXByVFNEZ09ueFphb3JqWk55NkNQVTRJQ0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lRUC8xellBbzNOclRVN3ZKWFNqVnhJREFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBcE1TY3dKUVlEVlFRREV4NXRiQzF6YVcwdGNHRjVaV1ZtYzNBdGMyTm9aVzFsCkxXRmtZWEIwWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN5Q3luenFRemkKUk9Xbk51NlpLRmsyZ1djZGJLSzNBZXgwR2l5TWQ3TW4yVy9LWS9uMnhuMXJhb2hqek5YUGFTMnh3OUtVY0RFSApZeWZhWHVNalNsNzh0b1VHeTNKRG1jcG5TWTJncjU1S3F3WWlaZWhCVVNYZzhvN09reDlOMXNsRUNEYjZpV3BTClQzdnVNU1FibDc5OXR1Y2h1dGFwRXYrQkRmZjRCZzcvY3E3QXR4M0cxRHBKRThNdk1aVit2WFhHUWRTQU1vcWoKdStVaU1mY0tzZFdxemp1eVREM1dLVjE0dXdNODRvT1Z1YVFCOTg5YjdDanFmZ3VGRE1JdnlNajNWTHZDeXNLSQpLbVY4VnRicGE3WVBhTGx2bVlPT20ydys4R3A5V3BiT2JLdG0xem94ZmNZLzdGSklPM3hTbEhaQzZWdDBIeW81CmVpQndXak5XcExiTkFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJITThPSApNT0hJK3FaaFpTZ0ZxaTU5TmFUT0FEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSaXliN2h3QUk2N1FLWmJzClArVTdTVjZxcTlYY3NmeGZrZGg4RkxDdG5iZUJ4d2M3TXNkTVRLU1ZFNnlFeXRpeWNqS3B5NnVWSlJQTHF3MncKcmNQcHVjRTBoa3dleWo2UDJTYUdvU2lXTXhycFlkR0lRSURuZ0NPTGdBMzh6NWcrd3loNW55RFh3SHFaWFRDbQpsbC90WnlVV240K21va3JqRElJcUlabXJHYTFudCtvSTcrdzgweEd2d2hiS1UxL0ZQNmNPcEpGVU1tQnc2dmZLCmpDeElyaWU1MGxPdExuNmxCQ1MvZ3M2TlpTb0dmWEREOUc0UmRCQ3hGMEk4N3VoTWMzY2J3ajhCUDJDLzhqbXgKTytnSS94YTF0ZHNTcVl4Nk9YWDRwZFRSeURtZ3JhbGpManRTV1NtNW9HSm43WW9nUG9ZbXJsUCtBdXU4ajFyYQpWWHozYWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc2dzcDg2a000a1RscHpidW1TaFpOb0ZuSFd5aXR3SHNkQm9zakhleko5bHZ5bVA1CjlzWjlhMnFJWTh6Vnoya3RzY1BTbEhBeEIyTW4ybDdqSTBwZS9MYUZCc3R5UTVuS1owbU5vSytlU3FzR0ltWG8KUVZFbDRQS096cE1mVGRiSlJBZzIrb2xxVWs5NzdqRWtHNWUvZmJibklicldxUkwvZ1EzMytBWU8vM0t1d0xjZAp4dFE2U1JQREx6R1ZmcjExeGtIVWdES0tvN3ZsSWpIM0NySFZxczQ3c2t3OTFpbGRlTHNEUE9LRGxibWtBZmZQClcrd282bjRMaFF6Q0w4akk5MVM3d3NyQ2lDcGxmRmJXNld1MkQyaTViNW1EanB0c1B2QnFmVnFXem15clp0YzYKTVgzR1AreFNTRHQ4VXBSMlF1bGJkQjhxT1hvZ2NGb3pWcVMyelFJREFRQUJBb0lCQUhtYmJIVVQ0MHZ0R1JzRQpSeVh2VERnUlhMZlpTcTVMTHhFQ0M2bUozS0Y4UDRIeWxYbjdpeERDUEJSR2hVZGNwS3hGZjJDSjNNTVo4OCtRCmZmM052MkZHM1VlTjBDYmlOVUFsR2dwRnlZMWdrUmtQbC9wOURhMCtuMUh6WlM5S1pFQUdpRjdKV3dpTFo2K0MKZXhJcHJNNldEZnFZM2lPdmFUcmhxcHdLcjFYRUFERm1LaDY1UkRCS2tENmNrQlhIdEN5YnNzZnJrQVoxQ1lSNApQaFY1RkRhWXZRVjJxWmFFbXpodyszdnM5cS90bXBvZFUyZC9nZjVDdFRPNld5ckpJaEZmNWNKeG0rN1ViVlRSCjhXeDd6eHhZTDV4MU9EdG9oUXl1d2dkdm1lemxSUmZvZEp1NnRqRWN3d2NMaDFIQ3d4NitJMWNJa2lKejdnRHoKMmRENFVGVUNnWUVBM3hsVnplUGt4NnYwSG9Za0NRcnJQMHIwZVNHbTcwM2pIaDE4VWhOMTRHVEd4OUV6aUJBOQpZT1pySDB5ald2R2JaMWoxd3FDc0kydHVNWjhCaFRxY3VLb2dCTEtYL0xjT2pRRkN3Mk5BQzlFYW53T0hQWlhQCnVzS0V2Q0pHVG1TQjZBSFlyQlJiYXFkU0Z6QkFYLytxZlliRTNHY1NIaWJuUnJFR2h1QmVId3NDZ1lFQXpFemEKRlVkWTlVMG1nTUZqYnNlK094blBtdWpoWjFhRzZQSkYySlpRTUNLc3FtTFJIL3JWUGx6Y2JnTlZqbjNWV2RLeAp2QmExZjZDSmVBNG8ySlVqQmRQQjJvOG9nVVFxM2xqWlBOcGFZVlN5ODlVU3gwTjh3enlXRGd1TmhLQlgveE82CjFWbEdBck5wMTJ5RUgrUVJVYTk5bW93SDE0YXluMjVxUnNwZUNJY0NnWUIxOE5qUmpZYW1vQnJnQUI0UXdicjMKck5KdEx3TW5RMCtyM2Y2WkRUeWxzZUQ4UlhZdW1oYzRvTmRFcHFrOUxMancrN0NBZ1p3KzVVNU40VGRXalZQSQpzL2RWUkd6ZzVvMUVzY1B2c3dwcXROS1QrYk9ITlNtcUc2YzhKZ3B3NnVWYUY0L0orTUVUTXYxTTBPOVhVTHQ2CnZNSlptZ3VUOFJFVzZBTUJUcCt6WFFLQmdRQ05qR1hCUG5pOUpLSWJyV0hXSEdDS0ZEMEo2SFpib2REQlR6TGoKZUduQW9CV2Z5KzEyeWRTN2E1MXlQNjhrbGJ5ZmltS0luZmRNb1E3OTlsbUlqZlFCRXBHS2U0dWwzSFFUTDkzNwowcEd5US92bEF1a0sxSkI1dU4yQ2g3Q2Fobm5SaW5yMVhQQXI2T0RaV0I5RzlUNm1xUDlPZDl6ckVERnNVeFVoClRRN1B1d0tCZ1FDSjZjeGIrUms5Z0NIeXQwQ3NwZ1ZwY29lWGI0RHcrODh4L2VwdWFLLzYydzdxWTBoRk1sbzAKKy8xUzM1dzhXY1R5clJ6TC9vY3BNUnBMQ1MvQ281a2lyMjlma256bnpmcThDSHYreUdQQVNjMWtOdUtvTW0vdQpBUGpsZm9mL2VwcEQrc2tmSlNNTUtmME1vQXhwQXByVFNEZ09ueFphb3JqWk55NkNQVTRJQ0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-payerfsp-jws-priv-key
  labels:
    app.kubernetes.io/name: sim-payerfsp-jws-priv-key
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ2c5ZVU2NmhnNFpBRTYKak00VTh5bFhRd1V6OWNkbXpTM0p5VysxYmJndjc3cGVNS1NVL3dGc2k0UVJ3bWJyWXplOWJhRm5HQ0tuUzc1RQp2Q2NoaWI1dkp4cDNNRFd6aS9UR3htemdXZEpSemt5Q2lJNUM2ZENnVkw3MU1qc0ZnTjNUTjYzd0VmNXNFVTJJCmVvSjh5WEpNMHBVRzlmOU5PN3AvSUdsaURtdDZDN0VBN0Q5a1FXaWd1Zm1YMFpUVk5LSTA3Zkt3Qy9BRUtMcDcKa3g5OXB2c0NxOG0xODRFRUwxNVEvTmhBN1IvNXpLb0h2bUphNkpkN3RNMGkweG44SUtPa05WRnUzWUlhZkFFQwpRV1F3UmJhbkZFZVJjM3RIM2JFb1lNOGM3NHIrVytZeENHN25VZjE2WENrMTMyWFZmZmJIVmwrd0ZnbzE4WUIvCnNBSm1jYmVQQWdNQkFBRUNnZ0VBR1FHS25zZitna2c3RHFNUVl4M1J4dDVCSVN6bVVSakFLOUN4RzZFVGs5THQKQTdRUDVadm1WenduaFBETU4zWi9FdDFFelhUbzhVK3BuQmtWQlRkV2tBTWxyKzJiOGl4a2x6cjljQzlVSnVSagphNFlXZjl1K1R5SkxWbUY2M09TRDBjd2RLQ1pMZmZPRU5aYyt6VzhvWkRuMDhCTm9tZEdWTENuWFpXWHpHWThYCkthSlRKcjI5akVna0tPcUZYZEFIcnNtajdUQnRxU0xaS3gySUhkQ21pMDUrNUpDeFZMUGduRGlDaWNaOXpFaWkKeVd3NTdRMW1pZ0ZJY3c2WlFQNFJ5amdIMW83MEIrem8zT0w3SVFFaXJFMTdHVWdLMTZYRDh4aThoV0NZVGo1bgp4T3o5eWZWZlB1WW9tLzlYYm01a1lKWktFMkhPWjNMZzhwVW5XbmN1TlFLQmdRRGJhT29BQ1FQaFZ4UUsxcVlSClJiVzBJNVJuMEVEeHpzRlBFcHUzZVhIb0lZR1hpOHUvZXc5QXpGbUd1K3RLWUpWNVY0QkNYbzV4MmRkRStCOEIKZFhoeUhMR2ZlVjh0V0tZS0JwYXRvbFZ4eEtETC85Zm54b0dJQU85Y2M5MWllT201SnhtS3NjQ1ZQMVVuT1hIWgp1b21TZkFiR1F3WUR0TWQyYkpLa0UxejBxd0tCZ1FDN3phY3V2MVBNYURGa3NIdU5OUkcrYVo3NHBKNzdtc2h0CnZKb0t5YVFja3REMHhtSVhoRmZKdks0Y2Nsekc3czVqeENzdTJlamltZ21mVnpnWGxMRU1ySkZ2U2RGa0QyU1MKZ0dxb3hxNWM5Zzhzc3Z0N3h3cjdhSitWWVlXVFdSekpyT1VueSs5OVVid0hlZHUwRUhMMUJZSUx3eTY3TGl1bQpzZ1VlZUNFZ3JRS0JnR3YrN2Y3cWNSQi9qZ3Z2cjNvYzk5MGREalV6R21SclFsY3JiNTRWbHUyTllINDVmeVpXCjZpRVk5SkFPK3pkMjV0djlKOUtEUEZYcHhiM2E2MWdLZkNpZTJ3Y0Y5TVViTjA4RUF6S2dEckthK0JLeGNaSlIKOFB3Q2ljN1Y4UWhCUDdtMDl5dC9acTJQcU5oUHZDeFJWdG5WVm5oTUVTL04wY2dHbFA5UjBKVlZBb0dBSFUyLwprbW5FTjViaWJpV2pnYXNRTTdmaldFVEhrZGJiQTFSMGJNNTl6ditSbnovOU9sSXFLSTVLVktIN25BYlRLWG9JCml1enhpN29oV2oyUHdRNHdlaHZMTGFSRkNlbms5WDhZSlhHcTcxSnRsN250eDZpTkxDRnRGUy84V2J1RDVHd1gKN1pmQ3JMaytMNlJ5QmF5elkwd1N1S2NoK1k4QXZLZjJhSVN5RnBrQ2dZRUFqU2ZFano5Q24rMjdIZGlNb0J3YQorZnl5b29zY2kvNk9CeGovV1RLdlY2S1VZTEJmRm9BWXBiOXJxcmJ2bmZ5eWMwVWlBWVFlTUpBT1dRMWtrelk0CnpYczYzaVBRaTJVZUdQSlo3UnNUKzMxRFNhRzlZaVFkckluc1VybG04aGkxQzdQZy9OTnQ2WTFHMFdoV1lydkYKaU5LMHlDRU5NaFNvT1R0YlQ5dG1HaTA9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-payerfsp-tls-creds
  labels:
    app.kubernetes.io/name: sim-payerfsp-tls-creds
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lRVkFJVHp2enBaQ3NNNWNvT2xTU29OREFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBcE1TY3dKUVlEVlFRREV4NXRiQzF6YVcwdGNHRjVaWEptYzNBdGMyTm9aVzFsCkxXRmtZWEIwWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM1T1cyNVJqaUYKMEQ1K0htSzBpZ09UV1VIa21wa1d1clEvREFVR3MyRTNqWlNkU1hoWDBWWlZ3dCtNNXF6YVZ0RWRtOVZEaWhsZQpOeEgyOTZGZmgvV21TY3pYcVhTY2doYW1sR2k2Y0NrVDR1RUNtMVdhZ3poZHhMbGNEanNXSy9pT0hTV3RDT1NYCnVEOStYOGI1OFV0UjNGRnZSVnI1dklvYW01UVlxL2grREhmbkYyOVBldnJXVXNheThUQXVLS2ZZOTRNSmwzS3IKZmt0NUZITE00T3RBWkFyZlk1UTEyTnovbFM5dUtwbkdNMEgrcjBrSTAwVTVTeEg0Yk16eGRLaEFrblQxQThDdAphUzJhaEs4YkxENFZRMWs4dzU5SW9vcTNaRjNHZGdacmxPT1ZkdmxxUlBHcTJpKzQ5bWVRUmZ5b1VRQlBFODdSCklDdG4xYUZHK0hvVkFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJITThPSApNT0hJK3FaaFpTZ0ZxaTU5TmFUT0FEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFISzFzNEl6MGtFeUowcDMyCkpUWXFyV3ArWlE2aDNxUDQ4dXdKNURNa3JJYW9TNWFDRXZmODM5Znc5ZDZvRmZZbC83Q29ZMUpRM3dLU3lxU2kKUnRaRDc1OXB3YUVSYXN3Y21wTy9hY2cxVnVKTEJkWUtZVDNkcWg0cExxNk5OSm5mS1NXWDYxL0VjVEhRUnA1QwpsYlNRV2w5aFBOUlZLZVFiYzQ1a1VnbGphdkx2UHlBZTNnT09obGw1RDZ0dTdBOFJMZHJscTkyeHdxQlYwYmJUCjVwQ0NaREJJdGZLKzArMjZHMWxla3hham5ESDRCZVFFQmI0NmNPNERxNWFDdTAxMEtCVWV2QWdxYUZqbXNrQ24KLzlOc2liQ0Q3ZzNIUzVSZEUvMlU5Wk56Yk0wSUlCbHhLT1pWWm11dDNGUStLSjcraHB4YUdrU0kyMjgzdmRoMQp3MU5wRUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdVRsdHVVWTRoZEErZmg1aXRJb0RrMWxCNUpxWkZycTBQd3dGQnJOaE40MlVuVWw0ClY5RldWY0xmak9hczJsYlJIWnZWUTRvWlhqY1I5dmVoWDRmMXBrbk0xNmwwbklJV3BwUm91bkFwRStMaEFwdFYKbW9NNFhjUzVYQTQ3Rml2NGpoMGxyUWprbDdnL2ZsL0crZkZMVWR4UmIwVmErYnlLR3B1VUdLdjRmZ3gzNXhkdgpUM3I2MWxMR3N2RXdMaWluMlBlRENaZHlxMzVMZVJSeXpPRHJRR1FLMzJPVU5kamMvNVV2YmlxWnhqTkIvcTlKCkNOTkZPVXNSK0d6TThYU29RSkowOVFQQXJXa3Rtb1N2R3l3K0ZVTlpQTU9mU0tLS3QyUmR4bllHYTVUamxYYjUKYWtUeHF0b3Z1UFpua0VYOHFGRUFUeFBPMFNBclo5V2hSdmg2RlFJREFRQUJBb0lCQUJTOGVpMDQwRkVpekN4QQphSnAvclFETkNGUjRmbFVPRituTEJiRUhXZ1huSXRFdERYei9ZYVArU2hxekpIelpKVllrUVE3cm9nVnJNdWFzCk9IUENlOXplL0VEVXBzcHl3ZWhxU3dNOFZVejFwRzB2U0xrZ29hblZ3VTZ1QlMxcFJNMWNOQUNZTTBkTkNFYTAKb0VrUkczYVJyTWhCUW5zZEFYVVRIOVJYUkYyUUJPbzlhRnJyclQxQ1M2TmV5SW51b0ZBbE5ORUVOdHBKSFEzcwpjd1JUNEs1bFFBWlE2clc4aUJxYS9XRnFCRXVxWnpMaFVTYkI1cU5sUHIxNnJuNmtDSVJwWG1WeWFNZHNUK1lRCkRFMkZwclNQUGRiTXJpblgzS3VnOFhuc3hOaEpmbXNuUDlpU2lPMkxvYlVpTlZDMVdOR2F4cnI2U0NoN3FZak8KQ0JHdzRJRUNnWUVBeTQvNTgxODkzTWk4SmRHUGhlaGx6VitubVdRTmdOR25lOWdVYUtXMU5hNzd1MVZ2aVJzMgpBMytJQytJYjcybXdheEY1QmgxRzgyV3dXc3k1UUE4V3NIdDUwd0M0T25SOXJSWTNQSklJZCtVc0t0VXRCem9XCk56aWFrWmVReDJ1azljVHlpUmxOSWFTSzR3T3VvYW5FV1dLWm1pTjJoZXNEYVBIUVExTGVrYUVDZ1lFQTZQQWoKZitlVm9jVnkzanRJVmtOcTZ2eFA2ZnpmSHF0VWFMdHVNZFVrNTdLZ2I4czgwNUdTeFNkUmo5WXdLK3pWWE85LwpMeEJ0UUpScmJyN0tNaWVieWxOUmpEQTE5QkVzMThTS04wVVJWK3hEVnhZODJweWdSQ2trakE2VHlEb0ZIbE9ECkhPV0Yrb1VXSTJlVVlTTGhkM3dwVi9GekdKVUh5Z1FtV0JFSE8vVUNnWUVBeXZUcjR3anNwdnJGREhmYVAwcXMKWlkyZmpzSkE3RlVjUmMvMDJUbU9hTTNrVXEwbUhXOHg5VjdzQjkwU3VTdUpKOWN0OFRpeml1MnlYWFdNcGgvbApJV1NhM0JQMW11S1dnMEtKSkN6OW9IeXdBcXkwem1YTnpKVDFGNEFrYTVBWjBxamdvR3pIaUdtRHlEL2RsM1dxClBPeWY5Unl5aVdiOTZWNWZwU0EwcE1FQ2dZRUFqa2toWmgrdjV3RVZDV3BzNVVTSktzQzBqOWxHOFJUMm1vTGkKN00ybG5XSWZYaXBuSFZUdXNqOHlNd3BDb3BJb1FueUkwOWJVNVgzRG9nSW93RG94ajRVVmF1eUlDRzMxVmxkWApsaXM2VE5xa3g2MXR2cHV0eWZUWHZqV3BUOFVoRzBVbjhaN0NHQ1R6UU8wa1ZiRll5QU92dldoZlJjVEMzVU5yCnFKKytLNEVDZ1lBY2NvTDZReTkyTlUyM0tHeHFEOEJLMWtNMGF6UVFncENKckV6QUM1QkVFdUhUSzBjK3h2Z2gKeFJUbTVleW5OdmRvVHRid3NJM0hsRU1RMTA5aDl6YlJBUmw2ck1IRU9TUGJ3R05sS3h6YmMzRnczTnphVjNrWAo3cS8xR2JNa1dCWC9yVmlNRDA5NXNuaW9aZzY0ekszek5Ib0xiT280c3IwVnVzVnAvYXJtVnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lRVkFJVHp2enBaQ3NNNWNvT2xTU29OREFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBcE1TY3dKUVlEVlFRREV4NXRiQzF6YVcwdGNHRjVaWEptYzNBdGMyTm9aVzFsCkxXRmtZWEIwWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM1T1cyNVJqaUYKMEQ1K0htSzBpZ09UV1VIa21wa1d1clEvREFVR3MyRTNqWlNkU1hoWDBWWlZ3dCtNNXF6YVZ0RWRtOVZEaWhsZQpOeEgyOTZGZmgvV21TY3pYcVhTY2doYW1sR2k2Y0NrVDR1RUNtMVdhZ3poZHhMbGNEanNXSy9pT0hTV3RDT1NYCnVEOStYOGI1OFV0UjNGRnZSVnI1dklvYW01UVlxL2grREhmbkYyOVBldnJXVXNheThUQXVLS2ZZOTRNSmwzS3IKZmt0NUZITE00T3RBWkFyZlk1UTEyTnovbFM5dUtwbkdNMEgrcjBrSTAwVTVTeEg0Yk16eGRLaEFrblQxQThDdAphUzJhaEs4YkxENFZRMWs4dzU5SW9vcTNaRjNHZGdacmxPT1ZkdmxxUlBHcTJpKzQ5bWVRUmZ5b1VRQlBFODdSCklDdG4xYUZHK0hvVkFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJITThPSApNT0hJK3FaaFpTZ0ZxaTU5TmFUT0FEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFISzFzNEl6MGtFeUowcDMyCkpUWXFyV3ArWlE2aDNxUDQ4dXdKNURNa3JJYW9TNWFDRXZmODM5Znc5ZDZvRmZZbC83Q29ZMUpRM3dLU3lxU2kKUnRaRDc1OXB3YUVSYXN3Y21wTy9hY2cxVnVKTEJkWUtZVDNkcWg0cExxNk5OSm5mS1NXWDYxL0VjVEhRUnA1QwpsYlNRV2w5aFBOUlZLZVFiYzQ1a1VnbGphdkx2UHlBZTNnT09obGw1RDZ0dTdBOFJMZHJscTkyeHdxQlYwYmJUCjVwQ0NaREJJdGZLKzArMjZHMWxla3hham5ESDRCZVFFQmI0NmNPNERxNWFDdTAxMEtCVWV2QWdxYUZqbXNrQ24KLzlOc2liQ0Q3ZzNIUzVSZEUvMlU5Wk56Yk0wSUlCbHhLT1pWWm11dDNGUStLSjcraHB4YUdrU0kyMjgzdmRoMQp3MU5wRUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdVRsdHVVWTRoZEErZmg1aXRJb0RrMWxCNUpxWkZycTBQd3dGQnJOaE40MlVuVWw0ClY5RldWY0xmak9hczJsYlJIWnZWUTRvWlhqY1I5dmVoWDRmMXBrbk0xNmwwbklJV3BwUm91bkFwRStMaEFwdFYKbW9NNFhjUzVYQTQ3Rml2NGpoMGxyUWprbDdnL2ZsL0crZkZMVWR4UmIwVmErYnlLR3B1VUdLdjRmZ3gzNXhkdgpUM3I2MWxMR3N2RXdMaWluMlBlRENaZHlxMzVMZVJSeXpPRHJRR1FLMzJPVU5kamMvNVV2YmlxWnhqTkIvcTlKCkNOTkZPVXNSK0d6TThYU29RSkowOVFQQXJXa3Rtb1N2R3l3K0ZVTlpQTU9mU0tLS3QyUmR4bllHYTVUamxYYjUKYWtUeHF0b3Z1UFpua0VYOHFGRUFUeFBPMFNBclo5V2hSdmg2RlFJREFRQUJBb0lCQUJTOGVpMDQwRkVpekN4QQphSnAvclFETkNGUjRmbFVPRituTEJiRUhXZ1huSXRFdERYei9ZYVArU2hxekpIelpKVllrUVE3cm9nVnJNdWFzCk9IUENlOXplL0VEVXBzcHl3ZWhxU3dNOFZVejFwRzB2U0xrZ29hblZ3VTZ1QlMxcFJNMWNOQUNZTTBkTkNFYTAKb0VrUkczYVJyTWhCUW5zZEFYVVRIOVJYUkYyUUJPbzlhRnJyclQxQ1M2TmV5SW51b0ZBbE5ORUVOdHBKSFEzcwpjd1JUNEs1bFFBWlE2clc4aUJxYS9XRnFCRXVxWnpMaFVTYkI1cU5sUHIxNnJuNmtDSVJwWG1WeWFNZHNUK1lRCkRFMkZwclNQUGRiTXJpblgzS3VnOFhuc3hOaEpmbXNuUDlpU2lPMkxvYlVpTlZDMVdOR2F4cnI2U0NoN3FZak8KQ0JHdzRJRUNnWUVBeTQvNTgxODkzTWk4SmRHUGhlaGx6VitubVdRTmdOR25lOWdVYUtXMU5hNzd1MVZ2aVJzMgpBMytJQytJYjcybXdheEY1QmgxRzgyV3dXc3k1UUE4V3NIdDUwd0M0T25SOXJSWTNQSklJZCtVc0t0VXRCem9XCk56aWFrWmVReDJ1azljVHlpUmxOSWFTSzR3T3VvYW5FV1dLWm1pTjJoZXNEYVBIUVExTGVrYUVDZ1lFQTZQQWoKZitlVm9jVnkzanRJVmtOcTZ2eFA2ZnpmSHF0VWFMdHVNZFVrNTdLZ2I4czgwNUdTeFNkUmo5WXdLK3pWWE85LwpMeEJ0UUpScmJyN0tNaWVieWxOUmpEQTE5QkVzMThTS04wVVJWK3hEVnhZODJweWdSQ2trakE2VHlEb0ZIbE9ECkhPV0Yrb1VXSTJlVVlTTGhkM3dwVi9GekdKVUh5Z1FtV0JFSE8vVUNnWUVBeXZUcjR3anNwdnJGREhmYVAwcXMKWlkyZmpzSkE3RlVjUmMvMDJUbU9hTTNrVXEwbUhXOHg5VjdzQjkwU3VTdUpKOWN0OFRpeml1MnlYWFdNcGgvbApJV1NhM0JQMW11S1dnMEtKSkN6OW9IeXdBcXkwem1YTnpKVDFGNEFrYTVBWjBxamdvR3pIaUdtRHlEL2RsM1dxClBPeWY5Unl5aVdiOTZWNWZwU0EwcE1FQ2dZRUFqa2toWmgrdjV3RVZDV3BzNVVTSktzQzBqOWxHOFJUMm1vTGkKN00ybG5XSWZYaXBuSFZUdXNqOHlNd3BDb3BJb1FueUkwOWJVNVgzRG9nSW93RG94ajRVVmF1eUlDRzMxVmxkWApsaXM2VE5xa3g2MXR2cHV0eWZUWHZqV3BUOFVoRzBVbjhaN0NHQ1R6UU8wa1ZiRll5QU92dldoZlJjVEMzVU5yCnFKKytLNEVDZ1lBY2NvTDZReTkyTlUyM0tHeHFEOEJLMWtNMGF6UVFncENKckV6QUM1QkVFdUhUSzBjK3h2Z2gKeFJUbTVleW5OdmRvVHRid3NJM0hsRU1RMTA5aDl6YlJBUmw2ck1IRU9TUGJ3R05sS3h6YmMzRnczTnphVjNrWAo3cS8xR2JNa1dCWC9yVmlNRDA5NXNuaW9aZzY0ekszek5Ib0xiT280c3IwVnVzVnAvYXJtVnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-testfsp1-jws-priv-key
  labels:
    app.kubernetes.io/name: sim-testfsp1-jws-priv-key
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRFpIY2k0UU9tb08yeEwKM3A2WWpTOTBJbWw1ditXY0xGSFkzRG5IcG5jYU1MMDlFVUluYUN4TFptcnZRMXBSRG5KYXV1dG4wTm53K09BSgplcCsxUW9iamE0V3lKc3NXazNUMGlOQzVrSU80Q1FKMFNNeUNiN0dKNnpqdHFOSE9YcDY4NXpRS1dSQUZsVWJKCnVYMUVDdm8xRk1VNWlSaU1uVEZMUXcyUjlHUU9JNFM3a0VEOWNwdm1ndHZKVXlNYks4dURKTFdEalhIaDhENEoKeHZrOFExcUgxMnFRVW5lUGJYeEd6NXNiSzJ0V3F1c0lLTlhVV0lqNWoxaU1xNU5GR2p0VCtOd1ljdDhSenRoRgp3L1pUMml6RkRFVytFZkZIdGJSN3ZoOEJUd0h4Z2duUENOcEMrc1NIMUlsRnpZaG15SG9SMEVCZGVadVRpd2NyCktHaGZSdkpSQWdNQkFBRUNnZ0VBSjFyNlFNZm5jc3Erc1N2NzFJdzNEMWFUaHZHdFpiYzA2Tm5Xa1dXUHprd0sKYVhEZzdISzZJTHJDWkhkeGZpTGZ3S21FTlUvS3laN2JRV3ljV1lkakd3TW8rMmVEeGFaWisxOTNja09MVk1jeApUakhKL0ZUUnVqM01sbXZWQ0JMbnREYzJuQytUczJkaEt2eTRBNmIzdnJweW02REp0ZWRpZ1pGNGVyM3hpd3c0CmE5WFY3dnI1eERFamY0a0ZXV0d0RUR1Ris0WUFFQmJtRDc2Y1J5RjVIdjhlb1UwTUVMQ2VsSHFMMWpMN1c2LzUKc1RmYlR4UklGTzN3bUpoVzJaUlJ5RDlFTjVsbVA5ZFJPeElFNEgzdFJCaWhVSlZEQkEwSVhHaUUyWitOak9VSgp5Y2JaVlQwTE1hM1hlWUtkcmhIUkdGYWZXUFNQSUpDeVFPSUszM1Y2QndLQmdRRC9UalM5c1hKOWhYdTUzYk0xCjgvWDc4MGtVcDY2R1FGNVYrUWhNQVZXLzZCZFExRmtodjZBdUpabCtGdWpCUnN6U2RsOTZ0aElMeTg3cWtQK24KZFVEeFhuNUIyQjdNUTFLN3V3bUtyWVcwODdCZkRQYSszUjd3S0o0Zm5kSWhycUFOR3kxS0Nmd2hlOEdKRXpwUAp2bEk0SmVJbnJnTVh5UWdaZ2orNjV6RTIyd0tCZ1FEWnRQdTFNRDhTSlZ2VVlYZ1AxdTBYcUpXWkRvNWRuZEkxCktBN1VsZWZiQnFxdFo4N0VQN3p4Y1RaSGFSTHVNQlBFcHBINCtLNE5zb3BuWmg0ckQrYlYvTk9KL3JJNlBNWmUKeklrakxZRStLVGd2TTdwdndEeStxMDhmRFludWNTNHhuSE9qTHp3OC9sNHB0SjF1aWdYa3g4UFNsOTQxMTgrNQpoNEFjNFpMMVF3S0JnUUNrLzNNZ2dYVC80R3ZVOUk0a3VWVnBqcExWa1lVK2FJMVBQTkg2NVFYNUw5TVp2eE1YCnQ1T2JIMXV5M0xWeWJBSmxwbkVRaW1qaFRNZWVXeldPa1QzMmdGNVN5WTBsOEFDaEtVRUNhaUMya0tPVTJua0IKWTBEaWJ5MjZPeklaNkpTeHc3V2lXdytpeUN1Tkhtc2FMR05RdkZNTDErOVJ5TysrSktweGJZY2w3d0tCZ0JiZApWaTVDWWUxaTlSRUtKNVRxU3I1WVcxWFczSWJpZzJoSHk3N3grNGJhWFdTVzZYVmRDRmdIUHQ4akh2VGJJY2hlCmdpZzIzZmpjVG9Mcmk3R1VHdmRRZFZzaDM5QVQvL1dHMzhSTkRDemVJV043dUZIeVM2N3V5UUdHNTN5ZWNHNlAKY3VtcGxWY0dsQmNuTy8yWEMyVnF3WnRGamZYenM0SlZ3OVBFc1MySEFvR0FOZGQ2ZE5mN0VUcEJnQWxlc1dnUwo3M0pBRWxNR2tRSDQyZHFlakV6TWE1Q1hVQ1BMUWRxSENneGFUNE0yNWM2Rjh0VWhiMnFTdlYrQ2wrelZrcWxBCkNwb2NNNitGVjRvWU5MSUpVdE5KaitYTGJEa1YyWGpYWXp1emNHbERkOUhBdjZoemcwekhPaE42RVRzeHFJeDcKZHZWNGR4TjE5ZURpcnA5QVZsNmszRXc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-testfsp1-tls-creds
  labels:
    app.kubernetes.io/name: sim-testfsp1-tls-creds
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lRY09LU1MrMDhVVWNsK0lGRDhTQis5REFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBcE1TY3dKUVlEVlFRREV4NXRiQzF6YVcwdGRHVnpkR1p6Y0RFdGMyTm9aVzFsCkxXRmtZWEIwWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM2a3VoVURoYUcKK0FqeWswLzY5cS9vYnJXZ01qamhOR0JTOGVIVElIbllQSEN0VHgyQ3VWWXFzRWVCVGtkT3crZTQzR1RicDl5UQo3ZjRWdmZITStlZ0I4TS9NYTAwYzVMZ3BYNk12NXY5M29iM3poZ2FnVWJMTDVGT25vcVdSS1d2bGg1NHRpSHhiCndPcHovYUtDN0FrYjJGdUNLSFFxTmV6R0JxWkRGVnBnQ21TaUdXK1ZYRi9UeXpYUlZKNXBHUW1SRVJUa0l2TFoKVHMzZjA0ZEIxVERwU2VwZW9xL1psUlNFQjRiUU1LN2tZTmVTem9QR3Y3eHVPbXBuV01wNFZPV0MxcTE4Q0NnNgpLZ25qSUxsQ0llUmMzRzBRUE5HOGFzSlZmdXh1N01LcktVUVdiRCt1WEFZZGFOdzNVcHpTVyt2UyszRmxJcW1DCnh0TkRUUG9aVlFMTkFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJITThPSApNT0hJK3FaaFpTZ0ZxaTU5TmFUT0FEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnTXdQNjJlRDNBT01jYWxmCjVuSWJIYzNDTmhRWmxtejB0ZmNlTlRBZTZNSU1GOERnOEx3T1pNMXQ4ZUQzVFhwZlJaS0pwdjZub2FsSjBVZU0KS2lrUlduK0VKdC9kQytiTllvSkpsOW9QVThFTE1sWThldDM4YzVsT3R6WHdGeHdhRVRLUlBuaGp5RWxFOGdvSwo2Wk1TdWx1NmhOaEdrc1R1eDROUWxkV3g1NjZRdnRKNDg2MlZUTyswa2U0QXhuSSs2SFpmRHJRb0tUWHpmaUE4CmI3Mnc0WFB2U014MnhheVE3ZnhWdUU3RkVheHdSK1E0dmRvaHN5d1BFdzN1VnZQV3lBMHpmMVMxT0Jibmc4QW0KQ2k2TFVyWHFPV3dYL2pDRGFhL0hGNTg2bk5ncVN4M05EZFYxekNRZ09vc3Z3WThwN2YxWEJQbFJ1c2xCRVdnYwpvRjlQSnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdXBMb1ZBNFdodmdJOHBOUCt2YXY2RzYxb0RJNDRUUmdVdkhoMHlCNTJEeHdyVThkCmdybFdLckJIZ1U1SFRzUG51TnhrMjZmY2tPMytGYjN4elBub0FmRFB6R3ROSE9TNEtWK2pMK2IvZDZHOTg0WUcKb0ZHeXkrUlRwNktsa1NscjVZZWVMWWg4VzhEcWMvMmlndXdKRzloYmdpaDBLalhzeGdhbVF4VmFZQXBrb2hsdgpsVnhmMDhzMTBWU2VhUmtKa1JFVTVDTHkyVTdOMzlPSFFkVXc2VW5xWHFLdjJaVVVoQWVHMERDdTVHRFhrczZECnhyKzhianBxWjFqS2VGVGxndGF0ZkFnb09pb0o0eUM1UWlIa1hOeHRFRHpSdkdyQ1ZYN3NidXpDcXlsRUZtdy8Kcmx3R0hXamNOMUtjMGx2cjB2dHhaU0twZ3NiVFEwejZHVlVDelFJREFRQUJBb0lCQUhEL1FJNkg2Y1RjdkM2TwpZY1pSV2NDZ0xJaFZZbldpenlQdE15UTNheFEzcHRhUU1BTllWSU9PT0FCc2RHdVQ0dWZuTTM2RmIrU20vMWdUCnJqckNzRzFjZDc0S3pxMU5LT3lGNjhPN1Y4WVF3NGFXQ2JWWFJiNlBEc3RjaW9JY1lDaW50bmxGVEd3VnJ1bUoKRjcvTFRNajhoSStVQ0tiMytlc0ZZL1VGSGJORUQyeDVWQmpNaWV6bnRVM3haMW9BcWtjMWJzVnkwRXdaMm9MSgpGTlNmQjdSTE1VNHRRT1NNcUtmRHppdXlFMDdMMDk0YWIvYW56VGQwMS9BUmtCalBCeGlTa1VWc1B3OEFNY1c1ClVzR2kvMzdXcjlHa1hsbGJUSTNLdXhMcXlHM0ZnUEZVS3ZpaU9UNXJTWEQzVFhoTkQ3ZDd4a0NPR3R2UTF6TUgKVGRRcU1GRUNnWUVBMncvMldhd2o0QU5jeVN1KzlTaEExb3VLMDlXMmp0eStyWURoQ09xVVRvZjBBQ3pIejdtNgo3V2FXRDlkcnRpb2pzRllZNnpiQUphREdGMGtmQ0QxY3ZqTUNLT0Q0QzgyaUNzS2c5MVl4dGNscHlKdFM0NTBsClErTTN6aWVLY3Iwek9BMXNBZXhyTHBHMlVJaVJXdEh6VnZETEFTbnliakFMQk5GOXdOQTl2Q01DZ1lFQTJnaU0KU2U3a2JnRDVUMkZvT0t2OGVHdTIrWm51cVprc041eUJaUXdUdkF3N3BEaFFYbGg0WGo1Mlo5VEhXZnVYcWQ1NgpVcmZ2ckJDLzhjWWRFYzNMakY0alBsc21YMFhxWEtKNmZkSGxaQXR5OWUwOHk2VGZQZGJzUnBEU0lMYms4MmVzCndUK0ZXa29DdW82aGUrVjFXZzhpUE9waWZjU2k5L3N5YWY4dGZFOENnWUVBa1BpSVZLSEtBQmJaa2J4a25FTnUKWFUxdHEzRDBacWtKZXpNZU9kTmNJSGh5YnFjeitIRjJsbU5jamRGSFUvK2hMTEpkdlZPM1oyOTFpTFY0VnZDYwo3clk5Q0thUklPYU9CVWIyVlpqeVB0YXpMZkkwc2JNdWxUWEttYUNyUy9HUDh0bFhFQkxRZjdvb2lEVkkxR3k2CitGOVVTVW5rU1MxOExVMGlScmJKRkRjQ2dZQm5NSTU4MjBSZlQ3U3V2aEllYUQ5NEdycWhqUm5vU0tjbHRydUMKd0dHQ3FXTjh5RzQ1Q0xRSEhwYlpjMW5hRzNuZkduMVlNdGVLM3U2SkZkTmlQcnpzTlEySEVJcXJvcUpWcjB3Nwp5aUEvNWk5RmR6OUR2a2N0dEU5azRsdWd3ZzYvcUR5WnhWOXVxUUo3bXMrUW5MdWFvUGo2VFkvSnFFdmRBNVVMCmw0ckdmd0tCZ1FDOXE1TXVMRTFlczVsdENqVVQxK0hNdVhhTDYyRnp5T2RCUUI3NXU3ZExWbWpRdXN5Wk9jWDQKL1NEd3R4MFVUQXhnMXFUQnI3N1FIYktRRWlLZ29SVXVLMnhXUDJqUU1lZFpJWEYvTktrbTBVZDR0dGg0UVQyWAo0bThaMWx3OEYxZVVXWkdnN1drYnFzR3Q2ZTZOQ1JMYzQ5NHJJcXM1QTdZS3ZBVkJONjdOTWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lRY09LU1MrMDhVVWNsK0lGRDhTQis5REFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBcE1TY3dKUVlEVlFRREV4NXRiQzF6YVcwdGRHVnpkR1p6Y0RFdGMyTm9aVzFsCkxXRmtZWEIwWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM2a3VoVURoYUcKK0FqeWswLzY5cS9vYnJXZ01qamhOR0JTOGVIVElIbllQSEN0VHgyQ3VWWXFzRWVCVGtkT3crZTQzR1RicDl5UQo3ZjRWdmZITStlZ0I4TS9NYTAwYzVMZ3BYNk12NXY5M29iM3poZ2FnVWJMTDVGT25vcVdSS1d2bGg1NHRpSHhiCndPcHovYUtDN0FrYjJGdUNLSFFxTmV6R0JxWkRGVnBnQ21TaUdXK1ZYRi9UeXpYUlZKNXBHUW1SRVJUa0l2TFoKVHMzZjA0ZEIxVERwU2VwZW9xL1psUlNFQjRiUU1LN2tZTmVTem9QR3Y3eHVPbXBuV01wNFZPV0MxcTE4Q0NnNgpLZ25qSUxsQ0llUmMzRzBRUE5HOGFzSlZmdXh1N01LcktVUVdiRCt1WEFZZGFOdzNVcHpTVyt2UyszRmxJcW1DCnh0TkRUUG9aVlFMTkFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJITThPSApNT0hJK3FaaFpTZ0ZxaTU5TmFUT0FEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnTXdQNjJlRDNBT01jYWxmCjVuSWJIYzNDTmhRWmxtejB0ZmNlTlRBZTZNSU1GOERnOEx3T1pNMXQ4ZUQzVFhwZlJaS0pwdjZub2FsSjBVZU0KS2lrUlduK0VKdC9kQytiTllvSkpsOW9QVThFTE1sWThldDM4YzVsT3R6WHdGeHdhRVRLUlBuaGp5RWxFOGdvSwo2Wk1TdWx1NmhOaEdrc1R1eDROUWxkV3g1NjZRdnRKNDg2MlZUTyswa2U0QXhuSSs2SFpmRHJRb0tUWHpmaUE4CmI3Mnc0WFB2U014MnhheVE3ZnhWdUU3RkVheHdSK1E0dmRvaHN5d1BFdzN1VnZQV3lBMHpmMVMxT0Jibmc4QW0KQ2k2TFVyWHFPV3dYL2pDRGFhL0hGNTg2bk5ncVN4M05EZFYxekNRZ09vc3Z3WThwN2YxWEJQbFJ1c2xCRVdnYwpvRjlQSnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdXBMb1ZBNFdodmdJOHBOUCt2YXY2RzYxb0RJNDRUUmdVdkhoMHlCNTJEeHdyVThkCmdybFdLckJIZ1U1SFRzUG51TnhrMjZmY2tPMytGYjN4elBub0FmRFB6R3ROSE9TNEtWK2pMK2IvZDZHOTg0WUcKb0ZHeXkrUlRwNktsa1NscjVZZWVMWWg4VzhEcWMvMmlndXdKRzloYmdpaDBLalhzeGdhbVF4VmFZQXBrb2hsdgpsVnhmMDhzMTBWU2VhUmtKa1JFVTVDTHkyVTdOMzlPSFFkVXc2VW5xWHFLdjJaVVVoQWVHMERDdTVHRFhrczZECnhyKzhianBxWjFqS2VGVGxndGF0ZkFnb09pb0o0eUM1UWlIa1hOeHRFRHpSdkdyQ1ZYN3NidXpDcXlsRUZtdy8Kcmx3R0hXamNOMUtjMGx2cjB2dHhaU0twZ3NiVFEwejZHVlVDelFJREFRQUJBb0lCQUhEL1FJNkg2Y1RjdkM2TwpZY1pSV2NDZ0xJaFZZbldpenlQdE15UTNheFEzcHRhUU1BTllWSU9PT0FCc2RHdVQ0dWZuTTM2RmIrU20vMWdUCnJqckNzRzFjZDc0S3pxMU5LT3lGNjhPN1Y4WVF3NGFXQ2JWWFJiNlBEc3RjaW9JY1lDaW50bmxGVEd3VnJ1bUoKRjcvTFRNajhoSStVQ0tiMytlc0ZZL1VGSGJORUQyeDVWQmpNaWV6bnRVM3haMW9BcWtjMWJzVnkwRXdaMm9MSgpGTlNmQjdSTE1VNHRRT1NNcUtmRHppdXlFMDdMMDk0YWIvYW56VGQwMS9BUmtCalBCeGlTa1VWc1B3OEFNY1c1ClVzR2kvMzdXcjlHa1hsbGJUSTNLdXhMcXlHM0ZnUEZVS3ZpaU9UNXJTWEQzVFhoTkQ3ZDd4a0NPR3R2UTF6TUgKVGRRcU1GRUNnWUVBMncvMldhd2o0QU5jeVN1KzlTaEExb3VLMDlXMmp0eStyWURoQ09xVVRvZjBBQ3pIejdtNgo3V2FXRDlkcnRpb2pzRllZNnpiQUphREdGMGtmQ0QxY3ZqTUNLT0Q0QzgyaUNzS2c5MVl4dGNscHlKdFM0NTBsClErTTN6aWVLY3Iwek9BMXNBZXhyTHBHMlVJaVJXdEh6VnZETEFTbnliakFMQk5GOXdOQTl2Q01DZ1lFQTJnaU0KU2U3a2JnRDVUMkZvT0t2OGVHdTIrWm51cVprc041eUJaUXdUdkF3N3BEaFFYbGg0WGo1Mlo5VEhXZnVYcWQ1NgpVcmZ2ckJDLzhjWWRFYzNMakY0alBsc21YMFhxWEtKNmZkSGxaQXR5OWUwOHk2VGZQZGJzUnBEU0lMYms4MmVzCndUK0ZXa29DdW82aGUrVjFXZzhpUE9waWZjU2k5L3N5YWY4dGZFOENnWUVBa1BpSVZLSEtBQmJaa2J4a25FTnUKWFUxdHEzRDBacWtKZXpNZU9kTmNJSGh5YnFjeitIRjJsbU5jamRGSFUvK2hMTEpkdlZPM1oyOTFpTFY0VnZDYwo3clk5Q0thUklPYU9CVWIyVlpqeVB0YXpMZkkwc2JNdWxUWEttYUNyUy9HUDh0bFhFQkxRZjdvb2lEVkkxR3k2CitGOVVTVW5rU1MxOExVMGlScmJKRkRjQ2dZQm5NSTU4MjBSZlQ3U3V2aEllYUQ5NEdycWhqUm5vU0tjbHRydUMKd0dHQ3FXTjh5RzQ1Q0xRSEhwYlpjMW5hRzNuZkduMVlNdGVLM3U2SkZkTmlQcnpzTlEySEVJcXJvcUpWcjB3Nwp5aUEvNWk5RmR6OUR2a2N0dEU5azRsdWd3ZzYvcUR5WnhWOXVxUUo3bXMrUW5MdWFvUGo2VFkvSnFFdmRBNVVMCmw0ckdmd0tCZ1FDOXE1TXVMRTFlczVsdENqVVQxK0hNdVhhTDYyRnp5T2RCUUI3NXU3ZExWbWpRdXN5Wk9jWDQKL1NEd3R4MFVUQXhnMXFUQnI3N1FIYktRRWlLZ29SVXVLMnhXUDJqUU1lZFpJWEYvTktrbTBVZDR0dGg0UVQyWAo0bThaMWx3OEYxZVVXWkdnN1drYnFzR3Q2ZTZOQ1JMYzQ5NHJJcXM1QTdZS3ZBVkJONjdOTWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-testfsp2-jws-priv-key
  labels:
    app.kubernetes.io/name: sim-testfsp2-jws-priv-key
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQy91VFF5ckxTTkpjV2sKY1AzOXI1aVhsMk5lcm9kM0lMNEd4SUQreEVwek1RRXBESmJ5WVFsVWdzQXFRNkp0Yk1ydDc1SW1OQTlzV09DcQpKUm05RWpuNkNBZVJJbGNSWGJ3R0xhd1hud0RYbXhDUEJwS1FUYThIQXNBdmtaKzFLWnFqUkJLak5KOUQ1RVhEClkzNldoRVpoNTFkbWxFeXhnV3ZXNERXcHE5d0dPaVBzbW8ra2dQdFJwT0JmREFkWnRYNlBhNkZCK2kycEc4NUQKa3BPYkhrY2xyNVdNKzc3RUFMdWFad3Y1M0daNEdsc2trUGt1THdIeUNBbGNZbFNUNFNmcGRJaUJtUkRxOHE4TAowZkpxd1RwWmt0ZFQ0a21nS25iQ1FJODFOSEhNOFRZOGFlVWpScmhrL2IvTC9iSnB4emdkQVlHRVF4ejVKVlA5ClZKbG94TDRCQWdNQkFBRUNnZ0VBR1pKbER5NUFiY1FnT3JqMGM3SUlYdzNLNi8zSTVUK0pnUU1VTm9idGJEUlkKMUlZUW14Y014TWdrdys1ZCs0emplejExUjZHeGZmRFQxSFhhMjBCVFdkRlkyd2VTeCtieDlYd0JoR3dKazNoawpDc09rYUZsb016M3ZidGpVVGJoVkh4b3RCelkxV1B1WlA0Q2xpWU51bE0vanRUT3FFQkgwVllaMXVlSUptSTNOCkV0U1VPMUlBWU84U3lQNHNvekxwQUlmcDQrZnRNTDRIVkNpRDZhS2RWbDM4UzNQWDY1ajFRM3g5SnozR0JTQm8KOVVBNmNRSFJvQ01ydWplSUFlWTJ1VUNldmhkbTc1eG95d1ZGU0NwUkNndUZ4SVg1R2J2SVNKUkw4WEZOaERIbApPWTd5SFNPSlNtbmVkRmg4b1J3QkRLa294aHdiK25uMXdqZjRGWGRZL1FLQmdRRGdSdXFQeDJvdTI1dktPbngxCkcveHZ2TUxXekI5S0Yyd3FxRlA0dU52MGRJOXFKN3pDZjFpZm5lQXYvQ0VVK0p3WDVLSmtuVXRhbkNwV1phcmUKdmxXU0gwVUl0Z3MwY2dFS2pLRndZelhJbGMwNlRmZmtGeitVbEdsTFhTRkQzQlI1OXhtT1kvWndYbGdQejRpVwo2VGVmWHZyVStqTkdpZ0pWSVlFTXpCYUNMUUtCZ1FEYTE0VnVDT2pNYTBZdHpBZDFjUTJqZDhkWW92bmtvL0owCk9RdGR4OVdvRWRlS3NDSjhjd1ZKeFNPRjQ3MzlpMGgyQnhhL2xMSTZtbjlWdUJLZGRCTFRoTzErdkJDUTFTQ2kKclFHWXkxSlVjaHk3T1RCbzFwRU1BUTlBc0ZHWERNZzQvdVdkTTE4TzlKd0RIQUlLc2ordkdQK05UZ1ZTTzVDcQpsTzZRZ0crVHBRS0JnSHNLTE5Eb1EvYWxBRmozc1NQR1VMMDBQMmY3NEFhVHh3RzRDeWxlc1R6eFhXU05uRjdQCjRsemZEZ2tGTjFqNzh4YWdsZjdBMUlCSFFHclpwOTQvYVU2YTNSS2tYSTFQSmdjVms5UEdlZEVyYmNYWTFIQkwKMk5PNGYvT2FpZzlpZzlGTm9MV2ZYYW5UK0Zma01Ua3BoUnhuelJCZW14Yk55KzNNVGJJcG5RZVpBb0dCQU1TRgp5S0FBeGpaVW0yZ2pFZ3VvSTZ4SnN5M281V29xeEY4VW54MXZpSEh1MjlZQ3lHVmowVHJuR3pod1JUeDhLTzA4Ci9uTzY3N2JxNlRDc0phTmFDbElDekZnRVFRZ2ZMTGlKanFhTTUvbEhwSCtKSXV6eXlyeXg4dVdQc1NWcGFDQ3UKM3JvbDJOYVFXYzM5QitSZElBMTQ4SDBQdEgyZFdoT2x2UHJ0SzhXMUFvR0JBTXphNk9raHlDSXpTVEtWU1d1RgpkdklVYmo2ampGTHVSYXB1c0crSlgrQjEyVXBhNlozbE9IZTdlMFZXcTNyZ1RrdG5mcWYyZ081NWIrM28zMG80Cnd3K3NHbVJkcU1UdVBDQ1p4NDFYVC92MGxvWW0raWsxR0FKejFUVUZERHRYbG91RDJRQ0RKSmZacVBJUWYyOS8KYkZ0OHUrODQ0ZGRGMCtqNXI1UTJhWGRSCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-testfsp2-tls-creds
  labels:
    app.kubernetes.io/name: sim-testfsp2-tls-creds
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lSQVB3czM5S0Judk1Jb0lsTDcyeFNUN2N3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl5TURreE5ERXdNamd5TlZvWApEVE15TURreE1URXdNamd5TlZvd0tURW5NQ1VHQTFVRUF4TWViV3d0YzJsdExYUmxjM1JtYzNBeUxYTmphR1Z0ClpTMWhaR0Z3ZEdWeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNzJhZy9qZGgKM1hwekNaK3BXVG5iNG1CcElITmt6Tk9MVGZzZlZicitUZWRQblRJMjBWZVFJeE9qV0t1MDREWUJzR2tCWFVnbApQeHNvRVJxZGkrMUJJcnREbFJ3Y1h0eUFkY1RrekFwSnlqNFozT3JXR0FyMm82a1pkN1Y1SDJGTmg5bkJoRWtBCjlTdzkrRDNhdE1ZTXN6WVhjSUM5VEVZQmhkRk0wTmNyd1NKNTBIMjVYa042cDRDeW1IRVhpaW1kZUJhd3UzaysKVjFDNjkxRXVlb0ZoaU1lOERBdEtyMFhFUU9UZlZFV1JBNnJyRG0yZXBScnovU2h0SnBUODJCSEpTSW1xcnRMMgoyb0xRYmpFdEdWUWN2d2w3T1ptcXc5Tm5DdnNTT0JYZXU1SGczUDB6M05EOXVVdTBSQkxYbE4yczltUmFGYjhOCks3aHNrd2hPN0VndGxRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVUnpQRApoekRoeVBxbVlXVW9CYW91ZlRXa3pnQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREZQR3NRNHlCNDdad0Y5CkV6bDNHTitkOEYwTkkrUkdBUFZJeXYrUmZJU0VTWGRYeUdyZm5PM1dxZDlBMXdNanNpT213RlZuNUgyNzVUck8KcDAvZnNjRUlVR0Q1b2FrWld4UmkwOEtVRnRMRjVkT3J2Uk5HTVEyUEhCQy9jZ3oxRkhCck5IZ1dKcVNsTEVnUAo0cFAxV21idkFkTUZEeVA0Ti9NT2d4SnF2Tm83RzNsTk5zRFJWa0wyWTFQVFdCOEFRQUVNV1pzY2p5eGF6NXRrCno1RXdBeTFMeFFGNTZCUWl0M0ZkOUdOUUkwcWxEbHlNaHQ3VVIrRzBGS25jaHVFYmFzako3azJqamRSbEZ0cGIKejlXUjhWWnVESmFTeGVCRzZCL3FEMTZYdWN3V3NwLzhlczQvRTlnamJaZXkvVmsrSVEzSFpCajlweE9HUmRpNgpEaDZ1UjNBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNzJhZy9qZGgzWHB6Q1orcFdUbmI0bUJwSUhOa3pOT0xUZnNmVmJyK1RlZFBuVEkyCjBWZVFJeE9qV0t1MDREWUJzR2tCWFVnbFB4c29FUnFkaSsxQklydERsUndjWHR5QWRjVGt6QXBKeWo0WjNPclcKR0FyMm82a1pkN1Y1SDJGTmg5bkJoRWtBOVN3OStEM2F0TVlNc3pZWGNJQzlURVlCaGRGTTBOY3J3U0o1MEgyNQpYa042cDRDeW1IRVhpaW1kZUJhd3UzaytWMUM2OTFFdWVvRmhpTWU4REF0S3IwWEVRT1RmVkVXUkE2cnJEbTJlCnBScnovU2h0SnBUODJCSEpTSW1xcnRMMjJvTFFiakV0R1ZRY3Z3bDdPWm1xdzlObkN2c1NPQlhldTVIZzNQMHoKM05EOXVVdTBSQkxYbE4yczltUmFGYjhOSzdoc2t3aE83RWd0bFFJREFRQUJBb0lCQUJGcnRYRnFWRXZLbWs1cgorT1hPU1Fyckd4dEthbDVoVW5URlBsMTlzdjIyUkZ2YkNKUXBQQXJoWmZTUTRpT2lxbkxNNFZXSlozUjFKSEJDCk1JNjdJQTlIOHo0SmdxTUFoclNMTkY4SXJKL3o3dXZkaHVEUEEyMmJZNGdMZzVuZCtjZFYrRGdKRy9HN1czTVMKQlRVOGFEWXVUSHhhVWV3WCtBcGwxYUlvMWoxQ2dmRnpNZ2pPMU03TVN6NndhRDdLdlJuOGM3N3RVelRoVEtRZwpYdUZVWmtwU3l0QnBIcWxpaFhaM1ZYQ3VmV0tsRTNPbEl5QS9kYmErbFlCRGU0eVJQb3VUcjU1MUovdXZZNHZkCjZuMFpYZGlJendWN2ZGMFo2YkFxbFVmQ05xWXRWZVk5Y05NbjMwN3gva0ZhNXF5dFdubWw2dEU1NVgvNkYzMUgKQkM3MFZXMENnWUVBL3JDaHNjbHRMbzhwcGxOOHZmclM5RTNJZ0N0K1hzTmZEMlBXZ2lCL2g2Q2hVTDgxVTNSagpDUFN4eW9POS9JT25MU0RZRTRXOXMrcVlqcDZpWmdLRjl3dlVmQUFXT2pRQTJUMkVsTDBReXovWVJIVEkvYUU3Ck9TUlFlMitXZ0tqaHNPdDlJY3VJRmx6cEJod1BLRmt1b2hVY1Z3eExBVDJLYTQ5QWdUcEk5L3NDZ1lFQThLSGQKYy9ZUERzSTdXTU9vY3llVGJxczNFV2hjUGVIM3RVVHgxNi84MDE5c01oNjZiSXdsdTROVy80NTBDWFlxbWQ2OApvb0dlOU9qV0xVbXQvd1krdXc2VmplYzRmOWJvTnE0THdEQ3V2Q29UQkJSSnU2YWg2QnplWGNHMUZFdXlmYzFhCitXVjRwM0FSNFpBbExlTU9lalpYMG81aFlYTVBSaUtERVg2bXE2OENnWUVBMzRyRXdUa2NYWXRHY1RoQityV1cKUnR1bXFlaUM2RVh1djZGUGU3TnVlK3BlN0hLSEtaSzBBZjVUdG41ZldLMXRKRXo1bWxqK29sVzhSU0d6UkhuZQpmM0dndEoyVzVNc1VHNWpGTDQrcWw5cVh4YTREWTZvS1F5TStpTGp1amtxc25RNTBMQjlxZU1aZnVQOFR4c1JRCkMrOGZpcis5Ylg5SWFSTzQrRFBpSzlVQ2dZRUFpQmhrTVpPM0RIZmFMT2ZzTzhUa1k3RStZZ0FPTzRtMEdiZTIKdUhCMm8rM1NPYjZiWFkwZVFpR1VjTkZXMjRzVHFSY0t4VFplZXRHOVlMdk5SdkYzUlVDSVlVdW03dGJUV3ltdwp4N0JCQTNjZ2Jpd3pUNGg5QmRSZUI5VG8zMk80dmVJSlZBaUo1dGxCbzd0czY3a0JsU2xySGxFY3pvck8xckhxClExaklWMDBDZ1lBdGw1bzVMU3U0WHZOTUxrWHVaZHpLa1ArVWc0dTRhdFVkMnloQTlKN01IeXJuTWNFWGJEUTYKbFFuZTJLMVR4Wk1xT3A2WUtSOEZzTit1aWh0bk1RVWQ3U0NabWFsSkZRZEpJbXhiWDYwREpvMmRXL0Y4aTkrRgpBRlVnaEhWcHJRZXI3YjN5d3h2SmNROGhQaVYyOFFkYkx2cE1aUzFtZDNqRkRuQmpBTFVLcFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lSQVB3czM5S0Judk1Jb0lsTDcyeFNUN2N3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl5TURreE5ERXdNamd5TlZvWApEVE15TURreE1URXdNamd5TlZvd0tURW5NQ1VHQTFVRUF4TWViV3d0YzJsdExYUmxjM1JtYzNBeUxYTmphR1Z0ClpTMWhaR0Z3ZEdWeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNzJhZy9qZGgKM1hwekNaK3BXVG5iNG1CcElITmt6Tk9MVGZzZlZicitUZWRQblRJMjBWZVFJeE9qV0t1MDREWUJzR2tCWFVnbApQeHNvRVJxZGkrMUJJcnREbFJ3Y1h0eUFkY1RrekFwSnlqNFozT3JXR0FyMm82a1pkN1Y1SDJGTmg5bkJoRWtBCjlTdzkrRDNhdE1ZTXN6WVhjSUM5VEVZQmhkRk0wTmNyd1NKNTBIMjVYa042cDRDeW1IRVhpaW1kZUJhd3UzaysKVjFDNjkxRXVlb0ZoaU1lOERBdEtyMFhFUU9UZlZFV1JBNnJyRG0yZXBScnovU2h0SnBUODJCSEpTSW1xcnRMMgoyb0xRYmpFdEdWUWN2d2w3T1ptcXc5Tm5DdnNTT0JYZXU1SGczUDB6M05EOXVVdTBSQkxYbE4yczltUmFGYjhOCks3aHNrd2hPN0VndGxRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVUnpQRApoekRoeVBxbVlXVW9CYW91ZlRXa3pnQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREZQR3NRNHlCNDdad0Y5CkV6bDNHTitkOEYwTkkrUkdBUFZJeXYrUmZJU0VTWGRYeUdyZm5PM1dxZDlBMXdNanNpT213RlZuNUgyNzVUck8KcDAvZnNjRUlVR0Q1b2FrWld4UmkwOEtVRnRMRjVkT3J2Uk5HTVEyUEhCQy9jZ3oxRkhCck5IZ1dKcVNsTEVnUAo0cFAxV21idkFkTUZEeVA0Ti9NT2d4SnF2Tm83RzNsTk5zRFJWa0wyWTFQVFdCOEFRQUVNV1pzY2p5eGF6NXRrCno1RXdBeTFMeFFGNTZCUWl0M0ZkOUdOUUkwcWxEbHlNaHQ3VVIrRzBGS25jaHVFYmFzako3azJqamRSbEZ0cGIKejlXUjhWWnVESmFTeGVCRzZCL3FEMTZYdWN3V3NwLzhlczQvRTlnamJaZXkvVmsrSVEzSFpCajlweE9HUmRpNgpEaDZ1UjNBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNzJhZy9qZGgzWHB6Q1orcFdUbmI0bUJwSUhOa3pOT0xUZnNmVmJyK1RlZFBuVEkyCjBWZVFJeE9qV0t1MDREWUJzR2tCWFVnbFB4c29FUnFkaSsxQklydERsUndjWHR5QWRjVGt6QXBKeWo0WjNPclcKR0FyMm82a1pkN1Y1SDJGTmg5bkJoRWtBOVN3OStEM2F0TVlNc3pZWGNJQzlURVlCaGRGTTBOY3J3U0o1MEgyNQpYa042cDRDeW1IRVhpaW1kZUJhd3UzaytWMUM2OTFFdWVvRmhpTWU4REF0S3IwWEVRT1RmVkVXUkE2cnJEbTJlCnBScnovU2h0SnBUODJCSEpTSW1xcnRMMjJvTFFiakV0R1ZRY3Z3bDdPWm1xdzlObkN2c1NPQlhldTVIZzNQMHoKM05EOXVVdTBSQkxYbE4yczltUmFGYjhOSzdoc2t3aE83RWd0bFFJREFRQUJBb0lCQUJGcnRYRnFWRXZLbWs1cgorT1hPU1Fyckd4dEthbDVoVW5URlBsMTlzdjIyUkZ2YkNKUXBQQXJoWmZTUTRpT2lxbkxNNFZXSlozUjFKSEJDCk1JNjdJQTlIOHo0SmdxTUFoclNMTkY4SXJKL3o3dXZkaHVEUEEyMmJZNGdMZzVuZCtjZFYrRGdKRy9HN1czTVMKQlRVOGFEWXVUSHhhVWV3WCtBcGwxYUlvMWoxQ2dmRnpNZ2pPMU03TVN6NndhRDdLdlJuOGM3N3RVelRoVEtRZwpYdUZVWmtwU3l0QnBIcWxpaFhaM1ZYQ3VmV0tsRTNPbEl5QS9kYmErbFlCRGU0eVJQb3VUcjU1MUovdXZZNHZkCjZuMFpYZGlJendWN2ZGMFo2YkFxbFVmQ05xWXRWZVk5Y05NbjMwN3gva0ZhNXF5dFdubWw2dEU1NVgvNkYzMUgKQkM3MFZXMENnWUVBL3JDaHNjbHRMbzhwcGxOOHZmclM5RTNJZ0N0K1hzTmZEMlBXZ2lCL2g2Q2hVTDgxVTNSagpDUFN4eW9POS9JT25MU0RZRTRXOXMrcVlqcDZpWmdLRjl3dlVmQUFXT2pRQTJUMkVsTDBReXovWVJIVEkvYUU3Ck9TUlFlMitXZ0tqaHNPdDlJY3VJRmx6cEJod1BLRmt1b2hVY1Z3eExBVDJLYTQ5QWdUcEk5L3NDZ1lFQThLSGQKYy9ZUERzSTdXTU9vY3llVGJxczNFV2hjUGVIM3RVVHgxNi84MDE5c01oNjZiSXdsdTROVy80NTBDWFlxbWQ2OApvb0dlOU9qV0xVbXQvd1krdXc2VmplYzRmOWJvTnE0THdEQ3V2Q29UQkJSSnU2YWg2QnplWGNHMUZFdXlmYzFhCitXVjRwM0FSNFpBbExlTU9lalpYMG81aFlYTVBSaUtERVg2bXE2OENnWUVBMzRyRXdUa2NYWXRHY1RoQityV1cKUnR1bXFlaUM2RVh1djZGUGU3TnVlK3BlN0hLSEtaSzBBZjVUdG41ZldLMXRKRXo1bWxqK29sVzhSU0d6UkhuZQpmM0dndEoyVzVNc1VHNWpGTDQrcWw5cVh4YTREWTZvS1F5TStpTGp1amtxc25RNTBMQjlxZU1aZnVQOFR4c1JRCkMrOGZpcis5Ylg5SWFSTzQrRFBpSzlVQ2dZRUFpQmhrTVpPM0RIZmFMT2ZzTzhUa1k3RStZZ0FPTzRtMEdiZTIKdUhCMm8rM1NPYjZiWFkwZVFpR1VjTkZXMjRzVHFSY0t4VFplZXRHOVlMdk5SdkYzUlVDSVlVdW03dGJUV3ltdwp4N0JCQTNjZ2Jpd3pUNGg5QmRSZUI5VG8zMk80dmVJSlZBaUo1dGxCbzd0czY3a0JsU2xySGxFY3pvck8xckhxClExaklWMDBDZ1lBdGw1bzVMU3U0WHZOTUxrWHVaZHpLa1ArVWc0dTRhdFVkMnloQTlKN01IeXJuTWNFWGJEUTYKbFFuZTJLMVR4Wk1xT3A2WUtSOEZzTit1aWh0bk1RVWQ3U0NabWFsSkZRZEpJbXhiWDYwREpvMmRXL0Y4aTkrRgpBRlVnaEhWcHJRZXI3YjN5d3h2SmNROGhQaVYyOFFkYkx2cE1aUzFtZDNqRkRuQmpBTFVLcFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-testfsp3-jws-priv-key
  labels:
    app.kubernetes.io/name: sim-testfsp3-jws-priv-key
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktVd2dnU2hBZ0VBQW9JQkFRQ1pLWERWRkk3MDNmdksKU2REbkZ1a1dDNkViUWlwTlNnK016elp2dCtFL3lua0JPMzVRSzRFOVozUmdPV1M3NEd4TUkrSytoNms0KzNaMApYUUpqSkFqOGRQZXNlckNNblRnVGhRNzZmWjVrRGkzWXRkb0ZveHZOVlFoVFZCR2U0c29vY2IvSDZYS29VWFZICnFESTRKK0tpVzR0L2J6M09uVlJoSEl6Q2RuTTVrR0ZRblhjaFdnTDN5bWh1ZVU4bTJkNjUzMkdxc0ViaEM5ZFoKRDNjYm83NTdVWkFuNFRaVWdpVFZTbFkwN2U0blV1bFV2VlYwK3BRbWpaTXdCUU54b25CVmtGUVd1aXRyYk1WaApaWUVZVUw1dEIwN09BZk4vcDJMY3h1bUNKNDlkR3FMdkMwVnlNc0dRa1ozZFM5a05LeC9zUDY3eGxTbDlZZUNJClBOOTV3eGNGQWdNQkFBRUNnZ0VBQitFUTRoLzg5TzNlK1NHcEFQaVpUeE9VRkFrRXlUSXoxQ1I2a0lzdE5oRUIKNGlWWXp5a0JWMkQvM1laOWNPeGsvcjFOM1dnR1VnZ0NHbFlsUEV0TzFVSms4Zy8vOGphUk5FWVdacDU4Mm5rUgptRVdqaktXVU9SOHB1MEpZZFVUTTBWYTJDWXJheVVNR29QWFp6TnRQaUN3NXEwQzNweWNSRGRuZ1FNYUtncmE3CmtqMHBPSVRIcGdONGJDUGV1dEtBWDUxNGFEK25vYko0VU9qY1djQWVtdW9NNFpTbC90cVp6aVhBSGkzRGp1SUwKalRmZUJLYWU3dFZpVXVRUHd4Y0NOZmZUQXNLQWxJMEJhRDEwZmIxZ3p3TFprWTRFOExUaGxJUjNQazZCZFBsQQphYjBHdTlydGdJYlBKbk5GcDVRV01WZWxXKzJXRjJxV2ZzenUySGxvRlFLQmdRRExoTGg4eHNQMmlvR1dMeUZsCkpLR0R6eU5ZbitNQzNaV2FOdHRzcHJsK2hCWFJNR1hmTURsR1NKMFdBSFlEZ2pNSkljWnFVbVBHR2NoUWt3QzAKUW5UZVJiRkxTbHpWb3JtcVlWeEpxcmxOczN0MEtScWFycTFTM2FGRVBRSS9hTEJqc3VYRmxIZWdkcExKSFFXNgpleFp2VTQrU2hTK0xNWmV1L3l3cXNVSXFnd0tCZ1FEQXFHM21GbVkzTllaTEFBMllXc3hVMmJReUhncW5LN0NKClhaeForRkUrMlhvMkVxQU1NM2ZKajVJU2hsQ25qRTdjaU10MWh5aWdLVFpsS0lpTzdpT0NBaVowUDRYT1p1T0EKcDN3UUVGQ2pmbDdtalRYajc1THpXVGxhKzkyQjF0MnRIaFlYZGQxeTNNM3ljaThVSzc2TXhDWnJLL29sNG9ONQpVaEVIUWFlaDF3Si9YUU5MVGJ1SjFDTjVGaXAwR01XbEM1aWZqdUdEM3N0bWxCUitOQ24rbk5QQkpObjV0UWRWCkpjb0tBUVEwNjJXVjdaYUNHQldQZy9wRWtvNmN3OFdiby9vMkRUTHZPclFrSnJwWWMxS1RYZStwZkcxTXUyVVoKMGNWNDdyYnpVQWVJbGdncyt4L2ZqSGFrbjBXa1dKWG9xdmlGcFhFNVNXUmc3cG13bGRKdGF3S0JnUUNFajkvKwpuNDc1a2dTemVuZmdTeW1wZ0pxeW1XVXZIYXE4K2dKcERhbXBteTZ5SWlLcUFvZjcwcVBweHkyYis3a1BtYmlWClI4aTJXMlVvT2Jtc3owTHpZOU5kelkrZU04RjZkc093c2VrcWRmdUttOE5tOFNPbCtkQ3pQL1pzTHBJZFdrUk4KSkRhWm9FQzgvOEJSR3NCa1QxczRCdXg2UU4vQ0RLdlcyR0FseFFLQmdEY1REYlN4aG15TWpESnI1cDFveTRyZQpKdTBiTXRGeWY5NUIybXFNdzc4MUpvS3hYSGZITkJ3dEhna3UxSkhTS3RUUkNIN3c0dW9Mck4rZERYZDY4UTZiCnFtSjRLTkwrOGFjMnNKV095aldQMmJCNjIvWXF4L1hjRkpYSGJmbnZTRVhSR2F2K0QvYXEzeGttUkR3YTh3cU0Kem1WUWFla1JsNFhiWkE4K0Z2Z3cKLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-testfsp3-tls-creds
  labels:
    app.kubernetes.io/name: sim-testfsp3-tls-creds
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lSQVAxK2dURi8yODVGOEpCeHZWN0E0b2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl5TURreE5ERXdNamd5TlZvWApEVE15TURreE1URXdNamd5TlZvd0tURW5NQ1VHQTFVRUF4TWViV3d0YzJsdExYUmxjM1JtYzNBekxYTmphR1Z0ClpTMWhaR0Z3ZEdWeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMHlRSDlNZUgKdjJEQ1RZd0J4YlZUT1RsVVNRY1AzTVBrOWczai9oZ1NVU2hpODE5MFFUWThsbjEwS1NWK2hIcWxidGNPNC9FUgpPZEFXMEtMUm5CemF6cDlVVE0vTk5vUHBqeFptdWk1anJqdENXbEZ6cGNQMmN1YklMQTNnNm5RcjFEblUyKzAwCktCeWxtcFYxaTBIRDF2U24rRkl4NlpCcFFERWExUVh6ek9QOVZKNlVqZHByTUhQMGdjRzRrYVRHb24vaVgxNjQKdmFvdzFtUE1rSEhGSW1mOTZsTWtFR3FQdm02UXlEQXlVSlpIQmcxL2toYXpUZktPTUV1eERuTlYvUW1YZVc3SApQNkVXdE5kOE5ISnBlU3c2dkVtZ04xUHhibERDWjVDVkhtRlBHN2ZOK1JBUTYwNndMSW9qYTNQbHM3dFBjc0cxCldaSldRc09XbXFjNFJ3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVUnpQRApoekRoeVBxbVlXVW9CYW91ZlRXa3pnQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS05pMHpuRi9FUnF2N1VnCmhwKzNsOWFDOHM1dzIwbktVU1pTN2RWQWovMUJpb2R1c3JRcW5MOVBscDVXMnQrenVET2FkVlpwam9xSFVBdnUKaWxjVWF6MkVkMktsYnYrNEpqMHhlanlrQ055eTI1S3FiL3VQaG5QNUptcHlJdmxkR2pwNFN6Vyt2QWpQU2xhaQpIdnFqR2IrNzR6WEllRGk1dExCSVNrTE1kbVBaNGtSaXdkaHBib2d4aVROWjFPL001d0U3a3B0a3Y3UDd1OTd3CjIxdCt6K0l6RWJMamZNOFFpWHh5aUNrZTN4aEpRQWNDYndnUXNjbjU0ZjRxYTVIOTBNeEhTNkpaemJ5QURFRVIKOUZlNnp2MnhOZGtaN0V0RmtDQXBjWUpEOUs0amlsa1hjbVorUzFzMFE5Q3hZY1FOWDZwb1FvaS81SllSWTFBRQp5ZHRLVjk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMHlRSDlNZUh2MkRDVFl3QnhiVlRPVGxVU1FjUDNNUGs5ZzNqL2hnU1VTaGk4MTkwClFUWThsbjEwS1NWK2hIcWxidGNPNC9FUk9kQVcwS0xSbkJ6YXpwOVVUTS9OTm9QcGp4Wm11aTVqcmp0Q1dsRnoKcGNQMmN1YklMQTNnNm5RcjFEblUyKzAwS0J5bG1wVjFpMEhEMXZTbitGSXg2WkJwUURFYTFRWHp6T1A5Vko2VQpqZHByTUhQMGdjRzRrYVRHb24vaVgxNjR2YW93MW1QTWtISEZJbWY5NmxNa0VHcVB2bTZReURBeVVKWkhCZzEvCmtoYXpUZktPTUV1eERuTlYvUW1YZVc3SFA2RVd0TmQ4TkhKcGVTdzZ2RW1nTjFQeGJsRENaNUNWSG1GUEc3Zk4KK1JBUTYwNndMSW9qYTNQbHM3dFBjc0cxV1pKV1FzT1dtcWM0UndJREFRQUJBb0lCQVFDcytTV3plUXRTMDdnYQp3NHBvS0VhSDZObU9Ba1VTZlVIRCtsay92d1N5akQyVVdDenJoNzFYSkd2WGthbjJhbXZCUkZva2owZW5ienhoCnJDSEFuVHI4YnpjbXZrN0dUSWM0L0Fjb20veDVybjZMYzVNa3lFZk1saGlEVHRObC84b3dVVGg2Ky9id3JaZFYKN3YrZkdEK1NpRmhiYlNzS3g0NFNVcWhDd0YrZEIrVXBEUCtYa0VGZ2lPZ0FhQ2JQaUE3L2Z4Y056WXVNOFZpMQp2OUlFSnBnYzJsRWgwVnVNRlorTkIxelZ6ejVvZXNIeUtnZHBaMm5xeDBLQmh1cWV5L2EydUMwRmJuT05XcXVICjRTaXlXellDVmlaOFlLOGwyZ0hIVFBXTFNNUTY0UHppeDcxSHVOQWdpd0xPNDhjTmkyZE03M3FnWkNnY1d4dEsKYzZsT2ZjbnhBb0dCQVBLV3RjY0c1UWlHaVBxeUhEeEVnTXdhekFFMEdHcSszVXE5UDlNSzhBbklTWkJCeFVmVwp3Y2hJcHQvKzN1ckJPR1NTQXNwQk01cnZTcGtJTWZPZVdiajVjSnpZL3dqKzZrb1F4WGRnZzZZYU1sYzlJc1dwCmxTZjl0TUc2cktubUF2N1k5cEpwOStVV0xKdDFFZThWMzF3Y1k0eUl6Y09vNlZwalM0b1NGLzR0QW9HQkFON1EKUHkzTlgvQlBveGJWU0JkclNqblZiQ2VzOXVaTHlxWmhwc1pTVjQxR2p0bmJGWkxGTlBReEFCdUhnZk9PaGFFcAo5SHM1VnBVR3dVeCt4TDR1M3BZZ0tmTXd1Tnk5dEU1alg1TUJlbVovOWcrS3dIUzdtK2UyRHVhTjhac0trZFJQClc5VnJSRER3QURPcGhsalFSOXBHakZZeEpZb2tybnA2WEgvODRJekRBb0dCQU84blZ1TjBUNXpkRFBPaFhhYW8KbmhVWm9kN1ozZXgyWjdFRDY0VUNObXhlY085dmQ2Ny84Q0NrUnlkeW00N3hsOGZHRGt3WWhXaUwyWTRPZnpnOQo5eFFkalVDRHlNRzBsWU1aRDZORm1lUEoxYkVkaTBjMGpPQlZCTHNzYm9ZOFJOMjdSVEpJbCtQWHZYZ3dyTko0ClRMQUJLTDdtSzN4bDdFOTRyb0xhblo2dEFvR0JBTUczeHFZNHYrZThKV3hOcEs4UHplbjRYMThqWjBvVXJTejUKQzdtemo0RTV6aXNrNmwyLzdXazlUUDJpVTk2QWxEZnB0VENKU25pbzlkaGZBd2ppMFEwdkM2bnZPMXBYNlBLYQpQVmNmV3Q3UTlBclJOTUNJK0dSOWlmanpnaEt0SHRxNjRIbnVGOHlBYlh4OU1GdjVRZTlKbE91L01RY3BHelZMCk95N2ZtZzluQW9HQkFLR1djRG8wVjhZU1FDKzUvK1Blb3JmWUk0NERmcEtkcTZnOCt4Q3lBeDYwOExvNENwT0QKdHlGSDJqRXk0Q1ZhVWx5TERVYkcyNmlNU2tpVnFXQ0xXZ2s1bFdzZHJEcWhvSHN4OThORGxYUmxKejllcUhGZgpzZElWKzdmbW1KNk8wTWJKV0d0SU10TjhsSVM2MnZ3R09UR0ovRVdvRzlVaDkyOUl3OVd0Y21HSgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lSQVAxK2dURi8yODVGOEpCeHZWN0E0b2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl5TURreE5ERXdNamd5TlZvWApEVE15TURreE1URXdNamd5TlZvd0tURW5NQ1VHQTFVRUF4TWViV3d0YzJsdExYUmxjM1JtYzNBekxYTmphR1Z0ClpTMWhaR0Z3ZEdWeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMHlRSDlNZUgKdjJEQ1RZd0J4YlZUT1RsVVNRY1AzTVBrOWczai9oZ1NVU2hpODE5MFFUWThsbjEwS1NWK2hIcWxidGNPNC9FUgpPZEFXMEtMUm5CemF6cDlVVE0vTk5vUHBqeFptdWk1anJqdENXbEZ6cGNQMmN1YklMQTNnNm5RcjFEblUyKzAwCktCeWxtcFYxaTBIRDF2U24rRkl4NlpCcFFERWExUVh6ek9QOVZKNlVqZHByTUhQMGdjRzRrYVRHb24vaVgxNjQKdmFvdzFtUE1rSEhGSW1mOTZsTWtFR3FQdm02UXlEQXlVSlpIQmcxL2toYXpUZktPTUV1eERuTlYvUW1YZVc3SApQNkVXdE5kOE5ISnBlU3c2dkVtZ04xUHhibERDWjVDVkhtRlBHN2ZOK1JBUTYwNndMSW9qYTNQbHM3dFBjc0cxCldaSldRc09XbXFjNFJ3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVUnpQRApoekRoeVBxbVlXVW9CYW91ZlRXa3pnQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS05pMHpuRi9FUnF2N1VnCmhwKzNsOWFDOHM1dzIwbktVU1pTN2RWQWovMUJpb2R1c3JRcW5MOVBscDVXMnQrenVET2FkVlpwam9xSFVBdnUKaWxjVWF6MkVkMktsYnYrNEpqMHhlanlrQ055eTI1S3FiL3VQaG5QNUptcHlJdmxkR2pwNFN6Vyt2QWpQU2xhaQpIdnFqR2IrNzR6WEllRGk1dExCSVNrTE1kbVBaNGtSaXdkaHBib2d4aVROWjFPL001d0U3a3B0a3Y3UDd1OTd3CjIxdCt6K0l6RWJMamZNOFFpWHh5aUNrZTN4aEpRQWNDYndnUXNjbjU0ZjRxYTVIOTBNeEhTNkpaemJ5QURFRVIKOUZlNnp2MnhOZGtaN0V0RmtDQXBjWUpEOUs0amlsa1hjbVorUzFzMFE5Q3hZY1FOWDZwb1FvaS81SllSWTFBRQp5ZHRLVjk0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMHlRSDlNZUh2MkRDVFl3QnhiVlRPVGxVU1FjUDNNUGs5ZzNqL2hnU1VTaGk4MTkwClFUWThsbjEwS1NWK2hIcWxidGNPNC9FUk9kQVcwS0xSbkJ6YXpwOVVUTS9OTm9QcGp4Wm11aTVqcmp0Q1dsRnoKcGNQMmN1YklMQTNnNm5RcjFEblUyKzAwS0J5bG1wVjFpMEhEMXZTbitGSXg2WkJwUURFYTFRWHp6T1A5Vko2VQpqZHByTUhQMGdjRzRrYVRHb24vaVgxNjR2YW93MW1QTWtISEZJbWY5NmxNa0VHcVB2bTZReURBeVVKWkhCZzEvCmtoYXpUZktPTUV1eERuTlYvUW1YZVc3SFA2RVd0TmQ4TkhKcGVTdzZ2RW1nTjFQeGJsRENaNUNWSG1GUEc3Zk4KK1JBUTYwNndMSW9qYTNQbHM3dFBjc0cxV1pKV1FzT1dtcWM0UndJREFRQUJBb0lCQVFDcytTV3plUXRTMDdnYQp3NHBvS0VhSDZObU9Ba1VTZlVIRCtsay92d1N5akQyVVdDenJoNzFYSkd2WGthbjJhbXZCUkZva2owZW5ienhoCnJDSEFuVHI4YnpjbXZrN0dUSWM0L0Fjb20veDVybjZMYzVNa3lFZk1saGlEVHRObC84b3dVVGg2Ky9id3JaZFYKN3YrZkdEK1NpRmhiYlNzS3g0NFNVcWhDd0YrZEIrVXBEUCtYa0VGZ2lPZ0FhQ2JQaUE3L2Z4Y056WXVNOFZpMQp2OUlFSnBnYzJsRWgwVnVNRlorTkIxelZ6ejVvZXNIeUtnZHBaMm5xeDBLQmh1cWV5L2EydUMwRmJuT05XcXVICjRTaXlXellDVmlaOFlLOGwyZ0hIVFBXTFNNUTY0UHppeDcxSHVOQWdpd0xPNDhjTmkyZE03M3FnWkNnY1d4dEsKYzZsT2ZjbnhBb0dCQVBLV3RjY0c1UWlHaVBxeUhEeEVnTXdhekFFMEdHcSszVXE5UDlNSzhBbklTWkJCeFVmVwp3Y2hJcHQvKzN1ckJPR1NTQXNwQk01cnZTcGtJTWZPZVdiajVjSnpZL3dqKzZrb1F4WGRnZzZZYU1sYzlJc1dwCmxTZjl0TUc2cktubUF2N1k5cEpwOStVV0xKdDFFZThWMzF3Y1k0eUl6Y09vNlZwalM0b1NGLzR0QW9HQkFON1EKUHkzTlgvQlBveGJWU0JkclNqblZiQ2VzOXVaTHlxWmhwc1pTVjQxR2p0bmJGWkxGTlBReEFCdUhnZk9PaGFFcAo5SHM1VnBVR3dVeCt4TDR1M3BZZ0tmTXd1Tnk5dEU1alg1TUJlbVovOWcrS3dIUzdtK2UyRHVhTjhac0trZFJQClc5VnJSRER3QURPcGhsalFSOXBHakZZeEpZb2tybnA2WEgvODRJekRBb0dCQU84blZ1TjBUNXpkRFBPaFhhYW8KbmhVWm9kN1ozZXgyWjdFRDY0VUNObXhlY085dmQ2Ny84Q0NrUnlkeW00N3hsOGZHRGt3WWhXaUwyWTRPZnpnOQo5eFFkalVDRHlNRzBsWU1aRDZORm1lUEoxYkVkaTBjMGpPQlZCTHNzYm9ZOFJOMjdSVEpJbCtQWHZYZ3dyTko0ClRMQUJLTDdtSzN4bDdFOTRyb0xhblo2dEFvR0JBTUczeHFZNHYrZThKV3hOcEs4UHplbjRYMThqWjBvVXJTejUKQzdtemo0RTV6aXNrNmwyLzdXazlUUDJpVTk2QWxEZnB0VENKU25pbzlkaGZBd2ppMFEwdkM2bnZPMXBYNlBLYQpQVmNmV3Q3UTlBclJOTUNJK0dSOWlmanpnaEt0SHRxNjRIbnVGOHlBYlh4OU1GdjVRZTlKbE91L01RY3BHelZMCk95N2ZtZzluQW9HQkFLR1djRG8wVjhZU1FDKzUvK1Blb3JmWUk0NERmcEtkcTZnOCt4Q3lBeDYwOExvNENwT0QKdHlGSDJqRXk0Q1ZhVWx5TERVYkcyNmlNU2tpVnFXQ0xXZ2s1bFdzZHJEcWhvSHN4OThORGxYUmxKejllcUhGZgpzZElWKzdmbW1KNk8wTWJKV0d0SU10TjhsSVM2MnZ3R09UR0ovRVdvRzlVaDkyOUl3OVd0Y21HSgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-testfsp4-jws-priv-key
  labels:
    app.kubernetes.io/name: sim-testfsp4-jws-priv-key
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRREg1USt1eklkZjd5VFgKNEEyM1RUYUdTQ01VNmllS1VtZzJxc1JKMC9sbms1MEEwZUZRYjk4dXgvWFQ5MG9FcHFhOGRxcGxhN2xpYzNCSwpYZFdvVVlJK3ptYXV6ZXBURTNMMElaSkI3VnpRY1BmYlppRkc3T3JHUEFVdHh4ejRGQmJLU0E3RkpuY2hJQUVzCmJsc3l1Mm1ReCt6YmVham5RUzNQKzZvcURqZHl1VDVKeURqbmE3VUZhcm96eDFZWEV4d3lmS3NFdElQdU1oL1UKTC9xODBndFdiWEE5bkEzOHQ3dm1kcXhoaDRQTWRkSGdTRWw2S0syOXlxd0hzZ3BWZy81WWkwdWJoYmdMUWJIbQo2WGZsQlFLMDV0NUFxRDJqNWg5NGgvZGs5V3pvV2Z0OC9oYXhJM09xRm9hT09RbUhlbVNzM0tKbmRMK1B5ekw3CjZKQ01sc0hCQWdNQkFBRUNnZ0VBQ3NBNFYzV2pHMGNFbzRLbW9qTHFLWTgwS2RJTkpkeVlROFpyNzYrUnBKODEKREwvOC93TkJUT1lPdytOekxPeGNuOXErLzl6ckY4OHZIU1RPVXJMdGp4eXhPNW9TRGYxSUM3YkpnN2UxSy9YRApjdDZia0JHNmI4WjNIZGJ0YVM5RmFZUTJIU2JjTmVFZmh3ajVhVEZZdEdONFN2YVFYYjJzN2RoeWRyZ1VoZHcxCjFUeFhEaW83MjhCalJ2Q09leDRIMmxtSlNmbEdZd0hHSnB5MUM1UTh1cEFBTWhLTVAxMTU5OGk5Vnc3SkpJNHQKd1oydnYzdzcyOEFwblF6RElpTHpLTXZOdHZvRXdRN1BsblNldkw2VjRzWUFuc0FteDZaY3RFRXY2MzJuR1BxawpmNVhMbERhY3pjUkRjcEFDK255SktFUjdULytlbVdORmxWME1qK0pNUVFLQmdRRG5jUjBFelBSV0dDREJtSDhLCmUyaHp6UzBSbUxiMW5vdWhjRmI2RWlRUjRXVHZCOEJqQUp1ZjFCcnE3Z1gxYi9nR2ZXa1lQUy85QUtPSS9Kek8KWUhBQ2dRbXZUYUYyV01IY3ZoYjJGL1o5NmNLSXBzRCsrUklBUkNsdjdNU2ZiVEJWY0JYYndhYm9OL0I4OXNHRwo0KzA3Y2l5NHVDd2RLN3dKUDJnU3l5M0FzUUtCZ1FEZEd3REdwcFZkY0djNGNTdGxDS29HUW5UNW93Q2lkcVArCnBMZEY1ZDY5cExLYUZLRnpVaDkyZFVPd0xoNHFvbnVPZ0dHeTU3NEpFMG9uY0tuNzJlaWU2YmlFZXN1KzR1dVIKVGV1MnFyS2lIQlBEdFBsckJacllubHlFNmg5ZGZ0QWllKytidTBVek1TUDRXdGV2eHpGMHh5a0VMWHRsSlV4NwpmU2paN1VuV0VRS0JnUUMvcWRQUFF1L2hVRy9vQXlMS0NuTHcyMnhFVTBUSTJYaG14RUt6SzB6RnBmUFJZNGoyCk0rMnRDWmtWRHZMT1UrQ0JkMkFPRzdYZS9xVnZiMHRvT1VMcFAvVkdRTExDOERQelcxUm1qbWVwMUdrdWczSDIKZFV0ci93YVYwdXp0M2gyVjA1RzJnSU41Y2NIdHF1ZVBqcmZLYi80TEp6SVpJanZCS01wR0xnNkFzUUtCZ0FzMgozMmN6ODhkMWVBYkkxcWFkTmVKelpITjA3UWRRZFNqcE9kSjF3a0prSkJya2lQdk1Zb1FqbG5kTkg0S1NFeW83CklMbHVQNWsrUFRpYTRrUS8zU2lTT2lXZUJNOTl1dXozd3NqVkI1SnBVaWRPK29lUEZUZC9jTG5kRmhJcjZHcVgKVnFQVGI4TVU3dm9kd1dyTTg1azBzTVBoZXF5Nm81SnYycTZTOW5mQkFvR0FhaTM0TlVKYW0zckF3KzVFRjFmSQo5djFBUXhGbUNYMXhQYXdhRnF1ZEd4d29kK050clU1VDExTzA3Z0RPQzlWMVpkRFU1YnRUbEVvRGdEaXk1R05vCjlCdmU2eUN4cjJMN1phS05jY3creXVxVHJJekhENEpCcGFuSGphZlBDREIrYXVXMFUxbFA3UTdURFN6SjQyRTkKeXE4VjhGS0tqQVEyaGxHb1NWZkV2RzA9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-sim-testfsp4-tls-creds
  labels:
    app.kubernetes.io/name: sim-testfsp4-tls-creds
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lSQU1Xd1BmM1RDa3JSYmI4clRYTU1KQWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl5TURreE5ERXdNamd5TmxvWApEVE15TURreE1URXdNamd5Tmxvd0tURW5NQ1VHQTFVRUF4TWViV3d0YzJsdExYUmxjM1JtYzNBMExYTmphR1Z0ClpTMWhaR0Z3ZEdWeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBclczTjJ3Uk4KdnhmRThCQmpTOG1QQldKUE1IY3dOWmIyTU4yN2FpZXNsck5ZWUJoMlRIc3lOREZlN2hwVU5Rd2MrVE45cXlRQQpwSFEvVHlZd1VuazBaemgxRlV1ZkkvKzNSVmMxVFEwVGNNMk9LK2tuR3p3WjZHcWdZM3BFZFFrWUdOWWJ2Zm5YCkNLQUpVeHJka2taQ25RYjUvaVNtRlN3VEllbHR0TXhTdG5HR1lkcHgzaFIxRnBab01URXJpNiswekFWSXU5WHoKTTBhUHQzeHovQXNEejgyNThGd0l2MC8xa0xhU3RxamcyeFZYVTk1VStQYWFmWWFrcmFJZVphWk0xcUxwLysreApqR0g2ckZkemwzcWNaN0szNmpJRlBJR013NFhub05WWW9uTFJaVU5CSE9uWkdJYjZkYmVFYTRXRjJXdnVCQkwrClh3SCt4OEdmNUtRNmFRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVUnpQRApoekRoeVBxbVlXVW9CYW91ZlRXa3pnQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR2pOejJ4bURmRlJaYU9qClRQMm03a2dzR3R3VE1ZT0pua0FTZU9WR3dnVFErWDhtQkVRYnBJREEzSlRKQUhYdnNNanU3bVNqaU13d3c0eTcKeEs5Qktaa1o3SHYvWmRwbXpCUENZckhsRVNNOUM3d0Z6M1c5aDd1ZXQ2NWZTYmZZR0JNbnZjYzhqcGsrbDFRbgpmWmpnZlhsa2RJSDNrZy9wU3AwS3lORVovdnQvTkJwaFNNOFJCcTYvQXhvOFRzRHZLb3RZeEtvc0sxRDRlR2M2ClJ4VEhaNE4vT2MxaDRCRHJ1L0FTNWVzamMzdG1ESkd1NENTUFZTNmoraFRwYjlPUEZ5di82RVZpTFUxRTdWczcKSmlZVndTdGhmNTlGZHZ6ZCtJZldjdEQwUnpZODAxaG1zeW80cERINldnc2dLVkdBc2hHdTUyUmN1a3FsUXhwWQpidHlnYjhjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBclczTjJ3Uk52eGZFOEJCalM4bVBCV0pQTUhjd05aYjJNTjI3YWllc2xyTllZQmgyClRIc3lOREZlN2hwVU5Rd2MrVE45cXlRQXBIUS9UeVl3VW5rMFp6aDFGVXVmSS8rM1JWYzFUUTBUY00yT0sra24KR3p3WjZHcWdZM3BFZFFrWUdOWWJ2Zm5YQ0tBSlV4cmRra1pDblFiNS9pU21GU3dUSWVsdHRNeFN0bkdHWWRweAozaFIxRnBab01URXJpNiswekFWSXU5WHpNMGFQdDN4ei9Bc0R6ODI1OEZ3SXYwLzFrTGFTdHFqZzJ4VlhVOTVVCitQYWFmWWFrcmFJZVphWk0xcUxwLysreGpHSDZyRmR6bDNxY1o3SzM2aklGUElHTXc0WG5vTlZZb25MUlpVTkIKSE9uWkdJYjZkYmVFYTRXRjJXdnVCQkwrWHdIK3g4R2Y1S1E2YVFJREFRQUJBb0lCQUNhZ0FlejVkR2RPMyttbgpmTFh3V2c0VTZ4WWNOWHg1OXJMRGIyNGhEK3N3WGtwb3FGQTRUK0lYN05DU3hKWmI4RWdBRThqOTU3YTR2VERmCmpIdVJ5djRDTVBGaE9qeEdRNGNKK1RFRDdJUi9BMTc4T2wxeWNVSzJIS3FMSEp3RVBuMnBrZHdwdko2TEpnaUEKUDBESXJTVlQzSEdocit1Zk9WT2dMWExLM3RFSzhjQlNSMzlzcW5HdHR1RG9ndndCVjNSSGFHalh4S05xSzNqdQozYmE3anZQY1o0UjJBUE0xeHdoQ1JCRi92TGh4SXJLQ1hNcHBQZzFUcXhoZGM4RnM4SjYrS2pmL3g1d1VDUXpwCmlUNUFJNGZUc3lvaE9NQUhPaDhEM2tNUzZmUDZDUS9wM2Z0ZnlBb0FkNktpYU1TZ1pZcVUyaDJzU0g2c1JLOEwKdFp6RjhrRUNnWUVBekZVdm14UmNrOXNPczBlR1BvdnhYOGM2Z0ZId3R6RTB2aGpuYUxpcVJJL3N3KzZsMkFNMgpnd0IvMUMrUmtmaVc1THlkcHl2VS9GUlFXdDB3U3k0QTdzamVTbnFvenJXdTQ5YW9uQUd3dVJBQjJVRFZZWDd1ClROSytWTkRBajVpNVpaajdCRk42UnNNOTZ3aXQraDhER1N0aXJNVjNsdmJBZWVjaXNLVDhFZjBDZ1lFQTJVZ28KeGNmQVJBcWc0Z3dnQkxQbUhzSnh2aGlteFBlakljRHE4RjJHSEZ0a0tmb3RwRUxBWVVUcDJPa2FTVEx1T0xmYgpVTUsyYVRmWU01TDZhc1pDNXdFWFVnZTdmaGpLL2grREdOV0pVQ2ZKcHhEVjQ2R0RXMVVSYlBKdjVuUHc1WHdjCnh3c0FQbmNYZ0ZLeFhVYUdtSXVlSFRYTG9pVjBMdURCRnM3c2I5MENnWUIrejZ0dzRtMG1NZ0Jva1U0bVNUR3YKRUhVbEtEVnRhL05ndXhINjh3aHc3cVd4WDgyN1J4c3dxRUd0RFN5WjNCN0JyTEZuQzVQdVdlRlkwd2RpMFJVeApIS2Fnc0lsTmFJSTIwb1RuOVVDWlNlN3J4d25tclNEMXVxRDNBR3RSY3lZMGdJSGd5SElOc3FRZDF0QXFkODZ6CmN6S1ZLU1EwSThXR29rVHNQaWhXZlFLQmdRQzdVOEVETTBJSjUzZnBLemIzbHZvUkR1YnRVMmVFYlZQUnAvZGwKbjl3ZDJwVXlzNlJoOThMUW1ZOWJHUzAyYXBpRGdjK3RneEd0Q1I1MjZJTEpSNEVxbEFBOUVybU03MmNqVEp2RAo3MlhoRzB4NW9zUWs2bnpMWXo0UXhidS8zYm1Vd0RvM1NMNi9IQUhBK29vN3RyQVlHRmNMSy9RU0tXUlBmaW82CnRjK1dhUUtCZ0JQR3JKTFZqNllBM3JzZ21aNllWekNncUZZZTE1d0xmeTc5TFhaNHdXQzk3elpvQ2FnRU85RXIKNjJCQnkzWEtqMjBUU0h1QUg1ZDVuRzZUeDBtVVlseUpUK0h6dzNSbUE4T1ZEV3FjcDcyTkFlUm5aMkdjcmwwWAo3S3ZBUTNnYnhsTmFNYmEyMDhlSDVqaFlzWlNXL0hKWWdvMzhBQVZlamY3WTRTbGFpN3JOCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKVENDQWcyZ0F3SUJBZ0lRYUpCYnZnMkV6bkJUNXBsdU1Ba01xekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05Nakl3T1RFME1UQXlPREkxV2hjTgpNekl3T1RFeE1UQXlPREkxV2pBZE1Sc3dHUVlEVlFRREV4SnRiMnBoYkc5dmNDMXphVzExYkdGMGIzSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ25FTDZUZ0g4ZmtwTkRUaFNMbGUyV2V6TVkKMWV5dnByTkdDazNjSStmYU85K2FLZGtQRkEveCtJNnMyV0diU3pndGszY3ZXQmVxQmhQSjhtY3pSOVFsOGF5QgpQaU5yZHd6c0twR3NPVXV2RUFhUDhTTjlGWVJrUFplQmVMKzJQRHdBalY0b29OaGUyaGRXek1hT3V6dmh1WTQrCnl5YXZJOHhkWStIbHNHM0ZlamxXTUZCVFMzOW1iaVpiNWk2R1ZMSHFKNTc3dFdXdVZ2cFV5UFFKNHpSdzZhNHoKK0NQMVBCTXA3NVVNUGJza1ZaVEFOTmxnMzdKTWg4K3ZkenFiK0FMQUZ6UU5maUhEK2lkWkhQcWN1UjRhWWx4MApjbUJ5QTZZTUNTellEbjhnZDZOdjFXZFlJQU54ZUtKV0pkbGVmY0srL1RkYU45bFVOTjdWVGdCV2FHUXRBZ01CCkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVSelBEaHpEaHlQcW1ZV1VvQmFvdQpmVFdremdBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZVFlLzZ3RnMwYjhRczNsc3NGUWl2QkVQMXRyblM4Cm1pOGtQSGVFYzRFdkVHd0pVOW9sc1laR1dkQTBzV1lsc3BLQW1VU0dpd1lid0pFUDlFYUI4TTQ0RDlZQWtwMDMKb0ZOYmg2SEJORTI1SzdFMnpvajlpZnRVcHNGdjBEc3ZzMWVXMEM4bWNwRGs1UFNRM3hLbVRXekxlOGVpT0JONwpSWEhmbmNVb00wUDQ4Q2ZJbC9ucmNsUDJyUEg1NXhYT2M5dDNmUGJ5RktDSXRmbTBKTC9nR3FJYkh0QmhRN2pZCkRmbWFHSXFuTGx2NEI5VVVaWUVyMVlJbkh5eDRQaGtQdUcxZHlnRkZydEVaYVArRFFYOEdBSzZST0grOW9nNmcKZFp0bDlzOThXS0FGTlRCL25NVW9HdWpVTXZKSitYeTVxYmFBUWdKQXM3STYxVlZnQ1pnZzFVaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lSQU1Xd1BmM1RDa3JSYmI4clRYTU1KQWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl5TURreE5ERXdNamd5TmxvWApEVE15TURreE1URXdNamd5Tmxvd0tURW5NQ1VHQTFVRUF4TWViV3d0YzJsdExYUmxjM1JtYzNBMExYTmphR1Z0ClpTMWhaR0Z3ZEdWeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBclczTjJ3Uk4KdnhmRThCQmpTOG1QQldKUE1IY3dOWmIyTU4yN2FpZXNsck5ZWUJoMlRIc3lOREZlN2hwVU5Rd2MrVE45cXlRQQpwSFEvVHlZd1VuazBaemgxRlV1ZkkvKzNSVmMxVFEwVGNNMk9LK2tuR3p3WjZHcWdZM3BFZFFrWUdOWWJ2Zm5YCkNLQUpVeHJka2taQ25RYjUvaVNtRlN3VEllbHR0TXhTdG5HR1lkcHgzaFIxRnBab01URXJpNiswekFWSXU5WHoKTTBhUHQzeHovQXNEejgyNThGd0l2MC8xa0xhU3RxamcyeFZYVTk1VStQYWFmWWFrcmFJZVphWk0xcUxwLysreApqR0g2ckZkemwzcWNaN0szNmpJRlBJR013NFhub05WWW9uTFJaVU5CSE9uWkdJYjZkYmVFYTRXRjJXdnVCQkwrClh3SCt4OEdmNUtRNmFRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVUnpQRApoekRoeVBxbVlXVW9CYW91ZlRXa3pnQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR2pOejJ4bURmRlJaYU9qClRQMm03a2dzR3R3VE1ZT0pua0FTZU9WR3dnVFErWDhtQkVRYnBJREEzSlRKQUhYdnNNanU3bVNqaU13d3c0eTcKeEs5Qktaa1o3SHYvWmRwbXpCUENZckhsRVNNOUM3d0Z6M1c5aDd1ZXQ2NWZTYmZZR0JNbnZjYzhqcGsrbDFRbgpmWmpnZlhsa2RJSDNrZy9wU3AwS3lORVovdnQvTkJwaFNNOFJCcTYvQXhvOFRzRHZLb3RZeEtvc0sxRDRlR2M2ClJ4VEhaNE4vT2MxaDRCRHJ1L0FTNWVzamMzdG1ESkd1NENTUFZTNmoraFRwYjlPUEZ5di82RVZpTFUxRTdWczcKSmlZVndTdGhmNTlGZHZ6ZCtJZldjdEQwUnpZODAxaG1zeW80cERINldnc2dLVkdBc2hHdTUyUmN1a3FsUXhwWQpidHlnYjhjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBclczTjJ3Uk52eGZFOEJCalM4bVBCV0pQTUhjd05aYjJNTjI3YWllc2xyTllZQmgyClRIc3lOREZlN2hwVU5Rd2MrVE45cXlRQXBIUS9UeVl3VW5rMFp6aDFGVXVmSS8rM1JWYzFUUTBUY00yT0sra24KR3p3WjZHcWdZM3BFZFFrWUdOWWJ2Zm5YQ0tBSlV4cmRra1pDblFiNS9pU21GU3dUSWVsdHRNeFN0bkdHWWRweAozaFIxRnBab01URXJpNiswekFWSXU5WHpNMGFQdDN4ei9Bc0R6ODI1OEZ3SXYwLzFrTGFTdHFqZzJ4VlhVOTVVCitQYWFmWWFrcmFJZVphWk0xcUxwLysreGpHSDZyRmR6bDNxY1o3SzM2aklGUElHTXc0WG5vTlZZb25MUlpVTkIKSE9uWkdJYjZkYmVFYTRXRjJXdnVCQkwrWHdIK3g4R2Y1S1E2YVFJREFRQUJBb0lCQUNhZ0FlejVkR2RPMyttbgpmTFh3V2c0VTZ4WWNOWHg1OXJMRGIyNGhEK3N3WGtwb3FGQTRUK0lYN05DU3hKWmI4RWdBRThqOTU3YTR2VERmCmpIdVJ5djRDTVBGaE9qeEdRNGNKK1RFRDdJUi9BMTc4T2wxeWNVSzJIS3FMSEp3RVBuMnBrZHdwdko2TEpnaUEKUDBESXJTVlQzSEdocit1Zk9WT2dMWExLM3RFSzhjQlNSMzlzcW5HdHR1RG9ndndCVjNSSGFHalh4S05xSzNqdQozYmE3anZQY1o0UjJBUE0xeHdoQ1JCRi92TGh4SXJLQ1hNcHBQZzFUcXhoZGM4RnM4SjYrS2pmL3g1d1VDUXpwCmlUNUFJNGZUc3lvaE9NQUhPaDhEM2tNUzZmUDZDUS9wM2Z0ZnlBb0FkNktpYU1TZ1pZcVUyaDJzU0g2c1JLOEwKdFp6RjhrRUNnWUVBekZVdm14UmNrOXNPczBlR1BvdnhYOGM2Z0ZId3R6RTB2aGpuYUxpcVJJL3N3KzZsMkFNMgpnd0IvMUMrUmtmaVc1THlkcHl2VS9GUlFXdDB3U3k0QTdzamVTbnFvenJXdTQ5YW9uQUd3dVJBQjJVRFZZWDd1ClROSytWTkRBajVpNVpaajdCRk42UnNNOTZ3aXQraDhER1N0aXJNVjNsdmJBZWVjaXNLVDhFZjBDZ1lFQTJVZ28KeGNmQVJBcWc0Z3dnQkxQbUhzSnh2aGlteFBlakljRHE4RjJHSEZ0a0tmb3RwRUxBWVVUcDJPa2FTVEx1T0xmYgpVTUsyYVRmWU01TDZhc1pDNXdFWFVnZTdmaGpLL2grREdOV0pVQ2ZKcHhEVjQ2R0RXMVVSYlBKdjVuUHc1WHdjCnh3c0FQbmNYZ0ZLeFhVYUdtSXVlSFRYTG9pVjBMdURCRnM3c2I5MENnWUIrejZ0dzRtMG1NZ0Jva1U0bVNUR3YKRUhVbEtEVnRhL05ndXhINjh3aHc3cVd4WDgyN1J4c3dxRUd0RFN5WjNCN0JyTEZuQzVQdVdlRlkwd2RpMFJVeApIS2Fnc0lsTmFJSTIwb1RuOVVDWlNlN3J4d25tclNEMXVxRDNBR3RSY3lZMGdJSGd5SElOc3FRZDF0QXFkODZ6CmN6S1ZLU1EwSThXR29rVHNQaWhXZlFLQmdRQzdVOEVETTBJSjUzZnBLemIzbHZvUkR1YnRVMmVFYlZQUnAvZGwKbjl3ZDJwVXlzNlJoOThMUW1ZOWJHUzAyYXBpRGdjK3RneEd0Q1I1MjZJTEpSNEVxbEFBOUVybU03MmNqVEp2RAo3MlhoRzB4NW9zUWs2bnpMWXo0UXhidS8zYm1Vd0RvM1NMNi9IQUhBK29vN3RyQVlHRmNMSy9RU0tXUlBmaW82CnRjK1dhUUtCZ0JQR3JKTFZqNllBM3JzZ21aNllWekNncUZZZTE1d0xmeTc5TFhaNHdXQzk3elpvQ2FnRU85RXIKNjJCQnkzWEtqMjBUU0h1QUg1ZDVuRzZUeDBtVVlseUpUK0h6dzNSbUE4T1ZEV3FjcDcyTkFlUm5aMkdjcmwwWAo3S3ZBUTNnYnhsTmFNYmEyMDhlSDVqaFlzWlNXL0hKWWdvMzhBQVZlamY3WTRTbGFpN3JOCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: mojaloop/charts/quoting-service/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-quoting-service-jws-signing-key
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-13.0.0
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KICBWQUMvaXhtNmx6OGtKbWlnSUI1ak14THJoQjljZ3FNK3BiME8raXM4OFZSSGR4dHc4ZUtHM252clpZeS80bnNKCiAgejMycW80c09JTXFIV1RsWmdiVVJWSzRGQVVFWi9xbjYzVW5YSjFZVnFUNFVHZzMxQkJqMmMxSmRseEcydDRKVgogIER2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKICA1TVpQSE41MW8wNGVJb0xPMHRQZmt6MCtORHM0RUN3VVd1RkFnOHlvMWh4bnZTb0VSaUNBd0ViRmdxMndEZTErCiAgb0JoT3B1c2Q0VmFzdEQvVEVxTzhSaHJ3VG9kZGRPTUt6YXBKUHJRSnV2VGtycGtta1BPR0U4RGdJVkhzVUxMUgogIFVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKICBEL3AyMWFrUzE1NkUzMkJFSnVZUGsvVExpSTJrTVdqbnZiSHZOZ3I5dHE4eDNUb3lUanRyZzVjbHE4SHIxT3pvCiAgRm5GaXFrVkhNRlBGUFFaRVZVNjRDUVBBMzNEaXh1V2pNV1MzWUlOZkNBaW5FckJyeTBQaU5aR211RmkxSy93eQogIGUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKICBOSzZIUW9FWE40WTlBUUhuNTNGbDhuMGlOTzNxeDBUYjdFdUdORm1aMnhUbHBES0FwOE0rQkE1UW01WURrYmQ2CiAgT294YkdqMll4Wm5jYkcrUnN2SUN0Vk1McUl5dHVidllSRVk5V0drQ2dZRUErSzY0eGhKeldWM2NHYzgvOTBrbwogIFRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKICBWOFpvMkdlcjZMbjk5TEJkZFRoMkhYTDNNNjBjTWdzOE1ZR3VKNzVnNVIvVUhuSkJMbzdORnlWZGRDT01UM2hjCiAgQVlTRE4zWEN3OXljcVR3Mi9tSkhCOWtDZ1lFQTlRaWFDZlR0blhkak1xTGVZYnAydVFFeXlPNklaczk1NnltNwogIHNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKICA1Tmo0U1ZRV3VPWEpoZGZDOWRtVEYrY3ZCZVArdkM2UHlEYmlreGRDbzkrMDVjaHhTN0kzTUx4Q3VlNHF4eTBDCiAgUWZRSUUxMENnWUEra0hhY0huZzJ1NDVzVDkvZjd0L2RMMER6U05SQXZMN2lla0lrQ0lVUmg4UkRuRHpyTVZXdwogIGQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKICA4eWhGaDNnSkxRREl5Q1h0K0s5UWEyNGZrZkh5N0d6NVZNVk9acW9oYkpkZFhIRFpmeEF2d1FLQmdBZFU5NDcrCiAgdGpGMUJoSFl6OENxM0t5U2ZadUhqNnRMNEFFS1lhUlhsTzR0d2JNZS85SS80QWlTaHF2ZloveGJCZm5TbGxHWAogIEhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKICBnWThYTGhaTE5sVjkxdTRGNmlMYUwwRHpBSEt2UlJjR0gwdTlBb0dBVE5pZ1pnYlJSSEpDMjFKdWNIZUUwdFA3CiAgSGpHQUx2YjRxbjFvMG9ESHN4Tlk4aTZ2Vk53OVllUXBaYUpoY2V1UkhKVEdjc3EyZEpTWHBZd0loSVZzLzhSSwogIGJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKICBlY2FHL095by9TK2VNOG5SN21jPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
---
# Source: mojaloop/charts/quoting-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-13.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1sLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/transaction-requests-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ml-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-12.0.0
type: Opaque
data: {}
# base64 encoded string
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-account-lookup-service-admin-config
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-13.0.0
data:
  default.json: "{\n  \"ADMIN_PORT\":  4001,\n  \"API_PORT\":  4002,\n  \"PROTOCOL_VERSIONS\": {\n  \"ACCEPT\": {\n    \"DEFAULT\": \"1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  },\n  \"CONTENT\": {\n    \"DEFAULT\": \"1.1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  }\n},\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"ml-account-lookup-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"account_lookup\",\n    \"PASSWORD\": \"OdonPianoX\",\n    \"DATABASE\": \"account_lookup\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"DISPLAY_ROUTES\": true,\n  \"RUN_MIGRATIONS\": false,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"SWITCH_ENDPOINT\": \"http://ml-centralledger-service:80\",\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"fspId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-admin\"\n        }\n      }\n    }\n  },\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": false,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  },\n  \"API_DOCUMENTATION_ENDPOINTS\": true,\n  \"FEATURE_ENABLE_EXTENDED_PARTY_ID_TYPE\": false\n}\n\n"
  knexfile.js: "'use strict'\nconst migrationsDirectory = '/opt/app/migrations'\nconst seedsDirectory = '/opt/app/seeds'\nconst Config = require('/opt/app/src/lib/config')\nmodule.exports = {\n    client: 'mysql',\n    version: '5.7',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-account-lookup-service-admin-sidecar
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-13.0.0
data:
  default.json: "{\n  \"PORT\": 4003,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-admin-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-account-lookup-service-config
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-13.0.0
data:
  default.json: "{\n  \"ADMIN_PORT\":  4001,\n  \"API_PORT\":  4002,\n  \"PROTOCOL_VERSIONS\": {\n  \"ACCEPT\": {\n    \"DEFAULT\": \"1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  },\n  \"CONTENT\": {\n    \"DEFAULT\": \"1.1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  }\n},\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"ml-account-lookup-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"account_lookup\",\n    \"PASSWORD\": \"OdonPianoX\",\n    \"DATABASE\": \"account_lookup\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"DISPLAY_ROUTES\": true,\n  \"RUN_MIGRATIONS\": false,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"SWITCH_ENDPOINT\": \"http://ml-centralledger-service:80\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"fspId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service\"\n        }\n      }\n    }\n  },\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": true,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  },\n  \"API_DOCUMENTATION_ENDPOINTS\": true,\n  \"FEATURE_ENABLE_EXTENDED_PARTY_ID_TYPE\": false\n}\n"
  knexfile.js: "'use strict'\nconst migrationsDirectory = '/opt/app/migrations'\nconst seedsDirectory = '/opt/app/seeds'\nconst Config = require('/opt/app/src/lib/config')\nmodule.exports = {\n    client: 'mysql',\n    version: '5.7',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-account-lookup-service-sidecar
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-13.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/config-map_mysql-config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: ml-account-lookup-mysql-config-files
  labels:
    app: ml-account-lookup-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
data:
  node.cnf: |
    [client]
    default-character-set=utf8mb4
  
    [mysql]
    default-character-set=utf8mb4
  
    [mysqld]
    collation-server = utf8mb4_unicode_ci
    init-connect='SET NAMES utf8mb4'
    character-set-server = utf8mb4
    datadir=/var/lib/mysql
    default_storage_engine=InnoDB
    binlog_format=ROW
    innodb_flush_log_at_trx_commit  = 1
    innodb_flush_method             = O_DIRECT
    innodb_file_per_table           = 1
    innodb_autoinc_lock_mode=2
    bind_address = 0.0.0.0
    wsrep_slave_threads=2
    wsrep_cluster_address=gcomm://
    wsrep_provider=/usr/lib/galera3/libgalera_smm.so
    wsrep_cluster_name=galera
    wsrep_sst_method=xtrabackup-v2
    pxc_strict_mode=DISABLED
    max_connections=999
    max_user_connections=994
    thread_cache_size=999
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/config-map_startup-scripts.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: ml-account-lookup-mysql-startup-scripts
  labels:
    app: ml-account-lookup-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
data:
  entrypoint.sh: |
    #!/bin/bash
    set -e
    
    if [[ -n "${DEBUG}" ]]; then
        set -x
    fi
    
    . /startup-scripts/functions.sh
    
    ipaddr=$(hostname -i | awk ' { print $1 } ')
    hostname=$(hostname)
    echo "I AM $hostname - $ipaddr"
    
    # if command starts with an option, prepend mysqld
    if [ "${1:0:1}" = '-' ]; then
        CMDARG="$@"
    fi
    
    cluster_join=$(resolveip -s "${K8S_SERVICE_NAME}" || echo "")
    if [[ -z "${cluster_join}" ]]; then
        echo "I am the Primary Node"
        init_mysql
        write_password_file
        exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \
        --wsrep_cluster_address=gcomm:// --wsrep_sst_method=xtrabackup-v2 \
        --wsrep_sst_auth="xtrabackup:$XTRABACKUP_PASSWORD" \
        --wsrep_node_address="$ipaddr" --pxc_strict_mode="$PXC_STRICT_MODE" $CMDARG
    else
        echo "I am not the Primary Node"
        chown -R mysql:mysql /var/lib/mysql || true # default is root:root 777
        touch /var/log/mysqld.log
        chown mysql:mysql /var/log/mysqld.log
        write_password_file
        exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \
        --wsrep_cluster_address="gcomm://$cluster_join" --wsrep_sst_method=xtrabackup-v2 \
        --wsrep_sst_auth="xtrabackup:$XTRABACKUP_PASSWORD" \
        --wsrep_node_address="$ipaddr" --pxc_strict_mode="$PXC_STRICT_MODE" $CMDARG
    fi
    
  functions.sh: |
    #!/bin/bash
    
    write_password_file() {
        if [[ -n "${MYSQL_ROOT_PASSWORD}" ]]; then
            cat <<EOF > /root/.my.cnf
            [client]
            user=root
            password=${MYSQL_ROOT_PASSWORD}
    EOF
        fi
    }
    
    init_mysql() {
        DATADIR=/var/lib/mysql
        # if we have CLUSTER_JOIN - then we do not need to perform datadir initialize
        # the data will be copied from another node
        if [ ! -e "$DATADIR/mysql" ]; then
            if [ -z "$MYSQL_ROOT_PASSWORD" -a -z "$MYSQL_ALLOW_EMPTY_PASSWORD" -a -z "$MYSQL_RANDOM_ROOT_PASSWORD" -a -z "$MYSQL_ROOT_PASSWORD_FILE" ]; then
                echo >&2 'error: database is uninitialized and password option is not specified '
                echo >&2 '  You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ROOT_PASSWORD_FILE,  MYSQL_ALLOW_EMPTY_PASSWORD or MYSQL_RANDOM_ROOT_PASSWORD'
                exit 1
            fi
    
            if [ ! -z "$MYSQL_ROOT_PASSWORD_FILE" -a -z "$MYSQL_ROOT_PASSWORD" ]; then
                MYSQL_ROOT_PASSWORD=$(cat $MYSQL_ROOT_PASSWORD_FILE)
            fi
            mkdir -p "$DATADIR"
    
            echo "Running --initialize-insecure on $DATADIR"
            ls -lah $DATADIR
            if [ "$PERCONA_MAJOR" = "5.6" ]; then
                mysql_install_db --user=mysql --datadir="$DATADIR"
            else
                mysqld --user=mysql --datadir="$DATADIR" --initialize-insecure
            fi
            chown -R mysql:mysql "$DATADIR" || true # default is root:root 777
            if [ -f /var/log/mysqld.log ]; then
                chown mysql:mysql /var/log/mysqld.log
            fi
            echo 'Finished --initialize-insecure'
    
            mysqld --user=mysql --datadir="$DATADIR" --skip-networking &
            pid="$!"
    
            mysql=( mysql --protocol=socket -uroot )
    
            for i in {30..0}; do
                if echo 'SELECT 1' | "${mysql[@]}" &> /dev/null; then
                    break
                fi
                echo 'MySQL init process in progress...'
                sleep 1
            done
    
            if [ "$i" = 0 ]; then
                echo >&2 'MySQL init process failed.'
                exit 1
            fi
    
            # sed is for https://bugs.mysql.com/bug.php?id=20545
            mysql_tzinfo_to_sql /usr/share/zoneinfo | sed 's/Local time zone must be set--see zic manual page/FCTY/' | "${mysql[@]}" mysql
            "${mysql[@]}" <<-EOSQL
            -- What's done in this file shouldn't be replicated
            --  or products like mysql-fabric won't work
            SET @@SESSION.SQL_LOG_BIN=0;
            CREATE USER 'root'@'${ALLOW_ROOT_FROM}' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;
            GRANT ALL ON *.* TO 'root'@'${ALLOW_ROOT_FROM}' WITH GRANT OPTION ;
            GRANT ALL ON *.* TO 'root'@'localhost' WITH GRANT OPTION ;
            CREATE USER 'xtrabackup'@'localhost' IDENTIFIED BY '$XTRABACKUP_PASSWORD';
            GRANT RELOAD,PROCESS,LOCK TABLES,REPLICATION CLIENT ON *.* TO 'xtrabackup'@'localhost';
            GRANT REPLICATION CLIENT ON *.* TO monitor@'%' IDENTIFIED BY 'monitor';
            GRANT PROCESS ON *.* TO monitor@localhost IDENTIFIED BY 'monitor';
            CREATE USER 'mysql'@'localhost' IDENTIFIED BY '' ;
            DROP DATABASE IF EXISTS test ;
            FLUSH PRIVILEGES ;
    EOSQL
    
            if [ "$PERCONA_MAJOR" = "5.6" ]; then
                echo "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('${MYSQL_ROOT_PASSWORD}'); FLUSH PRIVILEGES;" | "${mysql[@]}"
            else
                echo "ALTER USER 'root'@'localhost' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}'; FLUSH PRIVILEGES;" | "${mysql[@]}"
            fi
    
            if [ ! -z "$MYSQL_ROOT_PASSWORD" ]; then
                mysql+=( -p"${MYSQL_ROOT_PASSWORD}" )
            fi
    
            if [ "$MYSQL_DATABASE" ]; then
                echo "CREATE DATABASE IF NOT EXISTS \`$MYSQL_DATABASE\` ;" | "${mysql[@]}"
                mysql+=( "$MYSQL_DATABASE" )
            fi
    
            if [ "$MYSQL_USER" -a "$MYSQL_PASSWORD" ]; then
                echo "CREATE USER '"$MYSQL_USER"'@'%' IDENTIFIED BY '"$MYSQL_PASSWORD"' ;" | "${mysql[@]}"
    
                if [ "$MYSQL_DATABASE" ]; then
                    echo "GRANT ALL ON \`"$MYSQL_DATABASE"\`.* TO '"$MYSQL_USER"'@'%' ;" | "${mysql[@]}"
                fi
    
                echo 'FLUSH PRIVILEGES ;' | "${mysql[@]}"
            fi
    
            if [ ! -z "$MYSQL_ONETIME_PASSWORD" ]; then
                "${mysql[@]}" <<-EOSQL
                ALTER USER 'root'@'%' PASSWORD EXPIRE;
    EOSQL
            fi
            if ! kill -s TERM "$pid" || ! wait "$pid"; then
                echo >&2 'MySQL init process failed.'
                exit 1
            fi
    
            echo
            echo 'MySQL init process done. Ready for start up.'
            echo
        fi
    }
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/tests/pxc-test-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-account-lookup-mysql-tests
data:
  run.sh: |-
    echo "Testing Percona XtraDB Cluster"
    creds="-uroot -p${MYSQL_ROOT_PASSWORD} -h ml-account-lookup-mysql"
    echo "==> basic mysql ping"
    mysqladmin $creds ping
    [[ $? != "0" ]] && exit $?
    echo "==> test basic query"
    mysql $creds -e "select now() \G"
    [[ $? != "0" ]] && exit $?
    echo "==> checking if cluster is ready"
    mysql $creds -e "SHOW GLOBAL STATUS LIKE 'wsrep_ready' \G" | grep Value | awk '{ print $2}' | grep ON
    [[ $? != "0" ]] && exit $?
    echo "==> checking if cluster size matches replica count"
    cluster_size=$(mysql $creds -e "SHOW GLOBAL STATUS LIKE 'wsrep_cluster_size' \G" | grep Value | awk '{ print $2}')
    [[ $? != "0" ]] && exit $?
    [[ "${cluster_size}" == "1" ]] || exit 1
    echo "SUCCESS"
    exit 0
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/common-scripts-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-cep-mongodb-common-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/name: cep-mongodb
    helm.sh/chart: mongodb-12.1.20
    app.kubernetes.io/instance: ml
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
data:
  startup-probe.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
  readiness-probe.sh: |
    #!/bin/bash
    # Run the proper check depending on the version
    [[ $(mongod -version | grep "db version") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
    . /opt/bitnami/scripts/libversion.sh
    VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
    VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
    VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
    if [[ "$VERSION_MAJOR" -ge 5 ]] || [[ "$VERSION_MAJOR" -ge 4 ]] && [[ "$VERSION_MINOR" -ge 4 ]] && [[ "$VERSION_PATCH" -ge 2 ]]; then
        mongosh $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
    else
        mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep -q 'true'
    fi
  ping-mongodb.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval "db.adminCommand('ping')"
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centraleventprocessor-config
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-12.0.0
data:
  default.json: "{\n    \"notificationMinutes\": {\n        \"resetPeriod\": 60,\n        \"notificationInterval\": 3,\n        \"oscilateEvents\": [\"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\"]\n    },\n    \"swaggerOptions\": {\n        \"info\": {\n            \"title\": \"Central notification system API Documentation\",\n            \"description\": \"Api Documentation for central-notification\"\n        },\n        \"expanded\": \"full\"\n    },\n    \"HUB_PARTICIPANT\": {\n        \"NAME\": \"Hub\"\n    },\n    \"PORT\": 3080,\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"centralLedgerAPI\": {\n        \"adminHost\": \"ml-centralledger-service\",\n        \"adminPort\": 80\n    },\n    \"mongo\": {\n        \"user\": \"mojaloop\",\n        \"password\": \"password\",\n        \"uri\": \"ml-cep-mongodb:27017\",\n        \"database\": \"mojaloop\",\n        \"ruleCollection\": \"Rule\",\n        \"netDebitCapPositionCollection\": \"NDCPosition\",\n        \"actionCollection\": \"Actions\",\n        \"eventCollection\": \"Events\",\n        \"limitCollection\": \"Limits\",\n        \"notificationEndpointCollection\": \"NotificationEndpoints\"\n  },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cep-con\",\n                            \"group.id\": \"cep-group\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.blocking.max.ms\": 1,\n                            \"fetch.wait.max.ms\": 1,\n                            \"fetch.error.backoff.ms\": 1,\n                            \"queue.buffering.max.ms\": 1,\n                            \"broker.version.fallback\": \"0.10.1.0\",\n                            \"api.version.request\": true,\n                            \"enable.auto.commit\": false,\n                            \"auto.commit.interval.ms\": 200,\n                            \"socket.keepalive.enable\": true,\n                            \"socket.max.fails\": 1,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"debug\": \"all\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cep-prod\",\n                            \"event_cb\": true,\n                            \"compression.codec\": \"none\",\n                            \"retry.backoff.ms\": 100,\n                            \"message.send.max.retries\": 2,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000,\n                            \"batch.num.messages\": 100,\n                            \"dr_cb\": true,\n                            \"socket.blocking.max.ms\": 1,\n                            \"queue.buffering.max.ms\": 1,\n                            \"broker.version.fallback\": \"0.10.1.0\",\n                            \"api.version.request\": true\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-handler-admin-transfer-config
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-13.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-admin-transfer.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"ml-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"ml-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://ml-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-admin-transfer\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/app/migrations'\nconst seedsDirectory = '/opt/app/seeds'\n\nconst Config = require('/opt/app/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-handler-timeout-config
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-13.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-timeout.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"ml-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"ml-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://ml-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": false,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-timeout\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/app/migrations'\nconst seedsDirectory = '/opt/app/seeds'\n\nconst Config = require('/opt/app/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-handler-timeout-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-13.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-timeout-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-handler-transfer-fulfil-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-13.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-fulfil.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"ml-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"ml-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://ml-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-fulfil\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/app/migrations'\nconst seedsDirectory = '/opt/app/seeds'\n\nconst Config = require('/opt/app/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-handler-transfer-fulfil-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-13.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-fulfil-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-handler-transfer-get-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-13.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-get.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"ml-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"ml-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://ml-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-get\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/app/migrations'\nconst seedsDirectory = '/opt/app/seeds'\n\nconst Config = require('/opt/app/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-handler-transfer-position-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-13.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-position.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"ml-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"ml-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://ml-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-position\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/app/migrations'\nconst seedsDirectory = '/opt/app/seeds'\n\nconst Config = require('/opt/app/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-handler-transfer-position-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-13.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-position-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-handler-transfer-prepare-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-13.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-prepare.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"ml-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"ml-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://ml-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-prepare\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"ENABLE_ON_US_TRANSFERS\": false,\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/app/migrations'\nconst seedsDirectory = '/opt/app/seeds'\n\nconst Config = require('/opt/app/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-handler-transfer-prepare-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-13.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-prepare-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-service-config
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-13.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"ml-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"ml-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://ml-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": true,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-service\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"API_DOC_ENDPOINTS_ENABLED\": true,\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/app/migrations'\nconst seedsDirectory = '/opt/app/seeds'\n\nconst Config = require('/opt/app/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/config-script.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: ml
    heritage: Helm
    component: server
data:
    ok: |
      #!/bin/sh
      echo ruok | nc 127.0.0.1 ${1:-2181}

    ready: |
      #!/bin/sh
      echo ruok | nc 127.0.0.1 ${1:-2181}

    run: |
      #!/bin/bash

      set -a
      ROOT=$(echo /apache-zookeeper-*)

      ZK_USER=${ZK_USER:-"zookeeper"}
      ZK_LOG_LEVEL=${ZK_LOG_LEVEL:-"INFO"}
      ZK_DATA_DIR=${ZK_DATA_DIR:-"/data"}
      ZK_DATA_LOG_DIR=${ZK_DATA_LOG_DIR:-"/data/log"}
      ZK_CONF_DIR=${ZK_CONF_DIR:-"/conf"}
      ZK_CLIENT_PORT=${ZK_CLIENT_PORT:-2181}
      ZK_SERVER_PORT=${ZK_SERVER_PORT:-2888}
      ZK_ELECTION_PORT=${ZK_ELECTION_PORT:-3888}
      ZK_TICK_TIME=${ZK_TICK_TIME:-2000}
      ZK_INIT_LIMIT=${ZK_INIT_LIMIT:-10}
      ZK_SYNC_LIMIT=${ZK_SYNC_LIMIT:-5}
      ZK_HEAP_SIZE=${ZK_HEAP_SIZE:-2G}
      ZK_MAX_CLIENT_CNXNS=${ZK_MAX_CLIENT_CNXNS:-60}
      ZK_MIN_SESSION_TIMEOUT=${ZK_MIN_SESSION_TIMEOUT:- $((ZK_TICK_TIME*2))}
      ZK_MAX_SESSION_TIMEOUT=${ZK_MAX_SESSION_TIMEOUT:- $((ZK_TICK_TIME*20))}
      ZK_SNAP_RETAIN_COUNT=${ZK_SNAP_RETAIN_COUNT:-3}
      ZK_PURGE_INTERVAL=${ZK_PURGE_INTERVAL:-0}
      ID_FILE="$ZK_DATA_DIR/myid"
      ZK_CONFIG_FILE="$ZK_CONF_DIR/zoo.cfg"
      LOG4J_PROPERTIES="$ZK_CONF_DIR/log4j.properties"
      HOST=$(hostname)
      DOMAIN=`hostname -d`
      ZOOCFG=zoo.cfg
      ZOOCFGDIR=$ZK_CONF_DIR
      JVMFLAGS="-Xmx$ZK_HEAP_SIZE -Xms$ZK_HEAP_SIZE"

      APPJAR=$(echo $ROOT/*jar)
      CLASSPATH="${ROOT}/lib/*:${APPJAR}:${ZK_CONF_DIR}:"

      if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
          NAME=${BASH_REMATCH[1]}
          ORD=${BASH_REMATCH[2]}
          MY_ID=$((ORD+1))
      else
          echo "Failed to extract ordinal from hostname $HOST"
          exit 1
      fi

      mkdir -p $ZK_DATA_DIR
      mkdir -p $ZK_DATA_LOG_DIR
      echo $MY_ID >> $ID_FILE

      echo "clientPort=$ZK_CLIENT_PORT" >> $ZK_CONFIG_FILE
      echo "dataDir=$ZK_DATA_DIR" >> $ZK_CONFIG_FILE
      echo "dataLogDir=$ZK_DATA_LOG_DIR" >> $ZK_CONFIG_FILE
      echo "tickTime=$ZK_TICK_TIME" >> $ZK_CONFIG_FILE
      echo "initLimit=$ZK_INIT_LIMIT" >> $ZK_CONFIG_FILE
      echo "syncLimit=$ZK_SYNC_LIMIT" >> $ZK_CONFIG_FILE
      echo "maxClientCnxns=$ZK_MAX_CLIENT_CNXNS" >> $ZK_CONFIG_FILE
      echo "minSessionTimeout=$ZK_MIN_SESSION_TIMEOUT" >> $ZK_CONFIG_FILE
      echo "maxSessionTimeout=$ZK_MAX_SESSION_TIMEOUT" >> $ZK_CONFIG_FILE
      echo "autopurge.snapRetainCount=$ZK_SNAP_RETAIN_COUNT" >> $ZK_CONFIG_FILE
      echo "autopurge.purgeInterval=$ZK_PURGE_INTERVAL" >> $ZK_CONFIG_FILE
      echo "4lw.commands.whitelist=*" >> $ZK_CONFIG_FILE

      for (( i=1; i<=$ZK_REPLICAS; i++ ))
      do
          echo "server.$i=$NAME-$((i-1)).$DOMAIN:$ZK_SERVER_PORT:$ZK_ELECTION_PORT" >> $ZK_CONFIG_FILE
      done

      rm -f $LOG4J_PROPERTIES

      echo "zookeeper.root.logger=$ZK_LOG_LEVEL, CONSOLE" >> $LOG4J_PROPERTIES
      echo "zookeeper.console.threshold=$ZK_LOG_LEVEL" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.threshold=$ZK_LOG_LEVEL" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.dir=$ZK_DATA_LOG_DIR" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.file=zookeeper.log" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.maxfilesize=256MB" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.maxbackupindex=10" >> $LOG4J_PROPERTIES
      echo "zookeeper.tracelog.dir=$ZK_DATA_LOG_DIR" >> $LOG4J_PROPERTIES
      echo "zookeeper.tracelog.file=zookeeper_trace.log" >> $LOG4J_PROPERTIES
      echo "log4j.rootLogger=\${zookeeper.root.logger}" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.Threshold=\${zookeeper.console.threshold}" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n" >> $LOG4J_PROPERTIES

      if [ -n "$JMXDISABLE" ]
      then
          MAIN=org.apache.zookeeper.server.quorum.QuorumPeerMain
      else
          MAIN="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=$JMXPORT -Dcom.sun.management.jmxremote.authenticate=$JMXAUTH -Dcom.sun.management.jmxremote.ssl=$JMXSSL -Dzookeeper.jmx.log4j.disable=$JMXLOG4J org.apache.zookeeper.server.quorum.QuorumPeerMain"
      fi

      set -x
      exec java -cp "$CLASSPATH" $JVMFLAGS $MAIN $ZK_CONFIG_FILE
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/configmap-jmx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-kafka-metrics
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-monitor
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: ml
data:
  jmx-kafka-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    
    whitelistObjectNames: ["kafka.controller:*","kafka.server:*","java.lang:*","kafka.network:*","kafka.log:*"]
    
    rules:
    - pattern: kafka.controller<type=(ControllerChannelManager), name=(QueueSize), broker-id=(\d+)><>(Value)
      name: kafka_controller_$1_$2_$4
      labels:
        broker_id: "$3"
    - pattern: kafka.controller<type=(ControllerChannelManager), name=(TotalQueueSize)><>(Value)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.controller<type=(KafkaController), name=(.+)><>(Value)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.controller<type=(ControllerStats), name=(.+)><>(Count)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.server<type=(ReplicaFetcherManager), name=(.+), clientId=(.+)><>(Value)
      name: kafka_server_$1_$2_$4
      labels:
        client_id: "$3"
    - pattern : kafka.network<type=(Processor), name=(IdlePercent), networkProcessor=(.+)><>(Value)
      name: kafka_network_$1_$2_$4
      labels:
        network_processor: $3
    - pattern : kafka.network<type=(RequestMetrics), name=(RequestsPerSec), request=(.+)><>(Count)
      name: kafka_network_$1_$2_$4
      labels:
        request: $3
    - pattern: kafka.server<type=(.+), name=(.+), topic=(.+)><>(Count|OneMinuteRate)
      name: kafka_server_$1_$2_$4
      labels:
        topic: $3
    - pattern: kafka.server<type=(DelayedOperationPurgatory), name=(.+), delayedOperation=(.+)><>(Value)
      name: kafka_server_$1_$2_$3_$4
    - pattern: kafka.server<type=(.+), name=(.+)><>(Count|Value|OneMinuteRate)
      name: kafka_server_$1_total_$2_$3
    - pattern: kafka.server<type=(.+)><>(queue-size)
      name: kafka_server_$1_$2
    - pattern: java.lang<type=(.+), name=(.+)><(.+)>(\w+)
      name: java_lang_$1_$4_$3_$2
    - pattern: java.lang<type=(.+), name=(.+)><>(\w+)
      name: java_lang_$1_$3_$2
    - pattern : java.lang<type=(.*)>
    - pattern: kafka.log<type=(.+), name=(.+), topic=(.+), partition=(.+)><>Value
      name: kafka_log_$1_$2
      labels:
        topic: $3
        partition: $4
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/config-map_mysql-config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: ml-centralledger-mysql-config-files
  labels:
    app: ml-centralledger-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
data:
  node.cnf: |+
    [client]
    default-character-set=utf8mb4
  
    [mysql]
    default-character-set=utf8mb4
  
    [mysqld]
    collation-server = utf8mb4_unicode_ci
    init-connect='SET NAMES utf8mb4'
    character-set-server = utf8mb4
    datadir=/var/lib/mysql
    default_storage_engine=InnoDB
    binlog_format=ROW
    innodb_flush_log_at_trx_commit  = 1
    innodb_flush_method             = O_DIRECT
    innodb_file_per_table           = 1
    innodb_autoinc_lock_mode=2
    bind_address = 0.0.0.0
    wsrep_slave_threads=2
    wsrep_cluster_address=gcomm://
    wsrep_provider=/usr/lib/galera3/libgalera_smm.so
    wsrep_cluster_name=galera
    wsrep_sst_method=xtrabackup-v2
    pxc_strict_mode=DISABLED
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/config-map_startup-scripts.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: ml-centralledger-mysql-startup-scripts
  labels:
    app: ml-centralledger-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
data:
  entrypoint.sh: |
    #!/bin/bash
    set -e
    
    if [[ -n "${DEBUG}" ]]; then
        set -x
    fi
    
    . /startup-scripts/functions.sh
    
    ipaddr=$(hostname -i | awk ' { print $1 } ')
    hostname=$(hostname)
    echo "I AM $hostname - $ipaddr"
    
    # if command starts with an option, prepend mysqld
    if [ "${1:0:1}" = '-' ]; then
        CMDARG="$@"
    fi
    
    cluster_join=$(resolveip -s "${K8S_SERVICE_NAME}" || echo "")
    if [[ -z "${cluster_join}" ]]; then
        echo "I am the Primary Node"
        init_mysql
        write_password_file
        exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \
        --wsrep_cluster_address=gcomm:// --wsrep_sst_method=xtrabackup-v2 \
        --wsrep_sst_auth="xtrabackup:$XTRABACKUP_PASSWORD" \
        --wsrep_node_address="$ipaddr" --pxc_strict_mode="$PXC_STRICT_MODE" $CMDARG
    else
        echo "I am not the Primary Node"
        chown -R mysql:mysql /var/lib/mysql || true # default is root:root 777
        touch /var/log/mysqld.log
        chown mysql:mysql /var/log/mysqld.log
        write_password_file
        exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \
        --wsrep_cluster_address="gcomm://$cluster_join" --wsrep_sst_method=xtrabackup-v2 \
        --wsrep_sst_auth="xtrabackup:$XTRABACKUP_PASSWORD" \
        --wsrep_node_address="$ipaddr" --pxc_strict_mode="$PXC_STRICT_MODE" $CMDARG
    fi
    
  functions.sh: |
    #!/bin/bash
    
    write_password_file() {
        if [[ -n "${MYSQL_ROOT_PASSWORD}" ]]; then
            cat <<EOF > /root/.my.cnf
            [client]
            user=root
            password=${MYSQL_ROOT_PASSWORD}
    EOF
        fi
    }
    
    init_mysql() {
        DATADIR=/var/lib/mysql
        # if we have CLUSTER_JOIN - then we do not need to perform datadir initialize
        # the data will be copied from another node
        if [ ! -e "$DATADIR/mysql" ]; then
            if [ -z "$MYSQL_ROOT_PASSWORD" -a -z "$MYSQL_ALLOW_EMPTY_PASSWORD" -a -z "$MYSQL_RANDOM_ROOT_PASSWORD" -a -z "$MYSQL_ROOT_PASSWORD_FILE" ]; then
                echo >&2 'error: database is uninitialized and password option is not specified '
                echo >&2 '  You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ROOT_PASSWORD_FILE,  MYSQL_ALLOW_EMPTY_PASSWORD or MYSQL_RANDOM_ROOT_PASSWORD'
                exit 1
            fi
    
            if [ ! -z "$MYSQL_ROOT_PASSWORD_FILE" -a -z "$MYSQL_ROOT_PASSWORD" ]; then
                MYSQL_ROOT_PASSWORD=$(cat $MYSQL_ROOT_PASSWORD_FILE)
            fi
            mkdir -p "$DATADIR"
    
            echo "Running --initialize-insecure on $DATADIR"
            ls -lah $DATADIR
            if [ "$PERCONA_MAJOR" = "5.6" ]; then
                mysql_install_db --user=mysql --datadir="$DATADIR"
            else
                mysqld --user=mysql --datadir="$DATADIR" --initialize-insecure
            fi
            chown -R mysql:mysql "$DATADIR" || true # default is root:root 777
            if [ -f /var/log/mysqld.log ]; then
                chown mysql:mysql /var/log/mysqld.log
            fi
            echo 'Finished --initialize-insecure'
    
            mysqld --user=mysql --datadir="$DATADIR" --skip-networking &
            pid="$!"
    
            mysql=( mysql --protocol=socket -uroot )
    
            for i in {30..0}; do
                if echo 'SELECT 1' | "${mysql[@]}" &> /dev/null; then
                    break
                fi
                echo 'MySQL init process in progress...'
                sleep 1
            done
    
            if [ "$i" = 0 ]; then
                echo >&2 'MySQL init process failed.'
                exit 1
            fi
    
            # sed is for https://bugs.mysql.com/bug.php?id=20545
            mysql_tzinfo_to_sql /usr/share/zoneinfo | sed 's/Local time zone must be set--see zic manual page/FCTY/' | "${mysql[@]}" mysql
            "${mysql[@]}" <<-EOSQL
            -- What's done in this file shouldn't be replicated
            --  or products like mysql-fabric won't work
            SET @@SESSION.SQL_LOG_BIN=0;
            CREATE USER 'root'@'${ALLOW_ROOT_FROM}' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;
            GRANT ALL ON *.* TO 'root'@'${ALLOW_ROOT_FROM}' WITH GRANT OPTION ;
            GRANT ALL ON *.* TO 'root'@'localhost' WITH GRANT OPTION ;
            CREATE USER 'xtrabackup'@'localhost' IDENTIFIED BY '$XTRABACKUP_PASSWORD';
            GRANT RELOAD,PROCESS,LOCK TABLES,REPLICATION CLIENT ON *.* TO 'xtrabackup'@'localhost';
            GRANT REPLICATION CLIENT ON *.* TO monitor@'%' IDENTIFIED BY 'monitor';
            GRANT PROCESS ON *.* TO monitor@localhost IDENTIFIED BY 'monitor';
            CREATE USER 'mysql'@'localhost' IDENTIFIED BY '' ;
            DROP DATABASE IF EXISTS test ;
            FLUSH PRIVILEGES ;
    EOSQL
    
            if [ "$PERCONA_MAJOR" = "5.6" ]; then
                echo "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('${MYSQL_ROOT_PASSWORD}'); FLUSH PRIVILEGES;" | "${mysql[@]}"
            else
                echo "ALTER USER 'root'@'localhost' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}'; FLUSH PRIVILEGES;" | "${mysql[@]}"
            fi
    
            if [ ! -z "$MYSQL_ROOT_PASSWORD" ]; then
                mysql+=( -p"${MYSQL_ROOT_PASSWORD}" )
            fi
    
            if [ "$MYSQL_DATABASE" ]; then
                echo "CREATE DATABASE IF NOT EXISTS \`$MYSQL_DATABASE\` ;" | "${mysql[@]}"
                mysql+=( "$MYSQL_DATABASE" )
            fi
    
            if [ "$MYSQL_USER" -a "$MYSQL_PASSWORD" ]; then
                echo "CREATE USER '"$MYSQL_USER"'@'%' IDENTIFIED BY '"$MYSQL_PASSWORD"' ;" | "${mysql[@]}"
    
                if [ "$MYSQL_DATABASE" ]; then
                    echo "GRANT ALL ON \`"$MYSQL_DATABASE"\`.* TO '"$MYSQL_USER"'@'%' ;" | "${mysql[@]}"
                fi
    
                echo 'FLUSH PRIVILEGES ;' | "${mysql[@]}"
            fi
    
            if [ ! -z "$MYSQL_ONETIME_PASSWORD" ]; then
                "${mysql[@]}" <<-EOSQL
                ALTER USER 'root'@'%' PASSWORD EXPIRE;
    EOSQL
            fi
            if ! kill -s TERM "$pid" || ! wait "$pid"; then
                echo >&2 'MySQL init process failed.'
                exit 1
            fi
    
            echo
            echo 'MySQL init process done. Ready for start up.'
            echo
        fi
    }
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/tests/pxc-test-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralledger-mysql-tests
data:
  run.sh: |-
    echo "Testing Percona XtraDB Cluster"
    creds="-uroot -p${MYSQL_ROOT_PASSWORD} -h ml-centralledger-mysql"
    echo "==> basic mysql ping"
    mysqladmin $creds ping
    [[ $? != "0" ]] && exit $?
    echo "==> test basic query"
    mysql $creds -e "select now() \G"
    [[ $? != "0" ]] && exit $?
    echo "==> checking if cluster is ready"
    mysql $creds -e "SHOW GLOBAL STATUS LIKE 'wsrep_ready' \G" | grep Value | awk '{ print $2}' | grep ON
    [[ $? != "0" ]] && exit $?
    echo "==> checking if cluster size matches replica count"
    cluster_size=$(mysql $creds -e "SHOW GLOBAL STATUS LIKE 'wsrep_cluster_size' \G" | grep Value | awk '{ print $2}')
    [[ $? != "0" ]] && exit $?
    [[ "${cluster_size}" == "1" ]] || exit 1
    echo "SUCCESS"
    exit 0
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-handler-deferredsettlement-config
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-14.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"central-settlement-deferredsettlement.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"ml-centralledger-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"oyMxgZChuu\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"Hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": false,\n    \"API\": {\n      \"DISABLED\": false\n    },\n    \"SETTINGS\": {\n      \"RULES\": {\n        \"SCRIPTS_FOLDER\": \"scripts/grosssettlementTemp\",\n        \"SCRIPT_TIMEOUT\": 100,\n        \"CONSUMER_COMMIT\": true,\n        \"FROM_SWITCH\": true\n    }\n    }\n  },\n  \"API_DOC_ENDPOINTS_ENABLED\": true,\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-deferredsettlement-close\",\n              \"group.id\": \"cs-group-deferredsettlement-close\",\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      },\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-centralsettlement-handler-deferredsettlement-notification-event\",\n              \"group.id\": \"cs-group-centralsettlement-handler-deferredsettlement-notification-event\",\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"client.id\": \"cs-prod-centralsettlement-handler-deferredsettlement-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"client.id\": \"cs-prod-deferredsettlement-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-handler-deferredsettlement-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-14.0.0
data:
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-handler-deferredsettlement-sidecar
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-14.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralsettlement-handler-deferredsettlement-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-handler-grosssettlement-config
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-14.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"central-settlement-rules.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"ml-centralledger-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"oyMxgZChuu\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"Hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": false,\n    \"API\": {\n      \"DISABLED\": false\n    },\n    \"SETTINGS\": {\n      \"RULES\": {\n        \"SCRIPTS_FOLDER\": \"scripts/grosssettlementTemp\",\n        \"SCRIPT_TIMEOUT\": 100,\n        \"CONSUMER_COMMIT\": true,\n        \"FROM_SWITCH\": true\n    }\n    }\n  },\n  \"API_DOC_ENDPOINTS_ENABLED\": true,\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-deferredsettlement-close\",\n              \"group.id\": \"cs-group-deferredsettlement-close\",\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      },\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-centralsettlement-handler-grosssettlement-notification-event\",\n              \"group.id\": \"cs-group-centralsettlement-handler-grosssettlement-notification-event\",\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"client.id\": \"cs-prod-centralsettlement-handler-grosssettlement-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"client.id\": \"cs-prod-deferredsettlement-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-handler-grosssettlement-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-14.0.0
data:
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-handler-grosssettlement-sidecar
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-14.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralsettlement-handler-grosssettlement-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-handler-rules-config
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-14.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"central-settlement-grosssettlement.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"ml-centralledger-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"oyMxgZChuu\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"Hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": false,\n    \"API\": {\n      \"DISABLED\": false\n    },\n    \"SETTINGS\": {\n      \"RULES\": {\n        \"SCRIPTS_FOLDER\": \"scripts/grosssettlementTemp\",\n        \"SCRIPT_TIMEOUT\": 100,\n        \"CONSUMER_COMMIT\": true,\n        \"FROM_SWITCH\": true\n    }\n    }\n  },\n  \"API_DOC_ENDPOINTS_ENABLED\": true,\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-deferredsettlement-close\",\n              \"group.id\": \"cs-group-deferredsettlement-close\",\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      },\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-centralsettlement-handler-rules-notification-event\",\n              \"group.id\": \"cs-group-centralsettlement-handler-rules-notification-event\",\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"client.id\": \"cs-prod-centralsettlement-handler-rules-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"client.id\": \"cs-prod-deferredsettlement-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-handler-rules-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-14.0.0
data:
    interchangeFeeCalculation.js: "/* eslint-disable no-undef */\n// ********************************************************\n// Name: Interchange fee calculation\n// Type: notification\n// Action: commit\n// Status: success\n// Start: 2020-06-01T00:00:00.000Z\n// End: 2100-12-31T23:59:59.999Z\n// Description: This script calculates the interchange fees between DFSPs where the account type is \"Wallet\"\n// ********************************************************\n\n// ## Globals:\n// payload: The contents of the message from the Kafka topic.\n// transfer: The transfer object.\n\n// # Functions:\n// ## Data retrieval functions:\n// getTransfer(transferId): Retrieves a mojaloop transfer from the central-ledger API.\n\n// ## Helper functions:\n// getExtensionValue(list, key): Gets a value from an extension list\n// log(message): allows the script to log to standard out for debugging purposes\n\n// Math functions:\n// multiply(number1, number2, decimalPlaces): Uses ml-number to handle multiplication of money values\n\n// Ledger functions:\n// addLedgerEntry: Adds a debit and credit ledger entry to the specified account to the specified DFSPs\n\nlog('Running - interchangeFeeCalculation')\n\nlog(JSON.stringify(transfer))\nconst payerFspId = transfer.payer.partyIdInfo.fspId\nconst payeeFspId = transfer.payee.partyIdInfo.fspId\n\nif ((payeeFspId !== payerFspId) &&\n  (transfer.payee.partyIdInfo.extensionList &&                      // WORKAROUND for issue #2149\n    transfer.payer.partyIdInfo.extensionList &&                     // WORKAROUND for issue #2149\n    transfer.payee.partyIdInfo.extensionList.extension &&           // WORKAROUND for issue #2149\n    transfer.payer.partyIdInfo.extensionList.extension) &&          // WORKAROUND for issue #2149\n  (getExtensionValue(transfer.payee.partyIdInfo.extensionList.extension, 'accountType') === 'Wallet' &&\n  getExtensionValue(transfer.payer.partyIdInfo.extensionList.extension, 'accountType') === 'Wallet') &&\n  (transfer.transactionType.scenario === 'TRANSFER' &&\n    transfer.transactionType.initiator === 'PAYER' &&\n    transfer.transactionType.initiatorType === 'CONSUMER')) {\n  log(`Adding an interchange fee for Wallet to Wallet from ${payerFspId} to ${payeeFspId}`)\n  addLedgerEntry(payload.id, 'INTERCHANGE_FEE', // Ledger account type Id\n    'INTERCHANGE_FEE', // Ledger entry type Id\n    multiply(transfer.amount.amount, 0.006, 2),\n    transfer.amount.currency,\n    payerFspId,\n    payeeFspId)\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-handler-rules-sidecar
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-14.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralsettlement-handler-rules-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-service-config
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-14.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"central-settlement-service.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"ml-centralledger-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"oyMxgZChuu\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"Hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": true,\n    \"API\": {\n      \"DISABLED\": false\n    },\n    \"SETTINGS\": {\n      \"RULES\": {\n        \"SCRIPTS_FOLDER\": \"scripts/grosssettlementTemp\",\n        \"SCRIPT_TIMEOUT\": 100,\n        \"CONSUMER_COMMIT\": true,\n        \"FROM_SWITCH\": true\n    }\n    }\n  },\n  \"API_DOC_ENDPOINTS_ENABLED\": true,\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-deferredsettlement-close\",\n              \"group.id\": \"cs-group-deferredsettlement-close\",\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      },\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-centralsettlement-service-notification-event\",\n              \"group.id\": \"cs-group-centralsettlement-service-notification-event\",\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"socket.keepalive.enable\": true,\n              \"allow.auto.create.topics\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"client.id\": \"cs-prod-centralsettlement-service-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"DEFERREDSETTLEMENT\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"ml-kafka:9092\",\n              \"client.id\": \"cs-prod-deferredsettlement-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-service-rules
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-14.0.0
data:
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-centralsettlement-service-sidecar
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-14.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralsettlement-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-api-adapter-handler-notification-config
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-12.0.0
data:
  default.json: "{\n    \"PORT\": 3000,\n    \"ENDPOINT_SOURCE_URL\": \"http://ml-centralledger-service:80\",\n    \"ENDPOINT_HEALTH_URL\": \"http://ml-centralledger-service:80/health\",\n    \"ENDPOINT_CACHE_CONFIG\": {\n        \"expiresIn\": 180000,\n        \"generateTimeout\": 30000\n    },\n    \"ENDPOINT_SECURITY\":{\n        \"JWS\": {\n          \"JWS_SIGN\": true,\n          \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n          \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n        },\n        \"TLS\": {\n            \"rejectUnauthorized\": true\n        }\n    },\n    \"PROTOCOL_VERSIONS\": {\n  \"ACCEPT\": {\n    \"DEFAULT\": \"1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  },\n  \"CONTENT\": {\n    \"DEFAULT\": \"1.1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  }\n},\n    \"HOSTNAME\": \"ml-api-adapter-notification.local\",\n    \"MAX_CALLBACK_TIME_LAG_DILATION_MILLISECONDS\": 100,\n    \"MAX_FULFIL_TIMEOUT_DURATION_SECONDS\": 240,\n    \"TRANSFERS\": {\n        \"SEND_TRANSFER_CONFIRMATION_TO_PAYEE\": false\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"ml-handler-notification\"\n                }\n            }\n        }\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            },\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"FULFIL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-fulfil\",\n                \"REGEX\": \"topic-transfer-fulfil\"\n            },\n            \"GET_TRANSFERS_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-get\",\n                \"REGEX\": \"topic-transfer-get\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"ml-con-notification-event\",\n                            \"group.id\": \"ml-group-notification-event\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-api-adapter-handler-notification-sidecar
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-12.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"ml-api-adapter-handler-notification-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-api-adapter-service-config
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-12.0.0
data:
  default.json: "{\n    \"PORT\": 3000,\n    \"ENDPOINT_SOURCE_URL\": \"http://ml-centralledger-service:80\",\n    \"ENDPOINT_HEALTH_URL\": \"http://ml-centralledger-service:80/health\",\n    \"ENDPOINT_CACHE_CONFIG\": {\n        \"expiresIn\": 180000,\n        \"generateTimeout\": 30000\n    },\n    \"ENDPOINT_SECURITY\":{\n        \"JWS\": {\n            \"JWS_SIGN\": false,\n            \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n            \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n          },\n        \"TLS\": {\n            \"rejectUnauthorized\": true\n        }\n    },\n    \"PROTOCOL_VERSIONS\": {\n  \"ACCEPT\": {\n    \"DEFAULT\": \"1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  },\n  \"CONTENT\": {\n    \"DEFAULT\": \"1.1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  }\n},\n    \"HOSTNAME\": \"ml-api-adapter.local\",\n    \"MAX_CALLBACK_TIME_LAG_DILATION_MILLISECONDS\": 100,\n    \"MAX_FULFIL_TIMEOUT_DURATION_SECONDS\": 240,\n    \"TRANSFERS\": {\n        \"SEND_TRANSFER_CONFIRMATION_TO_PAYEE\": false\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": true,\n        \"API\": {\n            \"DISABLED\": false\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"ml-service\"\n                }\n            }\n        }\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            },\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"FULFIL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-fulfil\",\n                \"REGEX\": \"topic-transfer-fulfil\"\n            },\n            \"GET_TRANSFERS_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-get\",\n                \"REGEX\": \"topic-transfer-get\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"ml-con-notification-event\",\n                            \"group.id\": \"ml-group-notification-event\",\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"socket.keepalive.enable\": true,\n                            \"allow.auto.create.topics\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"ml-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-api-adapter-service-sidecar
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-12.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"ml-api-adapter-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-backend/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-testing-toolkit-backend-config-default
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-backend-15.0.0
data:
    system_config.json: '{
  "API_DEFINITIONS": [
    {
      "asynchronous": true,
      "folderPath": "fspiop_1.0",
      "type": "fspiop",
      "version": "1.0"
    },
    {
      "asynchronous": true,
      "folderPath": "fspiop_1.1",
      "type": "fspiop",
      "version": "1.1"
    },
    {
      "folderPath": "settlements_1.0",
      "type": "settlements",
      "version": "1.0"
    },
    {
      "folderPath": "settlements_2.0",
      "type": "settlements",
      "version": "2.0"
    },
    {
      "caption": "(old)",
      "folderPath": "central_admin_old_9.3",
      "type": "central_admin",
      "version": "9.3"
    },
    {
      "folderPath": "central_admin_1.0",
      "type": "central_admin",
      "version": "1.0"
    },
    {
      "folderPath": "als_admin_1.1",
      "type": "als_admin",
      "version": "1.1"
    },
    {
      "folderPath": "mojaloop_simulator_0.1",
      "type": "mojaloop_simulator",
      "version": "0.1"
    },
    {
      "folderPath": "mojaloop_sdk_outbound_scheme_adapter_1.0",
      "prefix": "sdk-out",
      "type": "mojaloop_sdk_outbound_scheme_adapter",
      "version": "1.0"
    },
    {
      "folderPath": "payment_manager_1.4",
      "type": "payment_manager",
      "version": "1.4"
    },
    {
      "folderPath": "thirdparty_sdk_outbound_0.1",
      "type": "thirdparty_sdk_outbound",
      "version": "0.1"
    }
  ],
  "API_PORT": 4040,
  "CONFIG_VERSIONS": {
    "callback": 1,
    "forward": 1,
    "response": 1,
    "userSettings": 1,
    "validation": 1
  },
  "CONNECTION_MANAGER": {
    "API_URL": "http://ml-connection-manager-backend:5061",
    "AUTH_ENABLED": false,
    "ENABLED": false,
    "HUB_PASSWORD": "hub",
    "HUB_USERNAME": "hub"
  },
  "DB": {
    "URI": "mongodb://ttk:ttk@ml-ttk-mongodb:27017/ttk"
  },
  "HOSTING_ENABLED": false,
  "HTTP_CLIENT": {
    "KEEP_ALIVE": false,
    "MAX_SOCKETS": 50,
    "UNUSED_AGENTS_CHECK_TIMER_MS": 300000,
    "UNUSED_AGENTS_EXPIRY_MS": 1800000
  },
  "INBOUND_MUTUAL_TLS_ENABLED": false,
  "KEYCLOAK": {
    "ADMIN_CLIENT_ID": "admin-cli",
    "ADMIN_PASSWORD": "admin",
    "ADMIN_REALM": "master",
    "ADMIN_USERNAME": "admin",
    "API_URL": "http://localhost:5050",
    "ENABLED": false,
    "REALM": "testingtoolkit"
  },
  "OAUTH": {
    "APP_OAUTH_CLIENT_KEY": "ttk",
    "APP_OAUTH_CLIENT_SECRET": "23b898a5-63d2-4055-bbe1-54efcda37e7d",
    "AUTH_ENABLED": false,
    "EMBEDDED_CERTIFICATE": "password",
    "EVERYONE_ROLE": "Internal/everyone",
    "MTA_ROLE": "Application/MTA",
    "OAUTH2_ISSUER": "http://localhost:5050/api/oauth2/token",
    "OAUTH2_TOKEN_ISS": "http://localhost:5050/api/oauth2/token",
    "PTA_ROLE": "Application/PTA"
  },
  "OUTBOUND_MUTUAL_TLS_ENABLED": false,
  "SERVER_LOGS": {
    "ADAPTER": {
      "API_URL": "http://elastic-search.demo/",
      "INDEX": "moja*",
      "TYPE": "ELASTICSEARCH"
    },
    "ENABLED": false,
    "RESULTS_PAGE_SIZE": 50
  }
}'
    user_config.json: '{
  "ADVANCED_FEATURES_ENABLED": true,
  "CALLBACK_ENDPOINT": "http://localhost:4000",
  "CALLBACK_RESOURCE_ENDPOINTS": {
    "enabled": true,
    "endpoints": [
      {
        "endpoint": "http://ml-account-lookup-service",
        "method": "put",
        "path": "/parties/{Type}/{ID}"
      },
      {
        "endpoint": "http://ml-quoting-service",
        "method": "put",
        "path": "/quotes/{ID}"
      },
      {
        "endpoint": "http://ml-ml-api-adapter-service",
        "method": "put",
        "path": "/transfers/{ID}"
      }
    ]
  },
  "CALLBACK_TIMEOUT": 20000,
  "CLIENT_MUTUAL_TLS_ENABLED": false,
  "CLIENT_TLS_CREDS": [
    {
      "CERT": "-----BEGIN CERTIFICATE-----\nMIIFATCCAumgAwIBAgIUEcEtqgcXBoTykvaD6PprzY8kxpYwDQYJKoZIhvcNAQEL\nBQAwfzERMA8GA1UEChMITW9kdXNCb3gxHDAaBgNVBAsTE0luZnJhc3RydWN0dXJl\nIFRlYW0xTDBKBgNVBAMTQ3Rlc3Rmc3AxLnFhLnByZS5teWFubWFycGF5LXByZS5p\nby5pbnRlcm5hbCB0ZXN0ZnNwMSBJbnRlcm1lZGlhdGUgQ0EwHhcNMjEwMjIyMTkw\nMTEyWhcNMjMwMjIzMDY0MDA2WjBdMREwDwYDVQQKEwhNb2R1c0JveDEcMBoGA1UE\nCxMTSW5mcmFzdHJ1Y3R1cmUgVGVhbTEqMCgGA1UEAxMhdGVzdGZzcDEucWEucHJl\nLm15YW5tYXJwYXktcHJlLmlvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEApndEBbmdlfrpnidagKb2D32bEL+iGYxLEicdQVs24018zNPdbrIYtXyDjgjA\nq718HH5XQW2FSz6cA1CbQ6jLuY88EZRUiCSJ4rCkENWw+mpVLyOd+mcYU4JwOQNC\nP+W8GGcW/haifkXtHEDUO4pIxnXWC6DftvxZ3TH5PxtWO8aJcsoj94oBTPOhnGi0\nC356XyseYl7o7hdxZu3DvY3Wyh/k5pDDHOCjQYxl9wjtW+BVWMCFxRaCu4f/3LVj\nca9BccwZ8O4Rdhu6lhJEUCUgTqdx3vXRB1xzwHT0W7gariy4RVbvwE35AaCliyEr\n4O5WlCvAMOct7POYDAwNuoeb7wIDAQABo4GWMIGTMA4GA1UdDwEB/wQEAwIDqDAT\nBgNVHSUEDDAKBggrBgEFBQcDAjAdBgNVHQ4EFgQU2alVxVOOplYXiLAYCDaII4E0\n/WgwHwYDVR0jBBgwFoAUCFvcCetcirxZPE3N6qMdOo5H7Z4wLAYDVR0RBCUwI4Ih\ndGVzdGZzcDEucWEucHJlLm15YW5tYXJwYXktcHJlLmlvMA0GCSqGSIb3DQEBCwUA\nA4ICAQBkX5LItY0calp7NT21O8z+iufVNV8onEch4J7HJjEVwtCB4UVl7LrWJ3cw\n9KLt7nj85/AUuuhtNPJO9DW/x+0xRyW94Ef5MYHP3nheFWTag8riYl/1SXljOssS\nHCpTvRhirnfGeqBGO1OBwCbkYNIEZI95eMerVoPFm0PfGBb4DJ6mUdfc3qzeOP7K\nOlE5VMhwH2PYv1TS7Hpj1k/1dxpdvyOs7EKVvWD+OokLhJaHgU8NWVetTUtsXSN/\nTv06ZN8JGTN/Udm7POVyEaol8Jw2FRGGKcwOBKbqroNs6POqTofqZeL4SFAkzzQL\nvOAhbQIB6GSznG1Gg1G9IjGVCMXUhpNK2PD8RR1ovzi0MZlRkITGRPhBYQf5xMFl\nZeq0mGFQR3VYDdlwT0O37C8fpaYvpdupeYdxcB623PNz1VkO1MbsXnOoHY8kcFGa\nMh4IARCeR/MwXNWHpGrd6J5Mzmhk0Vy8GyBbqcROUpNR/XTZYRTyfTEq5+amJyLi\n67OB9FP5cS7oQhj7gsaQCTJlxbh/CjmQdKmIimWSEZkDePK5eExNPafBk47tx4KA\nFmh9pIqRyheROesa/zTDGYySNcVd14dl703pyZQNO4b5rap0SZoyGDTfI+7OqAHM\nAz0kWYyZps2nqPZgbwDFigIy2TESvoXahCCtNUoCy9sawa3Diw==\n-----END CERTIFICATE-----",
      "HOST": "testfsp1",
      "KEY": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEApndEBbmdlfrpnidagKb2D32bEL+iGYxLEicdQVs24018zNPd\nbrIYtXyDjgjAq718HH5XQW2FSz6cA1CbQ6jLuY88EZRUiCSJ4rCkENWw+mpVLyOd\n+mcYU4JwOQNCP+W8GGcW/haifkXtHEDUO4pIxnXWC6DftvxZ3TH5PxtWO8aJcsoj\n94oBTPOhnGi0C356XyseYl7o7hdxZu3DvY3Wyh/k5pDDHOCjQYxl9wjtW+BVWMCF\nxRaCu4f/3LVjca9BccwZ8O4Rdhu6lhJEUCUgTqdx3vXRB1xzwHT0W7gariy4RVbv\nwE35AaCliyEr4O5WlCvAMOct7POYDAwNuoeb7wIDAQABAoIBAB4YIawHSn36xpFY\n+/uWM5XJV2dHvb5wpoG5oIhYPSwKri05gCaq+9yTjhT3cB2cO/vKu2uQqTBZOUtA\nH1G0CmCZjHqBHmcec+8PkBmbCEu9PXkwLzc9vCAczL0B4dA7cC3ZNUbqQKYjbiJV\ndgjtjwqR8whXJRqntHdQuYa3InfbufcHNHhSXJwE9MqVRpsv/BfY9wjhQfGBHUnT\nCz41xj1bu8Uy4+/1sRF/l9fYDm5E6WbgzvI49/fM7hA+8fQqoRkFLlEzzBhWb93Q\n2qVo2Y5RhVpffdyxPYX7b9RI7UmUZYp2sLl5GYj5ZzTzsffwUdPl2pZlRkYJGvUo\nortpToECgYEA17NVIZgeQ5VcSsZKGJlzPkcdPoWCk7RY5DugxTaNwSE/uO25B/Ax\nBPE6ZC9LbfXyfTQXaam2VtpSzvNJ7p7j30qkEK0Z+I2pGAVohZg4enkHaIQkYtIP\naZZ/wce5R8VZq6EpToprTm3cG6T+nNVOzqRjUqgnUZyY8nWy2CD5OucCgYEAxZEb\nOKjo9Iwrod2uOZlQDAsnTvgqZySW/lORrnfEWmOEiJpRvjlxMfNPNlc2iMTBQShq\naPZi48g17btU8ACs2NOH/FXuxooDe+0gJDj48WP9/bBzOAOJqhKZ+g9l/Cr978yJ\nAHNh/w8foUUkqAfxmXoTImw7LdSaPIc7ewAlPbkCgYAcGq6d6O8QiTZ0O6/N0riU\nRbnGuqiPzDDE1AwXhgskPcvKsZapNR998FxWT185nZERxSbDyqwKVvnxIvvgDm3M\nWzJTReqbWwHMMnAy7+lz868GbCk9gvclH8nXmslGU61iUmZKaHigyGmkZHQURSq2\ne+7BB03QMWIwPSunQ2yVwwKBgQCbPrzvNvtnPsYCeZmwNSLLc/A9g5B+YCguTSjK\nud4XUOASH4FgQu8J2zFBeCKoMkPRmZqURBfM+cQ2vN+vgDhSYVYYGMZ6SHUYamq5\nS/OCa5poQMEpIM6KT/eioXr4PigwyL5XFlPJAu9N4HE/gI5+lYh3oiiWiNtx+Knq\nq2CYMQKBgQCv+QTGDrSc3SUaWT+JMoFdfzvJyyqQOUvgRbSGAp5GryYqI9dozx70\nlT2IdoAZ0DHrJhNs13Pr7ngXwqS6pKlZU8NSX2ch7h5ZwIsYJESzKwXF/frLMQSy\nTPV3d0hb7UaW3wqOx2Dbj8vJJdvUo3UUkOcmgesqGg3nf3t51I6k0A==\n-----END RSA PRIVATE KEY-----"
    }
  ],
  "DEFAULT_ENVIRONMENT_FILE_NAME": "hub-k8s-default-environment.json",
  "DEFAULT_REQUEST_TIMEOUT": 5000,
  "DEFAULT_USER_FSPID": "userdfsp",
  "ENDPOINTS_DFSP_WISE": {
    "dfsps": {
      "userdfsp": {
        "defaultEndpoint": "http://scheme-adapter:4000",
        "endpoints": []
      },
      "userdfsp2": {
        "defaultEndpoint": "http://scheme-adapter2:4000",
        "endpoints": []
      }
    }
  },
  "FSPID": "testingtoolkitdfsp",
  "GITHUB_CONFIG": {
    "TEST_CASES_REPO_BASE_PATH": "collections/hub",
    "TEST_CASES_REPO_DEFAULT_RELEASE_TAG": "latest",
    "TEST_CASES_REPO_HUB_GP_PATH": "collections/hub/golden_path",
    "TEST_CASES_REPO_HUB_PROVISIONING_PATH": "collections/hub/provisioning",
    "TEST_CASES_REPO_NAME": "testing-toolkit-test-cases",
    "TEST_CASES_REPO_OWNER": "mojaloop"
  },
  "HUB_ONLY_MODE": false,
  "ILP_SECRET": "secret",
  "JWS_SIGN": false,
  "JWS_SIGN_PUT_PARTIES": false,
  "LABELS": [
    {
      "color": "red",
      "description": "Tests related to p2p transfer",
      "name": "p2p"
    },
    {
      "color": "green",
      "description": "Tests related to settlements",
      "name": "settlements"
    },
    {
      "color": "blue",
      "description": "Tests related to quoting service",
      "name": "quotes"
    }
  ],
  "LOG_SERVER_UI_URL": "http://log-server-url.demo",
  "SCRIPT_TIMEOUT": 5000,
  "SEND_CALLBACK_ENABLE": true,
  "TRANSFERS_VALIDATION_CONDITION": true,
  "TRANSFERS_VALIDATION_ILP_PACKET": true,
  "TRANSFERS_VALIDATION_WITH_PREVIOUS_QUOTES": true,
  "UI_CONFIGURATION": {
    "MOBILE_SIMULATOR": {
      "HUB_CONSOLE_ENABLED": true
    }
  },
  "VALIDATE_INBOUND_JWS": false,
  "VALIDATE_INBOUND_PUT_PARTIES_JWS": false,
  "VERSION": 1,
  "VERSIONING_SUPPORT_ENABLE": true
}'
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-backend/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-testing-toolkit-backend-config-extra-environments
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-backend-15.0.0
data:
    hub-k8s-default-environment.json: '{
  "inputValues": {
    "BASE_CENTRAL_LEDGER_ADMIN": "",
    "CALLBACK_ENDPOINT_BASE_URL": "http://ml-ml-testing-toolkit-backend:4040",
    "CENTRALAUTH_CB_FSPIOP": "http://auth-svc:4004",
    "CENTRALAUTH_NAME": "centralauth",
    "DELAY_CGS": 5000,
    "DFSPA_BACKEND_TESTAPI_URL": "http://ml-sim-tp-dfspa-backend:3003",
    "DFSPA_CALLBACK_URL": "http://ml-sim-tp-dfspa-scheme-adapter:4000",
    "DFSPA_CB_FSPIOP": "http://ml-sim-tp-dfspa-scheme-adapter:4000",
    "DFSPA_CB_THIRDPARTY": "http://ml-sim-tp-dfspa-thirdparty-sdk:4005",
    "DFSPA_NAME": "dfspa",
    "DFSPA_SDK_TESTAPI_URL": "http://ml-sim-tp-dfspa-scheme-adapter:4002",
    "DFSPA_SDK_TESTAPI_WS_URL": "ws://ml-sim-tp-dfspa-scheme-adapter:4002",
    "DFSPB_BACKEND_TESTAPI_URL": "http://ml-sim-tp-dfspb-backend:3003",
    "DFSPB_CALLBACK_URL": "http://ml-sim-tp-dfspb-scheme-adapter:4000",
    "DFSPB_CB_FSPIOP": "http://ml-sim-tp-dfspb-scheme-adapter:4000",
    "DFSPB_CB_THIRDPARTY": "http://ml-sim-tp-dfspb-thirdparty-sdk:4005",
    "DFSPB_NAME": "dfspb",
    "DFSPB_SDK_TESTAPI_URL": "http://ml-sim-tp-dfspb-scheme-adapter:4002",
    "DFSPB_SDK_TESTAPI_WS_URL": "ws://ml-sim-tp-dfspb-scheme-adapter:4002",
    "ENABLE_JWS_SIGNING": true,
    "ENABLE_JWS_VALIDATION": false,
    "ENABLE_PROTECTED_HEADERS_VALIDATION": true,
    "ENABLE_WS_ASSERTIONS": true,
    "HOST_ACCOUNT_LOOKUP_ADMIN": "http://ml-account-lookup-service-admin",
    "HOST_ACCOUNT_LOOKUP_SERVICE": "http://ml-account-lookup-service",
    "HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN": "http://ml-account-lookup-service-admin",
    "HOST_BULK_ADAPTER": "http://ml-bulk-api-adapter-service",
    "HOST_CENTRAL_LEDGER": "http://ml-centralledger-service",
    "HOST_CENTRAL_SETTLEMENT": "http://ml-centralsettlement-service/v2",
    "HOST_LEGACY_SIMULATOR": "http://ml-simulator",
    "HOST_ML_API_ADAPTER": "http://ml-ml-api-adapter-service",
    "HOST_ORACLE_CONSENT": "http://consent-oracle:3000",
    "HOST_QUOTING_SERVICE": "http://ml-quoting-service",
    "HOST_SIMULATOR": "http://ml-simulator",
    "HOST_TRANSACTION_REQUESTS_SERVICE": "http://ml-transaction-requests-service",
    "HUB_OPERATOR_BEARER_TOKEN": "NOT_APPLICABLE",
    "NET_DEBIT_CAP": "50000",
    "NORESPONSE_NAME": "noresponsepayeefsp",
    "NORESPONSE_SIMPAYEE_NAME": "noresponsepayeefsp",
    "ON_US_TRANSFERS_ENABLED": false,
    "PAYEEFSP_BACKEND_TESTAPI_URL": "http://ml-sim-payeefsp-backend:3003",
    "PAYEEFSP_CALLBACK_URL": "http://ml-sim-payeefsp-scheme-adapter:4000",
    "PAYEEFSP_SDK_TESTAPI_URL": "http://ml-sim-payeefsp-scheme-adapter:4002",
    "PAYEEFSP_SDK_TESTAPI_WS_URL": "ws://ml-sim-payeefsp-scheme-adapter:4002",
    "PAYERFSP_BACKEND_TESTAPI_URL": "http://ml-sim-payerfsp-backend:3003",
    "PAYERFSP_CALLBACK_URL": "http://ml-sim-payerfsp-scheme-adapter:4000",
    "PAYERFSP_SDK_TESTAPI_URL": "http://ml-sim-payerfsp-scheme-adapter:4002",
    "PAYERFSP_SDK_TESTAPI_WS_URL": "ws://ml-sim-payerfsp-scheme-adapter:4002",
    "PISP_BACKEND_TESTAPI_URL": "http://ml-sim-tp-pisp-backend:3003",
    "PISP_CALLBACK_URL": "http://ml-sim-tp-pisp-scheme-adapter:4000",
    "PISP_CB_FSPIOP": "http://ml-sim-tp-pisp-scheme-adapter:4000",
    "PISP_CB_THIRDPARTY": "http://ml-sim-tp-pisp-thirdparty-sdk:4005",
    "PISP_NAME": "pisp",
    "PISP_SDK_TESTAPI_URL": "http://ml-sim-tp-pisp-scheme-adapter:4002",
    "PISP_SDK_TESTAPI_WS_URL": "ws://ml-sim-tp-pisp-scheme-adapter:4002",
    "PISP_THIRDPARTY_SDK_OUTBOUND_URL": "http://ml-sim-tp-pisp-thirdparty-sdk:4006",
    "SIM1_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nDgoQeSng2kt5Z6mkoDIQTs7nEflb4w==\n-----END PRIVATE KEY-----\n",
    "SIM1_MSISDN": "17039811903",
    "SIM1_NAME": "testfsp1",
    "SIM2_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nTv4G862WYeqD1fdyZaKQ3b9fAQEq1g==\n-----END PRIVATE KEY-----\n",
    "SIM2_MSISDN": "17039811904",
    "SIM2_NAME": "testfsp2",
    "SIM3_MSISDN": "17891239873",
    "SIM3_NAME": "testfsp3",
    "SIM4_MSISDN": "17891239872",
    "SIM4_NAME": "testfsp4",
    "SIMPAYEE_CURRENCY": "USD",
    "SIMPAYEE_JWS_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT\n7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL\nnoSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi\n120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI\nIoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y\neW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB\nT/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z\nSikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq\nm+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2\nHfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I\nWylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0\ndQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY\nJuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB\nBKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4\nSfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj\nsuHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd\n7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm\nfW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH\ntl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/\nn3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+\nCPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K\nFfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct\n0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ\nsHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa\nuutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW\nuu1pxuWD0gTJxFkp6u4YIAhw\n-----END PRIVATE KEY-----\n",
    "SIMPAYEE_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE\nsgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw\nIpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW\nNgf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj\nvVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ\nLmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3\nFwIDAQAB\n-----END PUBLIC KEY-----\n",
    "SIMPAYEE_MSISDN": "17039811902",
    "SIMPAYEE_NAME": "payeefsp",
    "SIMPAYER_CURRENCY": "USD",
    "SIMPAYER_JWS_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6\njM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E\nvCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I\neoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7\nkx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC\nQWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/\nsAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt\nA7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj\na4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X\nKaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii\nyWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n\nxOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR\nRbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B\ndXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ\nuomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht\nvJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS\ngGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium\nsgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW\n6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR\n8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/\nkmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI\niuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX\n7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa\n+fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4\nzXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF\niNK0yCENMhSoOTtbT9tmGi0=\n-----END PRIVATE KEY-----\n",
    "SIMPAYER_MSISDN": "17039811901",
    "SIMPAYER_NAME": "payerfsp",
    "SIMPLE_ROUTING_MODE_ENABLED": true,
    "TESTFSP1_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp1-backend:3003",
    "TESTFSP1_CALLBACK_URL": "http://ml-sim-testfsp1-scheme-adapter:4000",
    "TESTFSP1_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v\ndCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG\n42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6\nNRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa\nh9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os\nxQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by\nUQIDAQAB\n-----END PUBLIC KEY-----\n",
    "TESTFSP1_SDK_TESTAPI_URL": "http://ml-sim-testfsp1-scheme-adapter:4002",
    "TESTFSP1_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp1-scheme-adapter:4002",
    "TESTFSP2_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp2-backend:3003",
    "TESTFSP2_CALLBACK_URL": "http://ml-sim-testfsp2-scheme-adapter:4000",
    "TESTFSP2_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y\nl5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5\n+ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG\nYedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H\nJa+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6\nWZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+\nAQIDAQAB\n-----END PUBLIC KEY-----",
    "TESTFSP2_SDK_TESTAPI_URL": "http://ml-sim-testfsp2-scheme-adapter:4002",
    "TESTFSP2_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp2-scheme-adapter:4002",
    "TESTFSP3_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp3-backend:3003",
    "TESTFSP3_CALLBACK_URL": "http://ml-sim-testfsp3-scheme-adapter:4000",
    "TESTFSP3_SDK_TESTAPI_URL": "http://ml-sim-testfsp3-scheme-adapter:4002",
    "TESTFSP3_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp3-scheme-adapter:4002",
    "TESTFSP4_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp4-backend:3003",
    "TESTFSP4_CALLBACK_URL": "http://ml-sim-testfsp4-scheme-adapter:4000",
    "TESTFSP4_SDK_TESTAPI_URL": "http://ml-sim-testfsp4-scheme-adapter:4002",
    "TESTFSP4_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp4-scheme-adapter:4002",
    "TEST_NOTIFICATIONS": true,
    "TTKFSP_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nDktFAP1w3ruycnE/t+/H8rDVJGPTHc8=\n-----END PRIVATE KEY-----\n",
    "WS_ASSERTION_TIMEOUT": 5000,
    "accept": "application/vnd.interoperability.parties+json;version=1.1",
    "acceptAuthorizations": "application/vnd.interoperability.authorizations+json;version=1.1",
    "acceptAuthorizationsNotSupported": "application/vnd.interoperability.authorizations+json;version=2.0",
    "acceptAuthorizationsOld": "application/vnd.interoperability.authorizations+json;version=1.0",
    "acceptBulkTransfers": "application/vnd.interoperability.bulkTransfers+json;version=1.1",
    "acceptBulkTransfersNotSupported": "application/vnd.interoperability.bulkTransfers+json;version=2.0",
    "acceptBulkTransfersOld": "application/vnd.interoperability.bulkTransfers+json;version=1.0",
    "acceptParticipants": "application/vnd.interoperability.participants+json;version=1.1",
    "acceptParticipantsNotSupported": "application/vnd.interoperability.participants+json;version=2.0",
    "acceptParticipantsOld": "application/vnd.interoperability.participants+json;version=1.0",
    "acceptParties": "application/vnd.interoperability.parties+json;version=1.1",
    "acceptPartiesNotSupported": "application/vnd.interoperability.parties+json;version=2.0",
    "acceptPartiesOld": "application/vnd.interoperability.parties+json;version=1.0",
    "acceptQuotes": "application/vnd.interoperability.quotes+json;version=1.1",
    "acceptQuotesNotSupported": "application/vnd.interoperability.quotes+json;version=2.0",
    "acceptQuotesOld": "application/vnd.interoperability.quotes+json;version=1.0",
    "acceptTransactionRequests": "application/vnd.interoperability.transactionRequests+json;version=1.1",
    "acceptTransactionRequestsNotSupported": "application/vnd.interoperability.transactionRequests+json;version=2.0",
    "acceptTransactionRequestsOld": "application/vnd.interoperability.transactionRequests+json;version=1.0",
    "acceptTransfers": "application/vnd.interoperability.transfers+json;version=1.1",
    "acceptTransfersNotSupported": "application/vnd.interoperability.transfers+json;version=2.0",
    "acceptTransfersOld": "application/vnd.interoperability.transfers+json;version=1.0",
    "accountId": "6",
    "amount": "100",
    "batchToIdValue1": "27713803066",
    "batchToIdValue2": "27713803067",
    "cgscurrency": "INR",
    "condition": "n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU",
    "contentBulkTransfers": "application/vnd.interoperability.bulkTransfers+json;version=1.1",
    "contentBulkTransfersNotSupported": "application/vnd.interoperability.bulkTransfers+json;version=2.0",
    "contentBulkTransfersOld": "application/vnd.interoperability.bulkTransfers+json;version=1.0",
    "contentType": "application/vnd.interoperability.parties+json;version=1.1",
    "contentTypeAuthorizations": "application/vnd.interoperability.authorizations+json;version=1.1",
    "contentTypeAuthorizationsNotSupported": "application/vnd.interoperability.authorizations+json;version=2.0",
    "contentTypeAuthorizationsOld": "application/vnd.interoperability.authorizations+json;version=1.0",
    "contentTypeParticipants": "application/vnd.interoperability.participants+json;version=1.1",
    "contentTypeParticipantsNotSupported": "application/vnd.interoperability.participants+json;version=2.0",
    "contentTypeParticipantsOld": "application/vnd.interoperability.participants+json;version=1.0",
    "contentTypeParties": "application/vnd.interoperability.parties+json;version=1.1",
    "contentTypePartiesNotSupported": "application/vnd.interoperability.parties+json;version=2.0",
    "contentTypePartiesOld": "application/vnd.interoperability.parties+json;version=1.0",
    "contentTypeQuotes": "application/vnd.interoperability.quotes+json;version=1.1",
    "contentTypeQuotesNotSupported": "application/vnd.interoperability.quotes+json;version=2.0",
    "contentTypeQuotesOld": "application/vnd.interoperability.quotes+json;version=1.0",
    "contentTypeTransactionRequests": "application/vnd.interoperability.transactionRequests+json;version=1.1",
    "contentTypeTransactionRequestsNotSupported": "application/vnd.interoperability.transactionRequests+json;version=2.0",
    "contentTypeTransactionRequestsOld": "application/vnd.interoperability.transactionRequests+json;version=1.0",
    "contentTypeTransfers": "application/vnd.interoperability.transfers+json;version=1.1",
    "contentTypeTransfersNotSupported": "application/vnd.interoperability.transfers+json;version=2.0",
    "contentTypeTransfersOld": "application/vnd.interoperability.transfers+json;version=1.0",
    "currency": "USD",
    "currency2": "TZS",
    "expectedAuthorizationsVersion": "1.1",
    "expectedParticipantsVersion": "1.1",
    "expectedPartiesVersion": "1.1",
    "expectedQuotesVersion": "1.1",
    "expectedTransactionRequestsVersion": "1.1",
    "expectedTransfersVersion": "1.1",
    "fromDOB": "1984-01-01",
    "fromFirstName": "Firstname-Test",
    "fromFspId": "testingtoolkitdfsp",
    "fromIdType": "MSISDN",
    "fromIdValue": "44123456789",
    "fromLastName": "Lastname-Test",
    "fromSubIdValue": "30",
    "fspiopSignature": "{\"signature\":\"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\\\",\\\"protectedHeader\\\":\\\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ\"}",
    "fundsInPrepareAmount": "",
    "fundsInPrepareTransferId": "",
    "homeTransactionId": "123ABC",
    "hubEmail": "some.email@gmail.com",
    "hub_operator": "NOT_APPLICABLE",
    "ilpPacket": "AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA",
    "invalidFulfillment": "_3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----",
    "invalidToIdType": "ACCOUNT_ID",
    "invalidToIdValue": "27713803099",
    "mobileSimPayeeFsp": "greenbankfsp",
    "mobileSimPayerFsp": "pinkbankfsp",
    "note": "test",
    "payeeIdType": "MSISDN",
    "payeeIdentifier": "17039811902",
    "payeefsp": "payeefsp",
    "payeefspEmail": "some.email@gmail.com",
    "payeefspMSISDN": "17039811907",
    "payerIdType": "MSISDN",
    "payerIdentifier": "17039811901",
    "payerfsp": "testingtoolkitdfsp",
    "payerfspEmail": "some.email@gmail.com",
    "payerfspMSISDN": "17891239876",
    "payerfspSettlementAccountBalanceAfterFundsIn": "",
    "payerfspSettlementAccountBalanceBeforeFundsIn": "",
    "payerfspSettlementAccountId": "",
    "receiverMSISDN": "27713803912",
    "settlementpayeefspNoExtensionMSISDN": "27714923918",
    "settlementtestNonExistingMSISDN": "22244803917",
    "settlementtestfsp1bankMSISDN": "27713813914",
    "settlementtestfsp2bankMSISDN": "27713813915",
    "settlementtestfsp3bankMSISDN": "27713813916",
    "settlementtestfsp4bankMSISDN": "27713813917",
    "testfsp1Email": "some.email@gmail.com",
    "testfsp1IdType": "MSISDN",
    "testfsp1Identifier": "17039811903",
    "testfsp1MSISDN": "17039811903",
    "testfsp2Email": "some.email@gmail.com",
    "testfsp2IdType": "MSISDN",
    "testfsp2Identifier": "17039811904",
    "testfsp2MSISDN": "17039811904",
    "toAccentIdDOB": "2000-01-01",
    "toAccentIdFirstName": "Seán",
    "toAccentIdFspId": "payeefsp",
    "toAccentIdLastName": "Nuñez",
    "toAccentIdMiddleName": "François",
    "toAccentIdType": "MSISDN",
    "toAccentIdValue": "97039819999",
    "toBurmeseIdDOB": "1990-01-01",
    "toBurmeseIdFirstName": "ကောင်းထက်စံ",
    "toBurmeseIdFspId": "payeefsp",
    "toBurmeseIdLastName": "ဒေါ်သန္တာထွန်",
    "toBurmeseIdMiddleName": "အောင်",
    "toBurmeseIdType": "MSISDN",
    "toBurmeseIdValue": "2224448888",
    "toFspId": "payeefsp",
    "toIdType": "MSISDN",
    "toIdValue": "27713803912",
    "toIdValueDelete": "27713803913",
    "toSubIdValue": "30",
    "validCondition": "GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM",
    "validCondition2": "kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms",
    "validFulfillment": "UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA",
    "validIlpPacket2": "AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA"
  }
}'
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-frontend/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-testing-toolkit-frontend-config
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-frontend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-frontend-15.0.0
data:
    API_BASE_URL: "http://testing-toolkit.local"
    AUTH_ENABLED: "FALSE"
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-ttk-test-setup-config-file-defaults
  labels:
    app.kubernetes.io/name: ml-ttk-test-setup
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-setup-15.0.0
data:
  cli-default-config.json: |
    {"logLevel":"2","mode":"outbound"}
---
# Source: mojaloop/charts/ml-ttk-test-setup/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-ttk-test-setup-config-testcase-environment-file
  labels:
    app.kubernetes.io/name: ml-ttk-test-setup
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-setup-15.0.0
data:
  cli-testcase-environment.json: '{
  "inputValues": {
    "BASE_CENTRAL_LEDGER_ADMIN": "",
    "CALLBACK_ENDPOINT_BASE_URL": "http://ml-ml-testing-toolkit-backend:4040",
    "CENTRALAUTH_CB_FSPIOP": "http://auth-svc:4004",
    "CENTRALAUTH_NAME": "centralauth",
    "DELAY_CGS": 5000,
    "DFSPA_BACKEND_TESTAPI_URL": "http://ml-sim-tp-dfspa-backend:3003",
    "DFSPA_CALLBACK_URL": "http://ml-sim-tp-dfspa-scheme-adapter:4000",
    "DFSPA_CB_FSPIOP": "http://ml-sim-tp-dfspa-scheme-adapter:4000",
    "DFSPA_CB_THIRDPARTY": "http://ml-sim-tp-dfspa-thirdparty-sdk:4005",
    "DFSPA_NAME": "dfspa",
    "DFSPA_SDK_TESTAPI_URL": "http://ml-sim-tp-dfspa-scheme-adapter:4002",
    "DFSPA_SDK_TESTAPI_WS_URL": "ws://ml-sim-tp-dfspa-scheme-adapter:4002",
    "DFSPB_BACKEND_TESTAPI_URL": "http://ml-sim-tp-dfspb-backend:3003",
    "DFSPB_CALLBACK_URL": "http://ml-sim-tp-dfspb-scheme-adapter:4000",
    "DFSPB_CB_FSPIOP": "http://ml-sim-tp-dfspb-scheme-adapter:4000",
    "DFSPB_CB_THIRDPARTY": "http://ml-sim-tp-dfspb-thirdparty-sdk:4005",
    "DFSPB_NAME": "dfspb",
    "DFSPB_SDK_TESTAPI_URL": "http://ml-sim-tp-dfspb-scheme-adapter:4002",
    "DFSPB_SDK_TESTAPI_WS_URL": "ws://ml-sim-tp-dfspb-scheme-adapter:4002",
    "ENABLE_JWS_SIGNING": true,
    "ENABLE_JWS_VALIDATION": false,
    "ENABLE_PROTECTED_HEADERS_VALIDATION": true,
    "ENABLE_WS_ASSERTIONS": true,
    "HOST_ACCOUNT_LOOKUP_ADMIN": "http://ml-account-lookup-service-admin",
    "HOST_ACCOUNT_LOOKUP_SERVICE": "http://ml-account-lookup-service",
    "HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN": "http://ml-account-lookup-service-admin",
    "HOST_BULK_ADAPTER": "http://ml-bulk-api-adapter-service",
    "HOST_CENTRAL_LEDGER": "http://ml-centralledger-service",
    "HOST_CENTRAL_SETTLEMENT": "http://ml-centralsettlement-service/v2",
    "HOST_LEGACY_SIMULATOR": "http://ml-simulator",
    "HOST_ML_API_ADAPTER": "http://ml-ml-api-adapter-service",
    "HOST_ORACLE_CONSENT": "http://consent-oracle:3000",
    "HOST_QUOTING_SERVICE": "http://ml-quoting-service",
    "HOST_SIMULATOR": "http://ml-simulator",
    "HOST_TRANSACTION_REQUESTS_SERVICE": "http://ml-transaction-requests-service",
    "HUB_OPERATOR_BEARER_TOKEN": "NOT_APPLICABLE",
    "NET_DEBIT_CAP": "50000",
    "NORESPONSE_NAME": "noresponsepayeefsp",
    "NORESPONSE_SIMPAYEE_NAME": "noresponsepayeefsp",
    "ON_US_TRANSFERS_ENABLED": false,
    "PAYEEFSP_BACKEND_TESTAPI_URL": "http://ml-sim-payeefsp-backend:3003",
    "PAYEEFSP_CALLBACK_URL": "http://ml-sim-payeefsp-scheme-adapter:4000",
    "PAYEEFSP_SDK_TESTAPI_URL": "http://ml-sim-payeefsp-scheme-adapter:4002",
    "PAYEEFSP_SDK_TESTAPI_WS_URL": "ws://ml-sim-payeefsp-scheme-adapter:4002",
    "PAYERFSP_BACKEND_TESTAPI_URL": "http://ml-sim-payerfsp-backend:3003",
    "PAYERFSP_CALLBACK_URL": "http://ml-sim-payerfsp-scheme-adapter:4000",
    "PAYERFSP_SDK_TESTAPI_URL": "http://ml-sim-payerfsp-scheme-adapter:4002",
    "PAYERFSP_SDK_TESTAPI_WS_URL": "ws://ml-sim-payerfsp-scheme-adapter:4002",
    "PISP_BACKEND_TESTAPI_URL": "http://ml-sim-tp-pisp-backend:3003",
    "PISP_CALLBACK_URL": "http://ml-sim-tp-pisp-scheme-adapter:4000",
    "PISP_CB_FSPIOP": "http://ml-sim-tp-pisp-scheme-adapter:4000",
    "PISP_CB_THIRDPARTY": "http://ml-sim-tp-pisp-thirdparty-sdk:4005",
    "PISP_NAME": "pisp",
    "PISP_SDK_TESTAPI_URL": "http://ml-sim-tp-pisp-scheme-adapter:4002",
    "PISP_SDK_TESTAPI_WS_URL": "ws://ml-sim-tp-pisp-scheme-adapter:4002",
    "PISP_THIRDPARTY_SDK_OUTBOUND_URL": "http://ml-sim-tp-pisp-thirdparty-sdk:4006",
    "SIM1_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nDgoQeSng2kt5Z6mkoDIQTs7nEflb4w==\n-----END PRIVATE KEY-----\n",
    "SIM1_MSISDN": "17039811903",
    "SIM1_NAME": "testfsp1",
    "SIM2_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nTv4G862WYeqD1fdyZaKQ3b9fAQEq1g==\n-----END PRIVATE KEY-----\n",
    "SIM2_MSISDN": "17039811904",
    "SIM2_NAME": "testfsp2",
    "SIM3_MSISDN": "17891239873",
    "SIM3_NAME": "testfsp3",
    "SIM4_MSISDN": "17891239872",
    "SIM4_NAME": "testfsp4",
    "SIMPAYEE_CURRENCY": "USD",
    "SIMPAYEE_JWS_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT\n7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL\nnoSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi\n120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI\nIoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y\neW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB\nT/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z\nSikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq\nm+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2\nHfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I\nWylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0\ndQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY\nJuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB\nBKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4\nSfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj\nsuHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd\n7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm\nfW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH\ntl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/\nn3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+\nCPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K\nFfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct\n0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ\nsHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa\nuutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW\nuu1pxuWD0gTJxFkp6u4YIAhw\n-----END PRIVATE KEY-----\n",
    "SIMPAYEE_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE\nsgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw\nIpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW\nNgf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj\nvVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ\nLmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3\nFwIDAQAB\n-----END PUBLIC KEY-----\n",
    "SIMPAYEE_MSISDN": "17039811902",
    "SIMPAYEE_NAME": "payeefsp",
    "SIMPAYER_CURRENCY": "USD",
    "SIMPAYER_JWS_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6\njM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E\nvCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I\neoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7\nkx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC\nQWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/\nsAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt\nA7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj\na4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X\nKaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii\nyWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n\nxOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR\nRbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B\ndXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ\nuomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht\nvJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS\ngGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium\nsgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW\n6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR\n8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/\nkmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI\niuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX\n7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa\n+fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4\nzXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF\niNK0yCENMhSoOTtbT9tmGi0=\n-----END PRIVATE KEY-----\n",
    "SIMPAYER_MSISDN": "17039811901",
    "SIMPAYER_NAME": "payerfsp",
    "SIMPLE_ROUTING_MODE_ENABLED": true,
    "TESTFSP1_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp1-backend:3003",
    "TESTFSP1_CALLBACK_URL": "http://ml-sim-testfsp1-scheme-adapter:4000",
    "TESTFSP1_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v\ndCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG\n42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6\nNRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa\nh9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os\nxQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by\nUQIDAQAB\n-----END PUBLIC KEY-----\n",
    "TESTFSP1_SDK_TESTAPI_URL": "http://ml-sim-testfsp1-scheme-adapter:4002",
    "TESTFSP1_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp1-scheme-adapter:4002",
    "TESTFSP2_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp2-backend:3003",
    "TESTFSP2_CALLBACK_URL": "http://ml-sim-testfsp2-scheme-adapter:4000",
    "TESTFSP2_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y\nl5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5\n+ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG\nYedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H\nJa+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6\nWZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+\nAQIDAQAB\n-----END PUBLIC KEY-----",
    "TESTFSP2_SDK_TESTAPI_URL": "http://ml-sim-testfsp2-scheme-adapter:4002",
    "TESTFSP2_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp2-scheme-adapter:4002",
    "TESTFSP3_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp3-backend:3003",
    "TESTFSP3_CALLBACK_URL": "http://ml-sim-testfsp3-scheme-adapter:4000",
    "TESTFSP3_SDK_TESTAPI_URL": "http://ml-sim-testfsp3-scheme-adapter:4002",
    "TESTFSP3_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp3-scheme-adapter:4002",
    "TESTFSP4_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp4-backend:3003",
    "TESTFSP4_CALLBACK_URL": "http://ml-sim-testfsp4-scheme-adapter:4000",
    "TESTFSP4_SDK_TESTAPI_URL": "http://ml-sim-testfsp4-scheme-adapter:4002",
    "TESTFSP4_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp4-scheme-adapter:4002",
    "TEST_NOTIFICATIONS": true,
    "TTKFSP_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nDktFAP1w3ruycnE/t+/H8rDVJGPTHc8=\n-----END PRIVATE KEY-----\n",
    "WS_ASSERTION_TIMEOUT": 5000,
    "accept": "application/vnd.interoperability.parties+json;version=1.1",
    "acceptAuthorizations": "application/vnd.interoperability.authorizations+json;version=1.1",
    "acceptAuthorizationsNotSupported": "application/vnd.interoperability.authorizations+json;version=2.0",
    "acceptAuthorizationsOld": "application/vnd.interoperability.authorizations+json;version=1.0",
    "acceptBulkTransfers": "application/vnd.interoperability.bulkTransfers+json;version=1.1",
    "acceptBulkTransfersNotSupported": "application/vnd.interoperability.bulkTransfers+json;version=2.0",
    "acceptBulkTransfersOld": "application/vnd.interoperability.bulkTransfers+json;version=1.0",
    "acceptParticipants": "application/vnd.interoperability.participants+json;version=1.1",
    "acceptParticipantsNotSupported": "application/vnd.interoperability.participants+json;version=2.0",
    "acceptParticipantsOld": "application/vnd.interoperability.participants+json;version=1.0",
    "acceptParties": "application/vnd.interoperability.parties+json;version=1.1",
    "acceptPartiesNotSupported": "application/vnd.interoperability.parties+json;version=2.0",
    "acceptPartiesOld": "application/vnd.interoperability.parties+json;version=1.0",
    "acceptQuotes": "application/vnd.interoperability.quotes+json;version=1.1",
    "acceptQuotesNotSupported": "application/vnd.interoperability.quotes+json;version=2.0",
    "acceptQuotesOld": "application/vnd.interoperability.quotes+json;version=1.0",
    "acceptTransactionRequests": "application/vnd.interoperability.transactionRequests+json;version=1.1",
    "acceptTransactionRequestsNotSupported": "application/vnd.interoperability.transactionRequests+json;version=2.0",
    "acceptTransactionRequestsOld": "application/vnd.interoperability.transactionRequests+json;version=1.0",
    "acceptTransfers": "application/vnd.interoperability.transfers+json;version=1.1",
    "acceptTransfersNotSupported": "application/vnd.interoperability.transfers+json;version=2.0",
    "acceptTransfersOld": "application/vnd.interoperability.transfers+json;version=1.0",
    "accountId": "6",
    "amount": "100",
    "batchToIdValue1": "27713803066",
    "batchToIdValue2": "27713803067",
    "cgscurrency": "INR",
    "condition": "n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU",
    "contentBulkTransfers": "application/vnd.interoperability.bulkTransfers+json;version=1.1",
    "contentBulkTransfersNotSupported": "application/vnd.interoperability.bulkTransfers+json;version=2.0",
    "contentBulkTransfersOld": "application/vnd.interoperability.bulkTransfers+json;version=1.0",
    "contentType": "application/vnd.interoperability.parties+json;version=1.1",
    "contentTypeAuthorizations": "application/vnd.interoperability.authorizations+json;version=1.1",
    "contentTypeAuthorizationsNotSupported": "application/vnd.interoperability.authorizations+json;version=2.0",
    "contentTypeAuthorizationsOld": "application/vnd.interoperability.authorizations+json;version=1.0",
    "contentTypeParticipants": "application/vnd.interoperability.participants+json;version=1.1",
    "contentTypeParticipantsNotSupported": "application/vnd.interoperability.participants+json;version=2.0",
    "contentTypeParticipantsOld": "application/vnd.interoperability.participants+json;version=1.0",
    "contentTypeParties": "application/vnd.interoperability.parties+json;version=1.1",
    "contentTypePartiesNotSupported": "application/vnd.interoperability.parties+json;version=2.0",
    "contentTypePartiesOld": "application/vnd.interoperability.parties+json;version=1.0",
    "contentTypeQuotes": "application/vnd.interoperability.quotes+json;version=1.1",
    "contentTypeQuotesNotSupported": "application/vnd.interoperability.quotes+json;version=2.0",
    "contentTypeQuotesOld": "application/vnd.interoperability.quotes+json;version=1.0",
    "contentTypeTransactionRequests": "application/vnd.interoperability.transactionRequests+json;version=1.1",
    "contentTypeTransactionRequestsNotSupported": "application/vnd.interoperability.transactionRequests+json;version=2.0",
    "contentTypeTransactionRequestsOld": "application/vnd.interoperability.transactionRequests+json;version=1.0",
    "contentTypeTransfers": "application/vnd.interoperability.transfers+json;version=1.1",
    "contentTypeTransfersNotSupported": "application/vnd.interoperability.transfers+json;version=2.0",
    "contentTypeTransfersOld": "application/vnd.interoperability.transfers+json;version=1.0",
    "currency": "USD",
    "currency2": "TZS",
    "expectedAuthorizationsVersion": "1.1",
    "expectedParticipantsVersion": "1.1",
    "expectedPartiesVersion": "1.1",
    "expectedQuotesVersion": "1.1",
    "expectedTransactionRequestsVersion": "1.1",
    "expectedTransfersVersion": "1.1",
    "fromDOB": "1984-01-01",
    "fromFirstName": "Firstname-Test",
    "fromFspId": "testingtoolkitdfsp",
    "fromIdType": "MSISDN",
    "fromIdValue": "44123456789",
    "fromLastName": "Lastname-Test",
    "fromSubIdValue": "30",
    "fspiopSignature": "{\"signature\":\"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\\\",\\\"protectedHeader\\\":\\\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ\"}",
    "fundsInPrepareAmount": "",
    "fundsInPrepareTransferId": "",
    "homeTransactionId": "123ABC",
    "hubEmail": "some.email@gmail.com",
    "hub_operator": "NOT_APPLICABLE",
    "ilpPacket": "AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA",
    "invalidFulfillment": "_3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----",
    "invalidToIdType": "ACCOUNT_ID",
    "invalidToIdValue": "27713803099",
    "mobileSimPayeeFsp": "greenbankfsp",
    "mobileSimPayerFsp": "pinkbankfsp",
    "note": "test",
    "payeeIdType": "MSISDN",
    "payeeIdentifier": "17039811902",
    "payeefsp": "payeefsp",
    "payeefspEmail": "some.email@gmail.com",
    "payeefspMSISDN": "17039811907",
    "payerIdType": "MSISDN",
    "payerIdentifier": "17039811901",
    "payerfsp": "testingtoolkitdfsp",
    "payerfspEmail": "some.email@gmail.com",
    "payerfspMSISDN": "17891239876",
    "payerfspSettlementAccountBalanceAfterFundsIn": "",
    "payerfspSettlementAccountBalanceBeforeFundsIn": "",
    "payerfspSettlementAccountId": "",
    "receiverMSISDN": "27713803912",
    "settlementpayeefspNoExtensionMSISDN": "27714923918",
    "settlementtestNonExistingMSISDN": "22244803917",
    "settlementtestfsp1bankMSISDN": "27713813914",
    "settlementtestfsp2bankMSISDN": "27713813915",
    "settlementtestfsp3bankMSISDN": "27713813916",
    "settlementtestfsp4bankMSISDN": "27713813917",
    "testfsp1Email": "some.email@gmail.com",
    "testfsp1IdType": "MSISDN",
    "testfsp1Identifier": "17039811903",
    "testfsp1MSISDN": "17039811903",
    "testfsp2Email": "some.email@gmail.com",
    "testfsp2IdType": "MSISDN",
    "testfsp2Identifier": "17039811904",
    "testfsp2MSISDN": "17039811904",
    "toAccentIdDOB": "2000-01-01",
    "toAccentIdFirstName": "Seán",
    "toAccentIdFspId": "payeefsp",
    "toAccentIdLastName": "Nuñez",
    "toAccentIdMiddleName": "François",
    "toAccentIdType": "MSISDN",
    "toAccentIdValue": "97039819999",
    "toBurmeseIdDOB": "1990-01-01",
    "toBurmeseIdFirstName": "ကောင်းထက်စံ",
    "toBurmeseIdFspId": "payeefsp",
    "toBurmeseIdLastName": "ဒေါ်သန္တာထွန်",
    "toBurmeseIdMiddleName": "အောင်",
    "toBurmeseIdType": "MSISDN",
    "toBurmeseIdValue": "2224448888",
    "toFspId": "payeefsp",
    "toIdType": "MSISDN",
    "toIdValue": "27713803912",
    "toIdValueDelete": "27713803913",
    "toSubIdValue": "30",
    "validCondition": "GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM",
    "validCondition2": "kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms",
    "validFulfillment": "UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA",
    "validIlpPacket2": "AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA"
  }
}'
---
# Source: mojaloop/charts/ml-ttk-test-val-gp/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-ttk-test-val-gp-config-file-defaults
  labels:
    app.kubernetes.io/name: ml-ttk-test-val-gp
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-val-gp-15.0.0
data:
  cli-default-config.json: |
    {"logLevel":"2","mode":"outbound"}
---
# Source: mojaloop/charts/ml-ttk-test-val-gp/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-ml-ttk-test-val-gp-config-testcase-environment-file
  labels:
    app.kubernetes.io/name: ml-ttk-test-val-gp
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-ttk-test-val-gp-15.0.0
data:
  cli-testcase-environment.json: '{
  "inputValues": {
    "BASE_CENTRAL_LEDGER_ADMIN": "",
    "CALLBACK_ENDPOINT_BASE_URL": "http://ml-ml-testing-toolkit-backend:4040",
    "CENTRALAUTH_CB_FSPIOP": "http://auth-svc:4004",
    "CENTRALAUTH_NAME": "centralauth",
    "DELAY_CGS": 5000,
    "DFSPA_BACKEND_TESTAPI_URL": "http://ml-sim-tp-dfspa-backend:3003",
    "DFSPA_CALLBACK_URL": "http://ml-sim-tp-dfspa-scheme-adapter:4000",
    "DFSPA_CB_FSPIOP": "http://ml-sim-tp-dfspa-scheme-adapter:4000",
    "DFSPA_CB_THIRDPARTY": "http://ml-sim-tp-dfspa-thirdparty-sdk:4005",
    "DFSPA_NAME": "dfspa",
    "DFSPA_SDK_TESTAPI_URL": "http://ml-sim-tp-dfspa-scheme-adapter:4002",
    "DFSPA_SDK_TESTAPI_WS_URL": "ws://ml-sim-tp-dfspa-scheme-adapter:4002",
    "DFSPB_BACKEND_TESTAPI_URL": "http://ml-sim-tp-dfspb-backend:3003",
    "DFSPB_CALLBACK_URL": "http://ml-sim-tp-dfspb-scheme-adapter:4000",
    "DFSPB_CB_FSPIOP": "http://ml-sim-tp-dfspb-scheme-adapter:4000",
    "DFSPB_CB_THIRDPARTY": "http://ml-sim-tp-dfspb-thirdparty-sdk:4005",
    "DFSPB_NAME": "dfspb",
    "DFSPB_SDK_TESTAPI_URL": "http://ml-sim-tp-dfspb-scheme-adapter:4002",
    "DFSPB_SDK_TESTAPI_WS_URL": "ws://ml-sim-tp-dfspb-scheme-adapter:4002",
    "ENABLE_JWS_SIGNING": true,
    "ENABLE_JWS_VALIDATION": false,
    "ENABLE_PROTECTED_HEADERS_VALIDATION": true,
    "ENABLE_WS_ASSERTIONS": true,
    "HOST_ACCOUNT_LOOKUP_ADMIN": "http://ml-account-lookup-service-admin",
    "HOST_ACCOUNT_LOOKUP_SERVICE": "http://ml-account-lookup-service",
    "HOST_ACCOUNT_LOOKUP_SERVICE_ADMIN": "http://ml-account-lookup-service-admin",
    "HOST_BULK_ADAPTER": "http://ml-bulk-api-adapter-service",
    "HOST_CENTRAL_LEDGER": "http://ml-centralledger-service",
    "HOST_CENTRAL_SETTLEMENT": "http://ml-centralsettlement-service/v2",
    "HOST_LEGACY_SIMULATOR": "http://ml-simulator",
    "HOST_ML_API_ADAPTER": "http://ml-ml-api-adapter-service",
    "HOST_ORACLE_CONSENT": "http://consent-oracle:3000",
    "HOST_QUOTING_SERVICE": "http://ml-quoting-service",
    "HOST_SIMULATOR": "http://ml-simulator",
    "HOST_TRANSACTION_REQUESTS_SERVICE": "http://ml-transaction-requests-service",
    "HUB_OPERATOR_BEARER_TOKEN": "NOT_APPLICABLE",
    "NET_DEBIT_CAP": "50000",
    "NORESPONSE_NAME": "noresponsepayeefsp",
    "NORESPONSE_SIMPAYEE_NAME": "noresponsepayeefsp",
    "ON_US_TRANSFERS_ENABLED": false,
    "PAYEEFSP_BACKEND_TESTAPI_URL": "http://ml-sim-payeefsp-backend:3003",
    "PAYEEFSP_CALLBACK_URL": "http://ml-sim-payeefsp-scheme-adapter:4000",
    "PAYEEFSP_SDK_TESTAPI_URL": "http://ml-sim-payeefsp-scheme-adapter:4002",
    "PAYEEFSP_SDK_TESTAPI_WS_URL": "ws://ml-sim-payeefsp-scheme-adapter:4002",
    "PAYERFSP_BACKEND_TESTAPI_URL": "http://ml-sim-payerfsp-backend:3003",
    "PAYERFSP_CALLBACK_URL": "http://ml-sim-payerfsp-scheme-adapter:4000",
    "PAYERFSP_SDK_TESTAPI_URL": "http://ml-sim-payerfsp-scheme-adapter:4002",
    "PAYERFSP_SDK_TESTAPI_WS_URL": "ws://ml-sim-payerfsp-scheme-adapter:4002",
    "PISP_BACKEND_TESTAPI_URL": "http://ml-sim-tp-pisp-backend:3003",
    "PISP_CALLBACK_URL": "http://ml-sim-tp-pisp-scheme-adapter:4000",
    "PISP_CB_FSPIOP": "http://ml-sim-tp-pisp-scheme-adapter:4000",
    "PISP_CB_THIRDPARTY": "http://ml-sim-tp-pisp-thirdparty-sdk:4005",
    "PISP_NAME": "pisp",
    "PISP_SDK_TESTAPI_URL": "http://ml-sim-tp-pisp-scheme-adapter:4002",
    "PISP_SDK_TESTAPI_WS_URL": "ws://ml-sim-tp-pisp-scheme-adapter:4002",
    "PISP_THIRDPARTY_SDK_OUTBOUND_URL": "http://ml-sim-tp-pisp-thirdparty-sdk:4006",
    "SIM1_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nDgoQeSng2kt5Z6mkoDIQTs7nEflb4w==\n-----END PRIVATE KEY-----\n",
    "SIM1_MSISDN": "17039811903",
    "SIM1_NAME": "testfsp1",
    "SIM2_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nTv4G862WYeqD1fdyZaKQ3b9fAQEq1g==\n-----END PRIVATE KEY-----\n",
    "SIM2_MSISDN": "17039811904",
    "SIM2_NAME": "testfsp2",
    "SIM3_MSISDN": "17891239873",
    "SIM3_NAME": "testfsp3",
    "SIM4_MSISDN": "17891239872",
    "SIM4_NAME": "testfsp4",
    "SIMPAYEE_CURRENCY": "USD",
    "SIMPAYEE_JWS_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT\n7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL\nnoSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi\n120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI\nIoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y\neW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB\nT/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z\nSikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq\nm+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2\nHfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I\nWylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0\ndQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY\nJuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB\nBKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4\nSfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj\nsuHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd\n7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm\nfW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH\ntl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/\nn3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+\nCPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K\nFfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct\n0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ\nsHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa\nuutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW\nuu1pxuWD0gTJxFkp6u4YIAhw\n-----END PRIVATE KEY-----\n",
    "SIMPAYEE_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE\nsgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw\nIpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW\nNgf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj\nvVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ\nLmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3\nFwIDAQAB\n-----END PUBLIC KEY-----\n",
    "SIMPAYEE_MSISDN": "17039811902",
    "SIMPAYEE_NAME": "payeefsp",
    "SIMPAYER_CURRENCY": "USD",
    "SIMPAYER_JWS_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6\njM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E\nvCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I\neoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7\nkx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC\nQWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/\nsAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt\nA7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj\na4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X\nKaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii\nyWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n\nxOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR\nRbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B\ndXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ\nuomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht\nvJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS\ngGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium\nsgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW\n6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR\n8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/\nkmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI\niuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX\n7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa\n+fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4\nzXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF\niNK0yCENMhSoOTtbT9tmGi0=\n-----END PRIVATE KEY-----\n",
    "SIMPAYER_MSISDN": "17039811901",
    "SIMPAYER_NAME": "payerfsp",
    "SIMPLE_ROUTING_MODE_ENABLED": true,
    "TESTFSP1_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp1-backend:3003",
    "TESTFSP1_CALLBACK_URL": "http://ml-sim-testfsp1-scheme-adapter:4000",
    "TESTFSP1_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v\ndCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG\n42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6\nNRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa\nh9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os\nxQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by\nUQIDAQAB\n-----END PUBLIC KEY-----\n",
    "TESTFSP1_SDK_TESTAPI_URL": "http://ml-sim-testfsp1-scheme-adapter:4002",
    "TESTFSP1_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp1-scheme-adapter:4002",
    "TESTFSP2_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp2-backend:3003",
    "TESTFSP2_CALLBACK_URL": "http://ml-sim-testfsp2-scheme-adapter:4000",
    "TESTFSP2_JWS_PUB_KEY": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y\nl5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5\n+ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG\nYedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H\nJa+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6\nWZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+\nAQIDAQAB\n-----END PUBLIC KEY-----",
    "TESTFSP2_SDK_TESTAPI_URL": "http://ml-sim-testfsp2-scheme-adapter:4002",
    "TESTFSP2_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp2-scheme-adapter:4002",
    "TESTFSP3_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp3-backend:3003",
    "TESTFSP3_CALLBACK_URL": "http://ml-sim-testfsp3-scheme-adapter:4000",
    "TESTFSP3_SDK_TESTAPI_URL": "http://ml-sim-testfsp3-scheme-adapter:4002",
    "TESTFSP3_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp3-scheme-adapter:4002",
    "TESTFSP4_BACKEND_TESTAPI_URL": "http://ml-sim-testfsp4-backend:3003",
    "TESTFSP4_CALLBACK_URL": "http://ml-sim-testfsp4-scheme-adapter:4000",
    "TESTFSP4_SDK_TESTAPI_URL": "http://ml-sim-testfsp4-scheme-adapter:4002",
    "TESTFSP4_SDK_TESTAPI_WS_URL": "ws://ml-sim-testfsp4-scheme-adapter:4002",
    "TEST_NOTIFICATIONS": true,
    "TTKFSP_JWS_KEY": "-----BEGIN PRIVATE KEY-----\n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\nDktFAP1w3ruycnE/t+/H8rDVJGPTHc8=\n-----END PRIVATE KEY-----\n",
    "WS_ASSERTION_TIMEOUT": 5000,
    "accept": "application/vnd.interoperability.parties+json;version=1.1",
    "acceptAuthorizations": "application/vnd.interoperability.authorizations+json;version=1.1",
    "acceptAuthorizationsNotSupported": "application/vnd.interoperability.authorizations+json;version=2.0",
    "acceptAuthorizationsOld": "application/vnd.interoperability.authorizations+json;version=1.0",
    "acceptBulkTransfers": "application/vnd.interoperability.bulkTransfers+json;version=1.1",
    "acceptBulkTransfersNotSupported": "application/vnd.interoperability.bulkTransfers+json;version=2.0",
    "acceptBulkTransfersOld": "application/vnd.interoperability.bulkTransfers+json;version=1.0",
    "acceptParticipants": "application/vnd.interoperability.participants+json;version=1.1",
    "acceptParticipantsNotSupported": "application/vnd.interoperability.participants+json;version=2.0",
    "acceptParticipantsOld": "application/vnd.interoperability.participants+json;version=1.0",
    "acceptParties": "application/vnd.interoperability.parties+json;version=1.1",
    "acceptPartiesNotSupported": "application/vnd.interoperability.parties+json;version=2.0",
    "acceptPartiesOld": "application/vnd.interoperability.parties+json;version=1.0",
    "acceptQuotes": "application/vnd.interoperability.quotes+json;version=1.1",
    "acceptQuotesNotSupported": "application/vnd.interoperability.quotes+json;version=2.0",
    "acceptQuotesOld": "application/vnd.interoperability.quotes+json;version=1.0",
    "acceptTransactionRequests": "application/vnd.interoperability.transactionRequests+json;version=1.1",
    "acceptTransactionRequestsNotSupported": "application/vnd.interoperability.transactionRequests+json;version=2.0",
    "acceptTransactionRequestsOld": "application/vnd.interoperability.transactionRequests+json;version=1.0",
    "acceptTransfers": "application/vnd.interoperability.transfers+json;version=1.1",
    "acceptTransfersNotSupported": "application/vnd.interoperability.transfers+json;version=2.0",
    "acceptTransfersOld": "application/vnd.interoperability.transfers+json;version=1.0",
    "accountId": "6",
    "amount": "100",
    "batchToIdValue1": "27713803066",
    "batchToIdValue2": "27713803067",
    "cgscurrency": "INR",
    "condition": "n2cwS3w4ekGlvNYoXg2uBAqssu3FCoXjADE2mziU5jU",
    "contentBulkTransfers": "application/vnd.interoperability.bulkTransfers+json;version=1.1",
    "contentBulkTransfersNotSupported": "application/vnd.interoperability.bulkTransfers+json;version=2.0",
    "contentBulkTransfersOld": "application/vnd.interoperability.bulkTransfers+json;version=1.0",
    "contentType": "application/vnd.interoperability.parties+json;version=1.1",
    "contentTypeAuthorizations": "application/vnd.interoperability.authorizations+json;version=1.1",
    "contentTypeAuthorizationsNotSupported": "application/vnd.interoperability.authorizations+json;version=2.0",
    "contentTypeAuthorizationsOld": "application/vnd.interoperability.authorizations+json;version=1.0",
    "contentTypeParticipants": "application/vnd.interoperability.participants+json;version=1.1",
    "contentTypeParticipantsNotSupported": "application/vnd.interoperability.participants+json;version=2.0",
    "contentTypeParticipantsOld": "application/vnd.interoperability.participants+json;version=1.0",
    "contentTypeParties": "application/vnd.interoperability.parties+json;version=1.1",
    "contentTypePartiesNotSupported": "application/vnd.interoperability.parties+json;version=2.0",
    "contentTypePartiesOld": "application/vnd.interoperability.parties+json;version=1.0",
    "contentTypeQuotes": "application/vnd.interoperability.quotes+json;version=1.1",
    "contentTypeQuotesNotSupported": "application/vnd.interoperability.quotes+json;version=2.0",
    "contentTypeQuotesOld": "application/vnd.interoperability.quotes+json;version=1.0",
    "contentTypeTransactionRequests": "application/vnd.interoperability.transactionRequests+json;version=1.1",
    "contentTypeTransactionRequestsNotSupported": "application/vnd.interoperability.transactionRequests+json;version=2.0",
    "contentTypeTransactionRequestsOld": "application/vnd.interoperability.transactionRequests+json;version=1.0",
    "contentTypeTransfers": "application/vnd.interoperability.transfers+json;version=1.1",
    "contentTypeTransfersNotSupported": "application/vnd.interoperability.transfers+json;version=2.0",
    "contentTypeTransfersOld": "application/vnd.interoperability.transfers+json;version=1.0",
    "currency": "USD",
    "currency2": "TZS",
    "expectedAuthorizationsVersion": "1.1",
    "expectedParticipantsVersion": "1.1",
    "expectedPartiesVersion": "1.1",
    "expectedQuotesVersion": "1.1",
    "expectedTransactionRequestsVersion": "1.1",
    "expectedTransfersVersion": "1.1",
    "fromDOB": "1984-01-01",
    "fromFirstName": "Firstname-Test",
    "fromFspId": "testingtoolkitdfsp",
    "fromIdType": "MSISDN",
    "fromIdValue": "44123456789",
    "fromLastName": "Lastname-Test",
    "fromSubIdValue": "30",
    "fspiopSignature": "{\"signature\":\"iU4GBXSfY8twZMj1zXX1CTe3LDO8Zvgui53icrriBxCUF_wltQmnjgWLWI4ZUEueVeOeTbDPBZazpBWYvBYpl5WJSUoXi14nVlangcsmu2vYkQUPmHtjOW-yb2ng6_aPfwd7oHLWrWzcsjTF-S4dW7GZRPHEbY_qCOhEwmmMOnE1FWF1OLvP0dM0r4y7FlnrZNhmuVIFhk_pMbEC44rtQmMFv4pm4EVGqmIm3eyXz0GkX8q_O1kGBoyIeV_P6RRcZ0nL6YUVMhPFSLJo6CIhL2zPm54Qdl2nVzDFWn_shVyV0Cl5vpcMJxJ--O_Zcbmpv6lxqDdygTC782Ob3CNMvg\\\",\\\"protectedHeader\\\":\\\"eyJhbGciOiJSUzI1NiIsIkZTUElPUC1VUkkiOiIvdHJhbnNmZXJzIiwiRlNQSU9QLUhUVFAtTWV0aG9kIjoiUE9TVCIsIkZTUElPUC1Tb3VyY2UiOiJPTUwiLCJGU1BJT1AtRGVzdGluYXRpb24iOiJNVE5Nb2JpbGVNb25leSIsIkRhdGUiOiIifQ\"}",
    "fundsInPrepareAmount": "",
    "fundsInPrepareTransferId": "",
    "homeTransactionId": "123ABC",
    "hubEmail": "some.email@gmail.com",
    "hub_operator": "NOT_APPLICABLE",
    "ilpPacket": "AYIDBQAAAAAAACcQJGcucGF5ZWVmc3AubXNpc2RuLnt7cmVjZWl2ZXJtc2lzZG59fYIC1GV5SjBjbUZ1YzJGamRHbHZia2xrSWpvaVptVXhNREU0Wm1NdE1EaGxZeTAwWWpJM0xUbGpZalF0TnpjMk9URTFNR00zT1dKaklpd2ljWFZ2ZEdWSlpDSTZJbVpsTVRBeE9HWmpMVEE0WldNdE5HSXlOeTA1WTJJMExUYzNOamt4TlRCak56bGlZeUlzSW5CaGVXVmxJanA3SW5CaGNuUjVTV1JKYm1adklqcDdJbkJoY25SNVNXUlVlWEJsSWpvaVRWTkpVMFJPSWl3aWNHRnlkSGxKWkdWdWRHbG1hV1Z5SWpvaWUzdHlaV05sYVhabGNrMVRTVk5FVG4xOUlpd2labk53U1dRaU9pSndZWGxsWldaemNDSjlmU3dpY0dGNVpYSWlPbnNpY0dGeWRIbEpaRWx1Wm04aU9uc2ljR0Z5ZEhsSlpGUjVjR1VpT2lKTlUwbFRSRTRpTENKd1lYSjBlVWxrWlc1MGFXWnBaWElpT2lJeU56Y3hNemd3TXprd05TSXNJbVp6Y0Vsa0lqb2ljR0Y1WlhKbWMzQWlmU3dpY0dWeWMyOXVZV3hKYm1adklqcDdJbU52YlhCc1pYaE9ZVzFsSWpwN0ltWnBjbk4wVG1GdFpTSTZJazFoZEhNaUxDSnNZWE4wVG1GdFpTSTZJa2hoWjIxaGJpSjlMQ0prWVhSbFQyWkNhWEowYUNJNklqRTVPRE10TVRBdE1qVWlmWDBzSW1GdGIzVnVkQ0k2ZXlKaGJXOTFiblFpT2lJeE1EQWlMQ0pqZFhKeVpXNWplU0k2SWxWVFJDSjlMQ0owY21GdWMyRmpkR2x2YmxSNWNHVWlPbnNpYzJObGJtRnlhVzhpT2lKVVVrRk9VMFpGVWlJc0ltbHVhWFJwWVhSdmNpSTZJbEJCV1VWU0lpd2lhVzVwZEdsaGRHOXlWSGx3WlNJNklrTlBUbE5WVFVWU0luMTkA",
    "invalidFulfillment": "_3cco-YN5OGpRKVWV3n6x6uNpBTH9tYUdOYmHA-----",
    "invalidToIdType": "ACCOUNT_ID",
    "invalidToIdValue": "27713803099",
    "mobileSimPayeeFsp": "greenbankfsp",
    "mobileSimPayerFsp": "pinkbankfsp",
    "note": "test",
    "payeeIdType": "MSISDN",
    "payeeIdentifier": "17039811902",
    "payeefsp": "payeefsp",
    "payeefspEmail": "some.email@gmail.com",
    "payeefspMSISDN": "17039811907",
    "payerIdType": "MSISDN",
    "payerIdentifier": "17039811901",
    "payerfsp": "testingtoolkitdfsp",
    "payerfspEmail": "some.email@gmail.com",
    "payerfspMSISDN": "17891239876",
    "payerfspSettlementAccountBalanceAfterFundsIn": "",
    "payerfspSettlementAccountBalanceBeforeFundsIn": "",
    "payerfspSettlementAccountId": "",
    "receiverMSISDN": "27713803912",
    "settlementpayeefspNoExtensionMSISDN": "27714923918",
    "settlementtestNonExistingMSISDN": "22244803917",
    "settlementtestfsp1bankMSISDN": "27713813914",
    "settlementtestfsp2bankMSISDN": "27713813915",
    "settlementtestfsp3bankMSISDN": "27713813916",
    "settlementtestfsp4bankMSISDN": "27713813917",
    "testfsp1Email": "some.email@gmail.com",
    "testfsp1IdType": "MSISDN",
    "testfsp1Identifier": "17039811903",
    "testfsp1MSISDN": "17039811903",
    "testfsp2Email": "some.email@gmail.com",
    "testfsp2IdType": "MSISDN",
    "testfsp2Identifier": "17039811904",
    "testfsp2MSISDN": "17039811904",
    "toAccentIdDOB": "2000-01-01",
    "toAccentIdFirstName": "Seán",
    "toAccentIdFspId": "payeefsp",
    "toAccentIdLastName": "Nuñez",
    "toAccentIdMiddleName": "François",
    "toAccentIdType": "MSISDN",
    "toAccentIdValue": "97039819999",
    "toBurmeseIdDOB": "1990-01-01",
    "toBurmeseIdFirstName": "ကောင်းထက်စံ",
    "toBurmeseIdFspId": "payeefsp",
    "toBurmeseIdLastName": "ဒေါ်သန္တာထွန်",
    "toBurmeseIdMiddleName": "အောင်",
    "toBurmeseIdType": "MSISDN",
    "toBurmeseIdValue": "2224448888",
    "toFspId": "payeefsp",
    "toIdType": "MSISDN",
    "toIdValue": "27713803912",
    "toIdValueDelete": "27713803913",
    "toSubIdValue": "30",
    "validCondition": "GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM",
    "validCondition2": "kPLCKM62VY2jbekuw3apCTBg5zk_mVs9DD8-XpljQms",
    "validFulfillment": "UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA",
    "validIlpPacket2": "AYIC9AAAAAAAABdwHWcucGF5ZWVmc3AubXNpc2RuLjIyNTU2OTk5MTI1ggLKZXlKMGNtRnVjMkZqZEdsdmJrbGtJam9pWmpRMFltUmtOV010WXpreE1DMDBZVGt3TFRoa05qa3RaR0ppWVRaaVl6aGxZVFpqSWl3aWNYVnZkR1ZKWkNJNklqVTBaRFZtTURsaUxXRTBOMlF0TkRCa05pMWhZVEEzTFdFNVkyWXpZbUl5TkRsaFpDSXNJbkJoZVdWbElqcDdJbkJoY25SNVNXUkpibVp2SWpwN0luQmhjblI1U1dSVWVYQmxJam9pVFZOSlUwUk9JaXdpY0dGeWRIbEpaR1Z1ZEdsbWFXVnlJam9pTWpJMU5UWTVPVGt4TWpVaUxDSm1jM0JKWkNJNkluQmhlV1ZsWm5Od0luMTlMQ0p3WVhsbGNpSTZleUp3WVhKMGVVbGtTVzVtYnlJNmV5SndZWEowZVVsa1ZIbHdaU0k2SWsxVFNWTkVUaUlzSW5CaGNuUjVTV1JsYm5ScFptbGxjaUk2SWpJeU5UQTNNREE0TVRneElpd2labk53U1dRaU9pSndZWGxsY21aemNDSjlMQ0p3WlhKemIyNWhiRWx1Wm04aU9uc2lZMjl0Y0d4bGVFNWhiV1VpT25zaVptbHljM1JPWVcxbElqb2lUV0YwY3lJc0lteGhjM1JPWVcxbElqb2lTR0ZuYldGdUluMHNJbVJoZEdWUFprSnBjblJvSWpvaU1UazRNeTB4TUMweU5TSjlmU3dpWVcxdmRXNTBJanA3SW1GdGIzVnVkQ0k2SWpZd0lpd2lZM1Z5Y21WdVkza2lPaUpWVTBRaWZTd2lkSEpoYm5OaFkzUnBiMjVVZVhCbElqcDdJbk5qWlc1aGNtbHZJam9pVkZKQlRsTkdSVklpTENKcGJtbDBhV0YwYjNJaU9pSlFRVmxGVWlJc0ltbHVhWFJwWVhSdmNsUjVjR1VpT2lKRFQwNVRWVTFGVWlKOWZRAA"
  }
}'
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-jws-public-keys.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-sim-jws-public-keys
  labels:
    app.kubernetes.io/name: sim-jws-public-keys
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-sim-payeefsp-rules
  labels:
    app.kubernetes.io/name: sim-payeefsp-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-sim-payerfsp-rules
  labels:
    app.kubernetes.io/name: sim-payerfsp-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-sim-testfsp1-rules
  labels:
    app.kubernetes.io/name: sim-testfsp1-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-sim-testfsp2-rules
  labels:
    app.kubernetes.io/name: sim-testfsp2-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-sim-testfsp3-rules
  labels:
    app.kubernetes.io/name: sim-testfsp3-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-sim-testfsp4-rules
  labels:
    app.kubernetes.io/name: sim-testfsp4-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/quoting-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-quoting-service-config
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-13.0.0
data:
  default.json: "\n{\n  \"HOSTNAME\": \"http://quoting-service.local\",\n  \"LISTEN_ADDRESS\": \"0.0.0.0\",\n  \"PORT\": 3002,\n  \"PROTOCOL_VERSIONS\": {\n  \"ACCEPT\": {\n    \"DEFAULT\": \"1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  },\n  \"CONTENT\": {\n    \"DEFAULT\": \"1.1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  }\n},\n  \"SWITCH_ENDPOINT\": \"http://ml-centralledger-service:80\",\n  \"AMOUNT\": {\n    \"PRECISION\": 18,\n    \"SCALE\": 4\n  },\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"ml-centralledger-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"oyMxgZChuu\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"SIMPLE_ROUTING_MODE\": true,\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": true,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  },\n  \"API_DOCUMENTATION_ENDPOINTS\": true\n}\n"
  rules.json: "[]"
---
# Source: mojaloop/charts/quoting-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-quoting-service-sidecar
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-13.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"quoting-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/simulator/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-simulator-config
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-12.0.0
data:
  LOG_LEVEL: "info"
  PARTIES_ENDPOINT: http://ml-account-lookup-service
  QUOTES_ENDPOINT: http://ml-quoting-service
  TRANSFERS_ENDPOINT: http://ml-ml-api-adapter-service
  BULK_TRANSFERS_ENDPOINT: http://ml-bulk-api-adapter-service
  TRANSACTION_REQUESTS_ENDPOINT: http://ml-transaction-requests-service
  TRANSFERS_FULFIL_RESPONSE_DISABLED: "false"
  TRANSFERS_FULFILMENT: "XoSz1cL0tljJSCp_VtIYmPNw-zFUgGfbUqf69AagUzY"
  TRANSFERS_CONDITION: "HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks"
  TRANSFERS_ILPPACKET: "AQAAAAAAAADIEHByaXZhdGUucGF5ZWVmc3CCAiB7InRyYW5zYWN0aW9uSWQiOiIyZGY3NzRlMi1mMWRiLTRmZjctYTQ5NS0yZGRkMzdhZjdjMmMiLCJxdW90ZUlkIjoiMDNhNjA1NTAtNmYyZi00NTU2LThlMDQtMDcwM2UzOWI4N2ZmIiwicGF5ZWUiOnsicGFydHlJZEluZm8iOnsicGFydHlJZFR5cGUiOiJNU0lTRE4iLCJwYXJ0eUlkZW50aWZpZXIiOiIyNzcxMzgwMzkxMyIsImZzcElkIjoicGF5ZWVmc3AifSwicGVyc29uYWxJbmZvIjp7ImNvbXBsZXhOYW1lIjp7fX19LCJwYXllciI6eyJwYXJ0eUlkSW5mbyI6eyJwYXJ0eUlkVHlwZSI6Ik1TSVNETiIsInBhcnR5SWRlbnRpZmllciI6IjI3NzEzODAzOTExIiwiZnNwSWQiOiJwYXllcmZzcCJ9LCJwZXJzb25hbEluZm8iOnsiY29tcGxleE5hbWUiOnt9fX0sImFtb3VudCI6eyJjdXJyZW5jeSI6IlVTRCIsImFtb3VudCI6IjIwMCJ9LCJ0cmFuc2FjdGlvblR5cGUiOnsic2NlbmFyaW8iOiJERVBPU0lUIiwic3ViU2NlbmFyaW8iOiJERVBPU0lUIiwiaW5pdGlhdG9yIjoiUEFZRVIiLCJpbml0aWF0b3JUeXBlIjoiQ09OU1VNRVIiLCJyZWZ1bmRJbmZvIjp7fX19"
  MOCK_JWS_SIGNATURE: "abcJjvNrkyK2KBieDUbGfhaBUn75aDUATNF4joqA8OLs4QgSD7i6EO8BIdy6Crph3LnXnTM20Ai1Z6nt0zliS_qPPLU9_vi6qLb15FOkl64DQs9hnfoGeo2tcjZJ88gm19uLY_s27AJqC1GH1B8E2emLrwQMDMikwQcYvXoyLrL7LL3CjaLMKdzR7KTcQi1tCK4sNg0noIQLpV3eA61kess"
  METRICS_DISABLED: "false"
  METRICS_PREFIX: "moja_"
  METRICS_TIMEOUT: "5000"
  METRICS_SERVICENAME: simulator
---
# Source: mojaloop/charts/transaction-requests-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-transaction-requests-service-config
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-12.0.0
data:
  default.json: "{\n  \"PORT\": 4000,\n  \"PROTOCOL_VERSIONS\": {\n  \"ACCEPT\": {\n    \"DEFAULT\": \"1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  },\n  \"CONTENT\": {\n    \"DEFAULT\": \"1.1\",\n    \"VALIDATELIST\": [\n      \"1\",\n      \"1.0\",\n      \"1.1\"\n    ]\n  }\n},\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"SWITCH_ENDPOINT\": \"http://ml-centralledger-service:80\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": true,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n        \"serviceName\": \"transaction-requests\"\n        }\n      }\n    }\n  }\n}"
---
# Source: mojaloop/charts/transaction-requests-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-transaction-requests-service-sidecar
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-12.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"transaction-requests-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"ml-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-13.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-admin
      protocol: TCP
      name: http-admin
  selector:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-13.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-api
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: "ml-account-lookup-mysql-metrics"
  labels:
    app: ml-account-lookup-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9104
  selector:
    app: ml-account-lookup-mysql
    release: "ml"
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/service-percona.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-account-lookup-mysql
  labels:
    app: ml-account-lookup-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
spec:
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: ml-account-lookup-mysql
    release: "ml"
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/service-repl.yaml
apiVersion: v1
kind: Service
metadata:
  name: "ml-account-lookup-mysql-repl"
  labels:
    app: ml-account-lookup-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
spec:
  clusterIP: None
  ports:
  - name: galera
    port: 4567
  - name: state-xfer
    port: 4568
  - name: state-snap
    port: 4444
  selector:
    app: ml-account-lookup-mysql
    release: "ml"
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-cep-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: cep-mongodb
    helm.sh/chart: mongodb-12.1.20
    app.kubernetes.io/instance: ml
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: "mongodb"
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: cep-mongodb
    app.kubernetes.io/instance: ml
    app.kubernetes.io/component: mongodb
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-12.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-zookeeper-headless
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: ml
    heritage: Helm
spec:
  clusterIP: None
  ports:
    - name: client
      port: 2181
      targetPort: client
      protocol: TCP
    - name: election
      port: 3888
      targetPort: election
      protocol: TCP
    - name: server
      port: 2888
      targetPort: server
      protocol: TCP
  selector:
    app: zookeeper
    release: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: ml
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: client
      port: 2181
      protocol: TCP
      targetPort: client
  selector:
    app: zookeeper
    release: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/service-brokers.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-kafka
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: ml
spec:
  ports:
  - name: broker
    port: 9092
    targetPort: kafka
  selector:
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-kafka-headless
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: ml
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - name: broker
    port: 9092
  clusterIP: None
  selector:
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: "ml-centralledger-mysql-metrics"
  labels:
    app: ml-centralledger-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9104
  selector:
    app: ml-centralledger-mysql
    release: "ml"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/service-percona.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralledger-mysql
  labels:
    app: ml-centralledger-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
spec:
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: ml-centralledger-mysql
    release: "ml"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/service-repl.yaml
apiVersion: v1
kind: Service
metadata:
  name: "ml-centralledger-mysql-repl"
  labels:
    app: ml-centralledger-mysql
    chart: "mysql-1.0.8"
    release: "ml"
    heritage: "Helm"
spec:
  clusterIP: None
  ports:
  - name: galera
    port: 4567
  - name: state-xfer
    port: 4568
  - name: state-snap
    port: 4444
  selector:
    app: ml-centralledger-mysql
    release: "ml"
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralsettlement-handler-deferredsettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-14.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralsettlement-handler-grosssettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-14.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralsettlement-handler-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-14.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-14.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-12.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: 
  selector:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-12.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: 
  selector:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-backend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-ml-testing-toolkit-backend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-backend-15.0.0
spec:
  type: ClusterIP
  ports:
    - port: 4040
      targetPort: 4040
      name: spec-api
    - port: 5050
      targetPort: 5050
      name: admin-api
  selector:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-ml-testing-toolkit-frontend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-frontend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-frontend-15.0.0
spec:
  type: ClusterIP
  ports:
    - port: 6060
      targetPort: 6060
      name: web-ui
  selector:
    app.kubernetes.io/name: ml-testing-toolkit-frontend
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-payeefsp-backend
  labels:
    app.kubernetes.io/name: sim-payeefsp-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-payeefsp-backend
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-payeefsp-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-payeefsp-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-payeefsp-scheme-adapter
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-payeefsp-cache
  labels:
    app.kubernetes.io/name: sim-payeefsp-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: sim-payeefsp-cache
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-payerfsp-backend
  labels:
    app.kubernetes.io/name: sim-payerfsp-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-payerfsp-backend
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-payerfsp-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-payerfsp-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-payerfsp-scheme-adapter
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-payerfsp-cache
  labels:
    app.kubernetes.io/name: sim-payerfsp-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: sim-payerfsp-cache
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp1-backend
  labels:
    app.kubernetes.io/name: sim-testfsp1-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-testfsp1-backend
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp1-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-testfsp1-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-testfsp1-scheme-adapter
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp1-cache
  labels:
    app.kubernetes.io/name: sim-testfsp1-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: sim-testfsp1-cache
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp2-backend
  labels:
    app.kubernetes.io/name: sim-testfsp2-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-testfsp2-backend
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp2-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-testfsp2-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-testfsp2-scheme-adapter
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp2-cache
  labels:
    app.kubernetes.io/name: sim-testfsp2-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: sim-testfsp2-cache
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp3-backend
  labels:
    app.kubernetes.io/name: sim-testfsp3-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-testfsp3-backend
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp3-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-testfsp3-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-testfsp3-scheme-adapter
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp3-cache
  labels:
    app.kubernetes.io/name: sim-testfsp3-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: sim-testfsp3-cache
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp4-backend
  labels:
    app.kubernetes.io/name: sim-testfsp4-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-testfsp4-backend
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp4-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-testfsp4-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: sim-testfsp4-scheme-adapter
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-sim-testfsp4-cache
  labels:
    app.kubernetes.io/name: sim-testfsp4-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: sim-testfsp4-cache
      app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/quoting-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-13.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3002
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-12.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: "http"
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/transaction-requests-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-12.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 4000
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: ml
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: account-lookup-service-admin
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: account-lookup-service-admin
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: account-lookup-service-admin-13.0.0
      annotations:
        checksum/config: 5174f2bfc5089e62225fc86f84973f20c855bf280e60f894130b0ae5e7a01596
      ## Currently not supported
      #
      #   prometheus.io/port: "4001"
      #   prometheus.io/scrape: "true"
      #
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until mysql -h ml-account-lookup-mysql -P 3306 -u account_lookup --password=OdonPianoX  account_lookup   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
        - name: run-migration
          image: mojaloop/account-lookup-service:v14.0.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - npm run migrate
          volumeMounts:
            - name: ml-account-lookup-service-admin-config-volume
              mountPath: /opt/app/config
      containers:
        - name: account-lookup-service-admin
          image: mojaloop/account-lookup-service:v14.0.0
          imagePullPolicy: IfNotPresent
          command: ["node", "src/index.js", "server", "--admin"]
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          ports:
            - name: http-admin
              containerPort: 4001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http-admin
          readinessProbe:
            httpGet:
              path: /health
              port: http-admin
          resources:
            {}
          volumeMounts:
          - name: ml-account-lookup-service-admin-config-volume
            mountPath: /opt/app/config
        - name: account-lookup-service-admin-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4003
          readinessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-account-lookup-service-admin-sidecar-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-account-lookup-service-admin-config-volume
          configMap:
            name: ml-account-lookup-service-admin-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: ml-account-lookup-service-admin-sidecar-volume
          configMap:
            name: ml-account-lookup-service-admin-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: account-lookup-service
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: account-lookup-service
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: account-lookup-service-13.0.0
      annotations:
        checksum/config: a604aab191d00a2baf1985717b0c60cc85992b201b22b9eaad5ce065f2f08efe
        checksum/secret-jws: 2ed7a3b582b14c461e0dc6d0cb1f91f2696d0d3dc96722c42b1822c883204b5b
      ## Currently not supported
      #
      #   prometheus.io/port: "4002"
      #   prometheus.io/scrape: "true"
      #
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until mysql -h ml-account-lookup-mysql -P 3306 -u account_lookup --password=OdonPianoX  account_lookup   -e 'select * from oracleEndpoint;' ; do echo waiting for MySQL; sleep 2; done;"
      containers:
        - name: account-lookup-service
          image: "mojaloop/account-lookup-service:v14.0.0"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/index.js", "server", "--api"]
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          ports:
            - name: http-api
              containerPort: 4002
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http-api
          readinessProbe:
            httpGet:
              path: /health
              port: http-api
          resources:
            {}
          volumeMounts:
          - name: ml-account-lookup-service-config-volume
            mountPath: /opt/app/config
          - name: jws-signing-key
            mountPath: /opt/app/secrets
        - name: account-lookup-service-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-account-lookup-service-sidecar-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-account-lookup-service-config-volume
          configMap:
            name: ml-account-lookup-service-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: jws-signing-key
          secret:
            secretName: ml-account-lookup-service-jws-signing-key
        - name: ml-account-lookup-service-sidecar-volume
          configMap:
            name: ml-account-lookup-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-cep-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: cep-mongodb
    helm.sh/chart: mongodb-12.1.20
    app.kubernetes.io/instance: ml
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: cep-mongodb
      app.kubernetes.io/instance: ml
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cep-mongodb
        helm.sh/chart: mongodb-12.1.20
        app.kubernetes.io/instance: ml
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: ml-cep-mongodb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: cep-mongodb
                    app.kubernetes.io/instance: ml
                    app.kubernetes.io/component: mongodb
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        sysctls: []
      
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:5.0.9-debian-10-r15
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MONGODB_EXTRA_USERNAMES
              value: "mojaloop"
            - name: MONGODB_EXTRA_DATABASES
              value: "mojaloop"
            - name: MONGODB_EXTRA_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: ml-cep-mongodb
                  key: mongodb-passwords
            - name: MONGODB_ROOT_USER
              value: "root"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ml-cep-mongodb
                  key: mongodb-root-password
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_PORT_NUMBER
              value: "27017"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
            - name: common-scripts
              mountPath: /bitnami/scripts
      volumes:
        - name: common-scripts
          configMap:
            name: ml-cep-mongodb-common-scripts
            defaultMode: 0550
        - name: datadir
          emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centraleventprocessor
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centraleventprocessor
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centraleventprocessor-12.0.0
      annotations:
        checksum/config: a914616d2ed296d12aab36dbf456b72371ac300633657599757114286546ccca
    spec:
      initContainers:
        - name: wait-for-mongodb
          image: bitnami/mongodb:6.0.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "mongosh mongodb://ml-cep-mongodb:27017 --eval \"db.adminCommand('ping')\""
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:

      containers:
        - name: centraleventprocessor
          image: "mojaloop/central-event-processor:v12.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 3080
            initialDelaySeconds: 30
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3080
            initialDelaySeconds: 30
            periodSeconds: 15
          volumeMounts:
            - name: ml-centraleventprocessor-config-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
      volumes:
        - name: ml-centraleventprocessor-config-volume
          configMap:
            name: ml-centraleventprocessor-config
            items:
              - key: default.json
                path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-admin-transfer
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-admin-transfer
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-admin-transfer-13.0.0
      annotations:
        checksum/config: ca4ca38b4f3b4edc3e18a7407ace5fbdb5e74ba88a6a5dd75295ac631e110467
        checksum/secret: 66ce5749a1b9062d0253328bb1b8ebb23f76bde4a9f3d0622c95ed9e2d71e528
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-admin-transfer
          image: "mojaloop/central-ledger:v15.1.2.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--admin"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralledger-handler-admin-transfer-config-volume
            mountPath: /opt/app/config
      volumes:
        - name: ml-centralledger-handler-admin-transfer-config-volume
          configMap:
            name: ml-centralledger-handler-admin-transfer-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-timeout
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-timeout
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-timeout-13.0.0
      annotations:
        checksum/config: d3033594f009e9105671505616b4d70df12015ae69a9c55972b68c8b3b4cee8c
        checksum/secret: ed0850e26baed85ca41c3833fde5b913c946986d15ba71480899264b61d615a0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-timeout
          image: "mojaloop/central-ledger:v15.1.2.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--timeout"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralledger-handler-timeout-config-volume
            mountPath: /opt/app/config
        - name: centralledger-handler-timeout-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-centralledger-handler-timeout-sidecar-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-centralledger-handler-timeout-config-volume
          configMap:
            name: ml-centralledger-handler-timeout-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: ml-centralledger-handler-timeout-sidecar-volume
          configMap:
            name: ml-centralledger-handler-timeout-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-fulfil
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-fulfil
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-fulfil-13.0.0
      annotations:
        checksum/config: 97867c38bea0cab96aa37d1020551948c150763ef032c34ddd45fbeaadbe3240
        checksum/secret: a264432d94a04f3f5150b6f0375132b4b91f78fc1c273191a4ebd564a9b72fc4
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-fulfil
          image: "mojaloop/central-ledger:v15.1.2.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--fulfil"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralledger-handler-transfer-fulfil-config-volume
            mountPath: /opt/app/config
        - name: centralledger-handler-transfer-fulfil-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-centralledger-handler-transfer-fulfil-sidecar-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-centralledger-handler-transfer-fulfil-config-volume
          configMap:
            name: ml-centralledger-handler-transfer-fulfil-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: ml-centralledger-handler-transfer-fulfil-sidecar-volume
          configMap:
            name: ml-centralledger-handler-transfer-fulfil-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-get
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-get
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-get-13.0.0
      annotations:
        checksum/config: 6de73f7be2e666d49d97811fac2a96dd9f5ebb62a31bf481704f21b4e6798a6a
        checksum/secret: 087865767ed60267cbe0c12ed4222e386fe383f763797b69821dc5c8e943106e
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-get
          image: "mojaloop/central-ledger:v15.1.2.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--get"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralledger-handler-transfer-get-config-volume
            mountPath: /opt/app/config
      volumes:
        - name: ml-centralledger-handler-transfer-get-config-volume
          configMap:
            name: ml-centralledger-handler-transfer-get-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-position
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-position
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-position-13.0.0
      annotations:
        checksum/config: 9ade40180dbc5d8c30c548ed169014f0aa2e10749e87941ef244ef69f30d5ce4
        checksum/secret: b3faf8732a786b842145cdf901d948472f0fde6014155c50770fc5180697fbbe
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-position
          image: "mojaloop/central-ledger:v15.1.2.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--position"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralledger-handler-transfer-position-config-volume
            mountPath: /opt/app/config
        - name: centralledger-handler-transfer-position-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-centralledger-handler-transfer-position-sidecar-volum
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-centralledger-handler-transfer-position-config-volume
          configMap:
            name: ml-centralledger-handler-transfer-position-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: ml-centralledger-handler-transfer-position-sidecar-volum
          configMap:
            name: ml-centralledger-handler-transfer-position-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-prepare
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-prepare
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-prepare-13.0.0
      annotations:
        checksum/config: 89f5a190d302f1a902ed5c693cd4d7ea32ce7d1f76a253149fae393cf2520b9c
        checksum/secret: 7b7c4728baa6bdb916d208d024323666c653c6abcee12e170957ca1feffa43e9
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-prepare
          image: "mojaloop/central-ledger:v15.1.2.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--prepare"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralledger-handler-transfer-prepare-config-volume
            mountPath: /opt/app/config
        - name: centralledger-handler-transfer-prepare-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-centralledger-handler-transfer-prepare-sidecar-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-centralledger-handler-transfer-prepare-config-volume
          configMap:
            name: ml-centralledger-handler-transfer-prepare-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: ml-centralledger-handler-transfer-prepare-sidecar-volume
          configMap:
            name: ml-centralledger-handler-transfer-prepare-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-service
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-service
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-service-13.0.0
      annotations:
        checksum/config: e03c9bbe4a22d367768ff82fdd42316984f806efd9d71737d47f74112af87a47
        checksum/secret: af8f38ff3aceab1aa15196576187739c174e4c8692ac4ab30e0fda694b8525af
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
        - name: run-migration
          image: mojaloop/central-ledger:v15.1.2.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - npm run migrate
          env:
            - name: "CLEDG_MIGRATIONS__RUN_DATA_MIGRATIONS"
              value: "true"
          volumeMounts:
            - name: ml-centralledger-service-config-volume
              mountPath: /opt/app/config
      containers:
        - name: centralledger-service
          image: mojaloop/central-ledger:v15.1.2.1
          imagePullPolicy: IfNotPresent
          command: ["node", "src/api/index.js"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralledger-service-config-volume
            mountPath: /opt/app/config
      volumes:
        - name: ml-centralledger-service-config-volume
          configMap:
            name: ml-centralledger-service-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/deployment-kafka-exporter.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-kafka-exporter
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-monitor
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: ml
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka-monitor
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: ml
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9308"
      labels:
        helm.sh/chart: kafka-0.21.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: kafka-monitor
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: ml
    spec:
      containers:
      - image: "danielqsj/kafka-exporter:v1.0.1"
        name: kafka-exporter
        args:
          - --kafka.server=ml-kafka:9092
          - --web.listen-address=:9308
        ports:
          - containerPort: 9308
        resources:
          {}
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-deferredsettlement/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralsettlement-handler-deferredsettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-deferredsettlement-14.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 14.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-handler-deferredsettlement-14.0.0
      annotations:
        checksum/config: 4b62554aa5873a949ab4e4b0b433fc4b8caf23517e8085ac5340a410fa77833c
        checksum/secret: c5ddc0f9445a38dceb99be57f5864d3deb4acd1ffb16b04814a87540048cd0e8
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralsettlement-handler-deferredsettlement
          image: "mojaloop/central-settlement:v15.0.0"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "h", "--deferredSettlement"]
          ports:
            - name: http-api
              containerPort: 3007
          readinessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralsettlement-handler-deferredsettlement-cfg-vol
            mountPath: /opt/app/config
          - name: ml-centralsettlement-handler-deferredsettlement-rules-vol
            mountPath: "/opt/app/scripts/grosssettlementTemp"
        - name: centralsettlement-handler-deferredsettlement-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-centralsettlement-handler-deferredsettlement-sidecar-vol
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-centralsettlement-handler-deferredsettlement-cfg-vol
          configMap:
            name: ml-centralsettlement-handler-deferredsettlement-config
            items:
            - key: default.json
              path: default.json
    #            - key: knexfile.js
    #              path: knexfile.js
        - name: ml-centralsettlement-handler-deferredsettlement-sidecar-vol
          configMap:
            name: ml-centralsettlement-handler-deferredsettlement-sidecar
            items:
            - key: default.json
              path: default.json
        - name: ml-centralsettlement-handler-deferredsettlement-rules-vol
          emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-grosssettlement/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralsettlement-handler-grosssettlement
  labels:
    app.kubernetes.io/name: centralsettlement-handler-grosssettlement
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-grosssettlement-14.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement-handler-grosssettlement
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement-handler-grosssettlement
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 14.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-handler-grosssettlement-14.0.0
      annotations:
        checksum/config: c86b41eb32b076c18eca44763faf19f6279cf9ec186e5e70590b503c2f1dec33
        checksum/secret: cca3881db0877c1d2d3f7b791c2bba35997c027992d7b070893ec89e1ab66b52
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralsettlement-handler-grosssettlement
          image: "mojaloop/central-settlement:v15.0.0"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "h", "--grossSettlement"]
          ports:
            - name: http-api
              containerPort: 3007
          readinessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralsettlement-handler-grosssettlement-cfg-vol
            mountPath: /opt/app/config
          - name: ml-centralsettlement-handler-grosssettlement-rules-vol
            mountPath: "/opt/app/scripts/grosssettlementTemp"
        - name: centralsettlement-handler-grosssettlement-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-centralsettlement-handler-grosssettlement-sidecar-vol
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-centralsettlement-handler-grosssettlement-cfg-vol
          configMap:
            name: ml-centralsettlement-handler-grosssettlement-config
            items:
            - key: default.json
              path: default.json
    #            - key: knexfile.js
    #              path: knexfile.js
        - name: ml-centralsettlement-handler-grosssettlement-sidecar-vol
          configMap:
            name: ml-centralsettlement-handler-grosssettlement-sidecar
            items:
            - key: default.json
              path: default.json
        - name: ml-centralsettlement-handler-grosssettlement-rules-vol
          emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-handler-rules/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralsettlement-handler-rules
  labels:
    app.kubernetes.io/name: centralsettlement-handler-rules
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-handler-rules-14.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement-handler-rules
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement-handler-rules
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 14.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-handler-rules-14.0.0
      annotations:
        checksum/config: 6b4e6271bad95a7fd606625dcdf0ff34a8f9af3781904a4c47c9a1b26bd22e86
        checksum/secret: 4a61e119290d25b5d8f8672e7b352030209c49c03f45cc255bed5e2861fe63d3
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralsettlement-handler-rules
          image: "mojaloop/central-settlement:v15.0.0"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "h", "--rules"]
          ports:
            - name: http-api
              containerPort: 3007
          readinessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralsettlement-handler-rules-cfg-vol
            mountPath: /opt/app/config
          - name: ml-centralsettlement-handler-rules-rules-vol
            mountPath: "/opt/app/scripts/grosssettlementTemp"
        - name: centralsettlement-handler-rules-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-centralsettlement-handler-rules-sidecar-vol
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-centralsettlement-handler-rules-cfg-vol
          configMap:
            name: ml-centralsettlement-handler-rules-config
            items:
            - key: default.json
              path: default.json
    #            - key: knexfile.js
    #              path: knexfile.js
        - name: ml-centralsettlement-handler-rules-sidecar-vol
          configMap:
            name: ml-centralsettlement-handler-rules-sidecar
            items:
            - key: default.json
              path: default.json
        - name: ml-centralsettlement-handler-rules-rules-vol
          configMap:
            name: ml-centralsettlement-handler-rules-rules
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-14.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement-service
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement-service
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 14.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-service-14.0.0
      annotations:
        checksum/config: d477c799565b175bd1f9b7b0db301be400a0f9ebf21c09058f752b4eb1368399
        checksum/secret: 3b1cfaa22b3f914f45058763f6da62674e92752ac9e2ecce26de720430593117
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralsettlement-service
          image: "mojaloop/central-settlement:v15.0.0"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/api/index.js"]
          ports:
            - name: http-api
              containerPort: 3007
          readinessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /v2/health
              port: 3007
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-centralsettlement-service-cfg-vol
            mountPath: /opt/app/config
          - name: ml-centralsettlement-service-rules-vol
            mountPath: "/opt/app/scripts/grosssettlementTemp"
        - name: centralsettlement-service-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-centralsettlement-service-sidecar-vol
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-centralsettlement-service-cfg-vol
          configMap:
            name: ml-centralsettlement-service-config
            items:
            - key: default.json
              path: default.json
    #            - key: knexfile.js
    #              path: knexfile.js
        - name: ml-centralsettlement-service-sidecar-vol
          configMap:
            name: ml-centralsettlement-service-sidecar
            items:
            - key: default.json
              path: default.json
        - name: ml-centralsettlement-service-rules-vol
          emptyDir: {}
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-api-adapter-handler-notification
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-api-adapter-handler-notification
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-api-adapter-handler-notification-12.0.0
      annotations:
        checksum/config: 798efbcc5f399388d3e58b945c98d9ade44b55463a915ef2efe9a19e65a1e5fa
        checksum/secret-jws: b56f2c5d526c3948d7fd643138ed97833e19ec485c2d8b982ab74673734d40e2
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: ml-api-adapter-handler-notification
          image: "mojaloop/ml-api-adapter:v14.0.0"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/handlers/index.js", "handler", "--notification"]
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-ml-api-adapter-handler-notification-config-volume
              mountPath: /opt/app/config
            - name: jws-signing-key
              mountPath: /opt/app/secrets
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
        - name: ml-api-adapter-handler-notification-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-ml-api-adapter-handler-notification-sidecar-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: jws-signing-key
          secret:
            secretName: ml-ml-api-adapter-handler-notification-jws-signing-key
        - name: ml-ml-api-adapter-handler-notification-config-volume
          configMap:
            name: ml-ml-api-adapter-handler-notification-config
            items:
              - key: default.json
                path: default.json
        - name: ml-ml-api-adapter-handler-notification-sidecar-volume
          configMap:
            name: ml-ml-api-adapter-handler-notification-sidecar
            items:
              - key: default.json
                path: default.json
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-api-adapter-service
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-api-adapter-service
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-api-adapter-service-12.0.0
      annotations:
        checksum/config: 42009cacc0bb4150726ca40c06781cce70d3ffd74d390cd10b01e47597c2e6db
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-kafka
          image: solsson/kafka:2.8.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server ml-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: ml-api-adapter-service
          image: "mojaloop/ml-api-adapter:v14.0.0"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/api/index.js"]
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-ml-api-adapter-service-config-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
        - name: ml-api-adapter-service-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-ml-api-adapter-service-sidecar-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-ml-api-adapter-service-config-volume
          configMap:
            name: ml-ml-api-adapter-service-config
            items:
            - key: default.json
              path: default.json
        - name: ml-ml-api-adapter-service-sidecar-volume
          configMap:
            name: ml-ml-api-adapter-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-frontend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-ml-testing-toolkit-frontend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-frontend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-frontend-15.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-testing-toolkit-frontend
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-testing-toolkit-frontend
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 15.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-testing-toolkit-frontend-15.0.0
      annotations:
        checksum/config: f4314bc0709d6cd9707e7e60f9be1fb97f1996d8e4ddd5f7a39bb3efac80a221
    spec:
      containers:
        - name: ml-testing-toolkit-frontend
          image: "mojaloop/ml-testing-toolkit-ui:v15.0.0"
          imagePullPolicy: IfNotPresent
          command: ["sh", "/usr/share/nginx/start.sh"]
          ports:
            - containerPort: 6060
          envFrom:
          - configMapRef:
              name: ml-ml-testing-toolkit-frontend-config
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-payeefsp-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-payeefsp-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-payeefsp-scheme-adapter
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-payeefsp-scheme-adapter
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
        checksum/config-jws-public-keys: 97f958f4765537cf94ba61260be2353278061c86c7127e6cec62f89a6aab839e
        checksum/secrets: 849dd31df18dc222c880887b75ab736095d561cefb3782c961e4b1934865aa90
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: ml-sim-payeefsp-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: ml-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: ml-sim-payeefsp-tls-creds
      initContainers:
      - name: wait-for-cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - "-c"
          - until redis-cli -u redis://ml-sim-payeefsp-cache:6379 ping; do echo waiting for Redis; sleep 2; done;
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v18.0.2"
        imagePullPolicy: IfNotPresent
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /secrets/jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        ## This is defined by the config.schemeAdapter.env.CACHE_HOST and config.schemeAdapter.env.CACHE_PORT as "redis://%s:%s" with defaults if one or neither are defined.
        - name: CACHE_URL
          value: "redis://ml-sim-payeefsp-cache:6379"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: BACKEND_ENDPOINT
          value: ml-sim-payeefsp-backend:3000
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "payeefsp"
        ## Map environment values from values.yaml
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "true"
        - name: ALS_ENDPOINT
          value: "ml-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "ml-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "ml-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/secrets/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "ml-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.1,quotes=1.1,participants=1.1,parties=1.1,transactionRequests=1.1"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "ml-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "ml-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-payeefsp-backend
  labels:
    app.kubernetes.io/name: sim-payeefsp-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-payeefsp-backend
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-payeefsp-backend
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v13.0.1"
        imagePullPolicy: IfNotPresent
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: OUTBOUND_ENDPOINT
          value: "http://ml-sim-payeefsp-scheme-adapter:4001"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: SCHEME_NAME
          value: "ml-sim-payeefsp"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "payeefsp"
        ## Map environment values from values.yaml
        - name: CA_CERT_PATH
          value: "/secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: ":memory:"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "../rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "/secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "/secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: ":memory:"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: ml-sim-rules
          mountPath: /opt/app/rules/
      volumes:
      - name: ml-sim-rules
        configMap:
          name: ml-sim-payeefsp-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-payeefsp-cache
  labels:
    app.kubernetes.io/name: sim-payeefsp-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-payeefsp-cache
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-payeefsp-cache
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-payerfsp-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-payerfsp-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-payerfsp-scheme-adapter
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-payerfsp-scheme-adapter
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
        checksum/config-jws-public-keys: 97f958f4765537cf94ba61260be2353278061c86c7127e6cec62f89a6aab839e
        checksum/secrets: 849dd31df18dc222c880887b75ab736095d561cefb3782c961e4b1934865aa90
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: ml-sim-payerfsp-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: ml-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: ml-sim-payerfsp-tls-creds
      initContainers:
      - name: wait-for-cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - "-c"
          - until redis-cli -u redis://ml-sim-payerfsp-cache:6379 ping; do echo waiting for Redis; sleep 2; done;
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v18.0.2"
        imagePullPolicy: IfNotPresent
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /secrets/jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        ## This is defined by the config.schemeAdapter.env.CACHE_HOST and config.schemeAdapter.env.CACHE_PORT as "redis://%s:%s" with defaults if one or neither are defined.
        - name: CACHE_URL
          value: "redis://ml-sim-payerfsp-cache:6379"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: BACKEND_ENDPOINT
          value: ml-sim-payerfsp-backend:3000
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "payerfsp"
        ## Map environment values from values.yaml
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "true"
        - name: ALS_ENDPOINT
          value: "ml-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "ml-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "ml-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/secrets/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "ml-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.1,quotes=1.1,participants=1.1,parties=1.1,transactionRequests=1.1"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "ml-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "ml-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-payerfsp-backend
  labels:
    app.kubernetes.io/name: sim-payerfsp-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-payerfsp-backend
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-payerfsp-backend
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v13.0.1"
        imagePullPolicy: IfNotPresent
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: OUTBOUND_ENDPOINT
          value: "http://ml-sim-payerfsp-scheme-adapter:4001"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: SCHEME_NAME
          value: "ml-sim-payerfsp"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "payerfsp"
        ## Map environment values from values.yaml
        - name: CA_CERT_PATH
          value: "/secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: ":memory:"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "../rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "/secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "/secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: ":memory:"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: ml-sim-rules
          mountPath: /opt/app/rules/
      volumes:
      - name: ml-sim-rules
        configMap:
          name: ml-sim-payerfsp-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-payerfsp-cache
  labels:
    app.kubernetes.io/name: sim-payerfsp-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-payerfsp-cache
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-payerfsp-cache
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp1-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-testfsp1-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp1-scheme-adapter
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp1-scheme-adapter
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
        checksum/config-jws-public-keys: 97f958f4765537cf94ba61260be2353278061c86c7127e6cec62f89a6aab839e
        checksum/secrets: 849dd31df18dc222c880887b75ab736095d561cefb3782c961e4b1934865aa90
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: ml-sim-testfsp1-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: ml-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: ml-sim-testfsp1-tls-creds
      initContainers:
      - name: wait-for-cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - "-c"
          - until redis-cli -u redis://ml-sim-testfsp1-cache:6379 ping; do echo waiting for Redis; sleep 2; done;
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v18.0.2"
        imagePullPolicy: IfNotPresent
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /secrets/jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        ## This is defined by the config.schemeAdapter.env.CACHE_HOST and config.schemeAdapter.env.CACHE_PORT as "redis://%s:%s" with defaults if one or neither are defined.
        - name: CACHE_URL
          value: "redis://ml-sim-testfsp1-cache:6379"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: BACKEND_ENDPOINT
          value: ml-sim-testfsp1-backend:3000
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "testfsp1"
        ## Map environment values from values.yaml
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "true"
        - name: ALS_ENDPOINT
          value: "ml-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "ml-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "ml-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/secrets/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "ml-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.1,quotes=1.1,participants=1.1,parties=1.1,transactionRequests=1.1"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "ml-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "ml-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp1-backend
  labels:
    app.kubernetes.io/name: sim-testfsp1-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp1-backend
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp1-backend
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v13.0.1"
        imagePullPolicy: IfNotPresent
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: OUTBOUND_ENDPOINT
          value: "http://ml-sim-testfsp1-scheme-adapter:4001"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: SCHEME_NAME
          value: "ml-sim-testfsp1"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "testfsp1"
        ## Map environment values from values.yaml
        - name: CA_CERT_PATH
          value: "/secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: ":memory:"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "../rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "/secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "/secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: ":memory:"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: ml-sim-rules
          mountPath: /opt/app/rules/
      volumes:
      - name: ml-sim-rules
        configMap:
          name: ml-sim-testfsp1-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp1-cache
  labels:
    app.kubernetes.io/name: sim-testfsp1-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp1-cache
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp1-cache
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp2-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-testfsp2-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp2-scheme-adapter
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp2-scheme-adapter
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
        checksum/config-jws-public-keys: 97f958f4765537cf94ba61260be2353278061c86c7127e6cec62f89a6aab839e
        checksum/secrets: 849dd31df18dc222c880887b75ab736095d561cefb3782c961e4b1934865aa90
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: ml-sim-testfsp2-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: ml-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: ml-sim-testfsp2-tls-creds
      initContainers:
      - name: wait-for-cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - "-c"
          - until redis-cli -u redis://ml-sim-testfsp2-cache:6379 ping; do echo waiting for Redis; sleep 2; done;
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v18.0.2"
        imagePullPolicy: IfNotPresent
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /secrets/jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        ## This is defined by the config.schemeAdapter.env.CACHE_HOST and config.schemeAdapter.env.CACHE_PORT as "redis://%s:%s" with defaults if one or neither are defined.
        - name: CACHE_URL
          value: "redis://ml-sim-testfsp2-cache:6379"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: BACKEND_ENDPOINT
          value: ml-sim-testfsp2-backend:3000
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "testfsp2"
        ## Map environment values from values.yaml
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "true"
        - name: ALS_ENDPOINT
          value: "ml-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "ml-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "ml-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/secrets/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "ml-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.1,quotes=1.1,participants=1.1,parties=1.1,transactionRequests=1.1"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "ml-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "ml-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp2-backend
  labels:
    app.kubernetes.io/name: sim-testfsp2-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp2-backend
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp2-backend
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v13.0.1"
        imagePullPolicy: IfNotPresent
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: OUTBOUND_ENDPOINT
          value: "http://ml-sim-testfsp2-scheme-adapter:4001"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: SCHEME_NAME
          value: "ml-sim-testfsp2"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "testfsp2"
        ## Map environment values from values.yaml
        - name: CA_CERT_PATH
          value: "/secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: ":memory:"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "../rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "/secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "/secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: ":memory:"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: ml-sim-rules
          mountPath: /opt/app/rules/
      volumes:
      - name: ml-sim-rules
        configMap:
          name: ml-sim-testfsp2-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp2-cache
  labels:
    app.kubernetes.io/name: sim-testfsp2-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp2-cache
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp2-cache
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp3-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-testfsp3-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp3-scheme-adapter
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp3-scheme-adapter
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
        checksum/config-jws-public-keys: 97f958f4765537cf94ba61260be2353278061c86c7127e6cec62f89a6aab839e
        checksum/secrets: 849dd31df18dc222c880887b75ab736095d561cefb3782c961e4b1934865aa90
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: ml-sim-testfsp3-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: ml-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: ml-sim-testfsp3-tls-creds
      initContainers:
      - name: wait-for-cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - "-c"
          - until redis-cli -u redis://ml-sim-testfsp3-cache:6379 ping; do echo waiting for Redis; sleep 2; done;
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v18.0.2"
        imagePullPolicy: IfNotPresent
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /secrets/jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        ## This is defined by the config.schemeAdapter.env.CACHE_HOST and config.schemeAdapter.env.CACHE_PORT as "redis://%s:%s" with defaults if one or neither are defined.
        - name: CACHE_URL
          value: "redis://ml-sim-testfsp3-cache:6379"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: BACKEND_ENDPOINT
          value: ml-sim-testfsp3-backend:3000
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "testfsp3"
        ## Map environment values from values.yaml
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "true"
        - name: ALS_ENDPOINT
          value: "ml-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "ml-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "ml-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/secrets/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "ml-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.1,quotes=1.1,participants=1.1,parties=1.1,transactionRequests=1.1"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "ml-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "ml-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp3-backend
  labels:
    app.kubernetes.io/name: sim-testfsp3-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp3-backend
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp3-backend
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v13.0.1"
        imagePullPolicy: IfNotPresent
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: OUTBOUND_ENDPOINT
          value: "http://ml-sim-testfsp3-scheme-adapter:4001"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: SCHEME_NAME
          value: "ml-sim-testfsp3"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "testfsp3"
        ## Map environment values from values.yaml
        - name: CA_CERT_PATH
          value: "/secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: ":memory:"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "../rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "/secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "/secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: ":memory:"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: ml-sim-rules
          mountPath: /opt/app/rules/
      volumes:
      - name: ml-sim-rules
        configMap:
          name: ml-sim-testfsp3-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp3-cache
  labels:
    app.kubernetes.io/name: sim-testfsp3-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp3-cache
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp3-cache
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp4-scheme-adapter
  labels:
    app.kubernetes.io/name: sim-testfsp4-scheme-adapter
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp4-scheme-adapter
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp4-scheme-adapter
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
        checksum/config-jws-public-keys: 97f958f4765537cf94ba61260be2353278061c86c7127e6cec62f89a6aab839e
        checksum/secrets: 849dd31df18dc222c880887b75ab736095d561cefb3782c961e4b1934865aa90
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: ml-sim-testfsp4-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: ml-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: ml-sim-testfsp4-tls-creds
      initContainers:
      - name: wait-for-cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - "-c"
          - until redis-cli -u redis://ml-sim-testfsp4-cache:6379 ping; do echo waiting for Redis; sleep 2; done;
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v18.0.2"
        imagePullPolicy: IfNotPresent
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /secrets/jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        ## This is defined by the config.schemeAdapter.env.CACHE_HOST and config.schemeAdapter.env.CACHE_PORT as "redis://%s:%s" with defaults if one or neither are defined.
        - name: CACHE_URL
          value: "redis://ml-sim-testfsp4-cache:6379"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: BACKEND_ENDPOINT
          value: ml-sim-testfsp4-backend:3000
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "testfsp4"
        ## Map environment values from values.yaml
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "true"
        - name: ALS_ENDPOINT
          value: "ml-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "ml-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "ml-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/secrets/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "ml-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.1,quotes=1.1,participants=1.1,parties=1.1,transactionRequests=1.1"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "ml-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "ml-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp4-backend
  labels:
    app.kubernetes.io/name: sim-testfsp4-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp4-backend
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp4-backend
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
      annotations:
        checksum/config-rules: dd351755f9042ece948c009ecef67e63468a4e5349748e13f42dfae65ac0954a
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v13.0.1"
        imagePullPolicy: IfNotPresent
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: OUTBOUND_ENDPOINT
          value: "http://ml-sim-testfsp4-scheme-adapter:4001"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: SCHEME_NAME
          value: "ml-sim-testfsp4"
        ## We only define this if it is not defined in config.schemeAdapter.env, otherwise we may have duplicate env values!
        - name: DFSP_ID
          value: "testfsp4"
        ## Map environment values from values.yaml
        - name: CA_CERT_PATH
          value: "/secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: ":memory:"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "../rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "/secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "/secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: ":memory:"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: ml-sim-rules
          mountPath: /opt/app/rules/
      volumes:
      - name: ml-sim-rules
        configMap:
          name: ml-sim-testfsp4-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-sim-testfsp4-cache
  labels:
    app.kubernetes.io/name: sim-testfsp4-cache
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sim-testfsp4-cache
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sim-testfsp4-cache
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: "14.0.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-14.0.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/quoting-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quoting-service
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: quoting-service
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 13.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: quoting-service-13.0.0
      annotations:
        checksum/config: 957e1d9c159322f1cb2b24862ab93b4e4b1e40a2548b6e64e99a8f5e03725e7c
        checksum/secret: 61940e0d101dbb78a17ca404753c1577087d3b77137afacb82317cb356f034bd
        checksum/secret-jws: a73f2143f0ac2d28fc9126d9efc15ecf0aa657922265d6390fbb4c70ee64f4ae
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:8.0.30
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h ml-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
      containers:
        - name: quoting-service
          image: "mojaloop/quoting-service:v15.0.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-api
              containerPort: 3002
          readinessProbe:
            httpGet:
              path: /health
              port: 3002
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3002
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: 
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
          volumeMounts:
          - name: ml-quoting-service-config-volume
            mountPath: /opt/app/config
          - name: jws-signing-key
            mountPath: /opt/app/secrets
        - name: quoting-service-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-quoting-service-sidecar-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: info
      volumes:
        - name: jws-signing-key
          secret:
            secretName: ml-quoting-service-jws-signing-key
        - name: ml-quoting-service-config-volume
          configMap:
            name: ml-quoting-service-config
            items:
            - key: default.json
              path: default.json
#            - key: knexfile.js
#              path: knexfile.js
            - key: rules.json
              path: rules.json
        - name: ml-quoting-service-sidecar-volume
          configMap:
            name: ml-quoting-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: simulator
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: simulator
        app.kubernetes.io/instance: ml
      annotations:
        checksum/config: 82703eeb6ce6131ed4e969257bf9f726813fb623b26be629cf23bb0daa145c40
        prometheus.io/port: "8444"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: simulator
          image: "mojaloop/simulator:v12.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8444
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 8444
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 8444
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: LOG_LEVEL
            - name: PARTIES_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: PARTIES_ENDPOINT
            - name: QUOTES_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: QUOTES_ENDPOINT
            - name: TRANSFERS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: TRANSFERS_ENDPOINT
            - name: BULK_TRANSFERS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: BULK_TRANSFERS_ENDPOINT
            - name: TRANSACTION_REQUESTS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: TRANSACTION_REQUESTS_ENDPOINT
            - name: TRANSFERS_FULFIL_RESPONSE_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: TRANSFERS_FULFIL_RESPONSE_DISABLED
            - name: TRANSFERS_FULFILMENT
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: TRANSFERS_FULFILMENT
            - name: TRANSFERS_CONDITION
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: TRANSFERS_CONDITION
            - name: TRANSFERS_ILPPACKET
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: TRANSFERS_ILPPACKET
            - name: MOCK_JWS_SIGNATURE
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: MOCK_JWS_SIGNATURE
            - name: METRICS_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: METRICS_DISABLED
            - name: METRICS_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: METRICS_PREFIX
            - name: METRICS_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: METRICS_TIMEOUT
            - name: METRICS_SERVICENAME
              valueFrom:
                configMapKeyRef:
                  name: ml-simulator-config
                  key: METRICS_SERVICENAME
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojasim"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "false"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: log,trace
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
---
# Source: mojaloop/charts/transaction-requests-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-12.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: transaction-requests-service
      app.kubernetes.io/instance: ml
  template:
    metadata:
      labels:
        app.kubernetes.io/name: transaction-requests-service
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 12.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: transaction-requests-service-12.0.0
      annotations:
        checksum/config: adbf70012d71b49130d4857cfbccbeba046e0f04df6657229b9f11a222b3107c
        checksum/secret: cc98cc462de17874a7283008c1d1fa27ba422b452c634ba22108ecb6bd943157
    spec:
      initContainers: []
      containers:
        - name: transaction-requests-service
          image: "mojaloop/transaction-requests-service:v14.0.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "src/index.js", "api"]
          ports:
            - name: http-api
              containerPort: 4000
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: 
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: 
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: 
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 
          volumeMounts:
            - name: ml-transaction-requests-service-config-volume
              mountPath: /opt/app/config
        - name: transaction-requests-service-sidecar
          image: "mojaloop/event-sidecar:v12.0.0"
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: ml-transaction-requests-service-sidecar-volume
              mountPath: /opt/app/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: ml-transaction-requests-service-config-volume
          configMap:
            name: ml-transaction-requests-service-config
            items:
              - key: default.json
                path: default.json
        - name: ml-transaction-requests-service-sidecar-volume
          configMap:
            name: ml-transaction-requests-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ml-account-lookup-mysql
  labels:
    app: ml-account-lookup-mysql
    release: "ml"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ml-account-lookup-mysql
      release: "ml"
  serviceName: ml-account-lookup-mysql
  template:
    metadata:
      labels:
        app: ml-account-lookup-mysql
        chart: "mysql-1.0.8"
        release: "ml"
        heritage: "Helm"
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.25.0"
        resources:
          null
        imagePullPolicy: IfNotPresent
        command:
        - "rm"
        - "-fr"
        - "/var/lib/mysql/lost+found"
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      containers:
      - name: database
        image: "percona/percona-xtradb-cluster:5.7.19"
        imagePullPolicy: "IfNotPresent"
        command:
        - "/bin/bash"
        - "/startup-scripts/entrypoint.sh"
        resources:
          null
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ml-account-lookup-mysql
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ml-account-lookup-mysql
              key: mysql-password
        - name: XTRABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ml-account-lookup-mysql
              key: xtrabackup-password
        - name: MYSQL_USER
          value: "account_lookup"
        - name: MYSQL_DATABASE
          value: "account_lookup"
        - name: ALLOW_ROOT_FROM
          value: "%"
        - name: CLUSTER_NAME
          value: ml-account-lookup-mysql
        - name: SHORT_CLUSTER_NAME
          value: ml-account-lookup-mysql
        - name: K8S_SERVICE_NAME
          value: ml-account-lookup-mysql-repl
        - name: PXC_STRICT_MODE
          value: "ENFORCING"
        - name: DEBUG
          value: "true"
        ports:
        - name: mysql
          containerPort: 3306
        - name: galera-repl
          containerPort: 4567
        - name: state-transfer
          containerPort: 4568
        - name: state-snapshot
          containerPort: 4444
        livenessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - "mysqladmin ping || test -e /var/lib/mysql/sst_in_progress"
          initialDelaySeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command: ["mysql", "--defaults-extra-file=/root/.my.cnf", "-h", "127.0.0.1", "-e", "SELECT 1"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-startup-scripts
          mountPath: /startup-scripts
        - name: mysql-config-files
          mountPath: /etc/mysql/conf.d
        - name: slash-root
          mountPath: /root
        - name: var-log
          mountPath: /var/log
      
      - name: "logs"
        image: "busybox:1.25.0"
        resources:
          null
        imagePullPolicy: IfNotPresent
        command:
        - "tail"
        - "-f"
        - "/var/log/mysqld.log"
        volumeMounts:
        - name: var-log
          mountPath: /var/log
      
      
      - name: metrics
        image: prom/mysqld-exporter:v0.11.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: 9104
        volumeMounts:
        - name: slash-root
          mountPath: /root
        livenessProbe:
          exec:
            command: ["wget","-q","-O","-","localhost:9104"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command: ["wget","-q","-O","-","localhost:9104"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
      
      volumes:
      - name: slash-root
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      - name: mysql-config-files
        configMap:
          name: ml-account-lookup-mysql-config-files
      - name: mysql-startup-scripts
        configMap:
          name: ml-account-lookup-mysql-startup-scripts
      - name: mysql-data
        emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ml-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: ml
    heritage: Helm
    component: server
spec:
  serviceName: ml-zookeeper-headless
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
      release: ml
      component: server
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zookeeper
        release: ml
        component: server
    spec:
      terminationGracePeriodSeconds: 1800
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:

        - name: zookeeper
          image: "zookeeper:3.5.5"
          imagePullPolicy: IfNotPresent
          command: 
             - "/bin/bash"
             - "-xec"
             - "/config-scripts/run"
          ports:
            - name: client
              containerPort: 2181
              protocol: TCP
            - name: election
              containerPort: 3888
              protocol: TCP
            - name: server
              containerPort: 2888
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - sh
                - /config-scripts/ok
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - sh
                - /config-scripts/ready
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          env:
            - name: ZK_REPLICAS
              value: "1"
            - name: JMXAUTH
              value: "false"
            - name: JMXDISABLE
              value: "false"
            - name: JMXPORT
              value: "1099"
            - name: JMXSSL
              value: "false"
            - name: ZK_HEAP_SIZE
              value: "1G"
            - name: ZK_SYNC_LIMIT
              value: "10"
            - name: ZK_TICK_TIME
              value: "2000"
            - name: ZOO_AUTOPURGE_PURGEINTERVAL
              value: "0"
            - name: ZOO_AUTOPURGE_SNAPRETAINCOUNT
              value: "3"
            - name: ZOO_INIT_LIMIT
              value: "5"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOO_PORT
              value: "2181"
            - name: ZOO_STANDALONE_ENABLED
              value: "false"
            - name: ZOO_TICK_TIME
              value: "2000"
          resources:
            {}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config-scripts
      volumes:
        - name: config
          configMap:
            name: ml-zookeeper
            defaultMode: 0555
        - name: data
          emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ml-kafka
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: ml
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka-broker
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: ml
  serviceName: ml-kafka-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: OnDelete
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
      labels:
        helm.sh/chart: kafka-0.21.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: kafka-broker
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: ml
    spec:
      containers:
      - name: metrics
        image: "solsson/kafka-prometheus-jmx-exporter@sha256:a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8"
        command:
        - sh
        - -exc
        - |
          trap "exit 0" TERM; \
          while :; do \
          java \
          -XX:+UnlockExperimentalVMOptions \
          -XX:+UseCGroupMemoryLimitForHeap \
          -XX:MaxRAMFraction=1 \
          -XshowSettings:vm \
          -jar \
          jmx_prometheus_httpserver.jar \
          "5556" \
          /etc/jmx-kafka/jmx-kafka-prometheus.yml & \
          wait $! || sleep 3; \
          done
        ports:
        - containerPort: 5556
          name: prometheus
        resources:
          {}
        volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-kafka
      - name: kafka-broker
        image: "confluentinc/cp-kafka:5.0.1"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          exec:
            command:
              - sh
              - -ec
              - /usr/bin/jps | /bin/grep -q SupportedKafka
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: kafka
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 5555
          name: jmx
        resources:
          {}
        env:
        - name: JMX_PORT
          value: "5555"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_HEAP_OPTS
          value: -Xmx1G -Xms1G
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "ml-zookeeper:2181"
        - name: KAFKA_LOG_DIRS
          value: "/opt/kafka/data/logs"
        - name: "KAFKA_AUTO_CREATE_TOPICS_ENABLE"
          value: "true"
        - name: "KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE"
          value: "false"
        - name: "KAFKA_DEFAULT_REPLICATION_FACTOR"
          value: "1"
        - name: "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR"
          value: "1"
        - name: KAFKA_JMX_PORT
          value: "5555"
        # This is required because the Downward API does not yet support identification of
        # pod numbering in statefulsets. Thus, we are required to specify a command which
        # allows us to extract the pod ID for usage as the Kafka Broker ID.
        # See: https://github.com/kubernetes/kubernetes/issues/31218
        command:
        - sh
        - -exc
        - |
          unset KAFKA_PORT && \
          export KAFKA_BROKER_ID=${POD_NAME##*-} && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_IP}:9092 && \
          exec /etc/confluent/docker/run
        volumeMounts:
        - name: datadir
          mountPath: "/opt/kafka/data"
      volumes:
      - name: datadir
        emptyDir: {}
      - name: jmx-config
        configMap:
          name: ml-kafka-metrics
      terminationGracePeriodSeconds: 60
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ml-centralledger-mysql
  labels:
    app: ml-centralledger-mysql
    release: "ml"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ml-centralledger-mysql
      release: "ml"
  serviceName: ml-centralledger-mysql
  template:
    metadata:
      labels:
        app: ml-centralledger-mysql
        chart: "mysql-1.0.8"
        release: "ml"
        heritage: "Helm"
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.25.0"
        resources:
          null
        imagePullPolicy: IfNotPresent
        command:
        - "rm"
        - "-fr"
        - "/var/lib/mysql/lost+found"
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      containers:
      - name: database
        image: "percona/percona-xtradb-cluster:5.7.19"
        imagePullPolicy: "IfNotPresent"
        command:
        - "/bin/bash"
        - "/startup-scripts/entrypoint.sh"
        resources:
          null
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ml-centralledger-mysql
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ml-centralledger-mysql
              key: mysql-password
        - name: XTRABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ml-centralledger-mysql
              key: xtrabackup-password
        - name: MYSQL_USER
          value: "central_ledger"
        - name: MYSQL_DATABASE
          value: "central_ledger"
        - name: ALLOW_ROOT_FROM
          value: "%"
        - name: CLUSTER_NAME
          value: ml-centralledger-mysql
        - name: SHORT_CLUSTER_NAME
          value: ml-centralledger-mysql
        - name: K8S_SERVICE_NAME
          value: ml-centralledger-mysql-repl
        - name: PXC_STRICT_MODE
          value: "ENFORCING"
        - name: DEBUG
          value: "true"
        ports:
        - name: mysql
          containerPort: 3306
        - name: galera-repl
          containerPort: 4567
        - name: state-transfer
          containerPort: 4568
        - name: state-snapshot
          containerPort: 4444
        livenessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - "mysqladmin ping || test -e /var/lib/mysql/sst_in_progress"
          initialDelaySeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command: ["mysql", "--defaults-extra-file=/root/.my.cnf", "-h", "127.0.0.1", "-e", "SELECT 1"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-startup-scripts
          mountPath: /startup-scripts
        - name: mysql-config-files
          mountPath: /etc/mysql/conf.d
        - name: slash-root
          mountPath: /root
        - name: var-log
          mountPath: /var/log
      
      - name: "logs"
        image: "busybox:1.25.0"
        resources:
          null
        imagePullPolicy: IfNotPresent
        command:
        - "tail"
        - "-f"
        - "/var/log/mysqld.log"
        volumeMounts:
        - name: var-log
          mountPath: /var/log
      
      
      - name: metrics
        image: prom/mysqld-exporter:v0.11.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: 9104
        volumeMounts:
        - name: slash-root
          mountPath: /root
        livenessProbe:
          exec:
            command: ["wget","-q","-O","-","localhost:9104"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command: ["wget","-q","-O","-","localhost:9104"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
      
      volumes:
      - name: slash-root
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      - name: mysql-config-files
        configMap:
          name: ml-centralledger-mysql-config-files
      - name: mysql-startup-scripts
        configMap:
          name: ml-centralledger-mysql-startup-scripts
      - name: mysql-data
        emptyDir: {}
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-backend/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ml-ml-testing-toolkit-backend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-backend-15.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-testing-toolkit-backend
      app.kubernetes.io/instance: ml
  serviceName: ml-ml-testing-toolkit-backend
  template:
    metadata:
      annotations:
        checksum/config: eb1ad22dfbd0c9b39b31cdcdd67228c734c5ca0a18ccc7785e7b2993b0589cab
      labels:
        app.kubernetes.io/name: ml-testing-toolkit-backend
        app.kubernetes.io/instance: ml
        app.kubernetes.io/version: 15.0.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-testing-toolkit-backend-15.0.0
    spec:
      initContainers:
      containers:
        - name: ml-testing-toolkit-backend
          image: "mojaloop/ml-testing-toolkit:v15.0.0"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "cd /opt/app; if [ -f /opt/default_config/user_config.json ]; then cp /opt/default_config/user_config.json spec_files; fi; if [ -f /opt/default_config/system_config.json ]; then cp /opt/default_config/system_config.json spec_files; fi; npm run start;"]
          ports:
            - containerPort: 4040
            - containerPort: 5050
          volumeMounts:
            - name: ml-ml-testing-toolkit-backend-volume-extra-environments
              mountPath: /opt/app/examples/environments/hub-k8s-default-environment.json
              subPath: hub-k8s-default-environment.json
            - name: ml-ml-testing-toolkit-backend-volume-config-default
              mountPath: /opt/default_config
      volumes:
        - name: ml-ml-testing-toolkit-backend-volume-config-default
          configMap:
            name: ml-ml-testing-toolkit-backend-config-default
            items:
              - key: system_config.json
                path: system_config.json
              - key: user_config.json
                path: user_config.json
        - name: ml-ml-testing-toolkit-backend-volume-extra-environments
          configMap:
            name: ml-ml-testing-toolkit-backend-config-extra-environments
            items:
              - key: hub-k8s-default-environment.json
                path: hub-k8s-default-environment.json
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-13.0.0
spec:
  rules:
    - host: "account-lookup-service-admin.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-account-lookup-service-admin
              servicePort: http-admin
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-13.0.0
spec:
  rules:
    - host: "account-lookup-service.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-account-lookup-service
              servicePort: http-api
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-12.0.0
spec:
  rules:
    - host: "central-event-processor.local"
      http:
        paths:
          - path: 
            backend:
              serviceName: ml-centraleventprocessor
              servicePort: http
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-13.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-admin-transfer.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-centralledger-handler-admin-transfer
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-13.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-timeout.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-centralledger-handler-timeout
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-13.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-fulfil.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-centralledger-handler-transfer-fulfil
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-13.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-get.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-centralledger-handler-transfer-get
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-13.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-position.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-centralledger-handler-transfer-position
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-13.0.0
  annotations:
spec:
  rules:
    - host: central-ledger-transfer-prepare.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-centralledger-handler-transfer-prepare
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-13.0.0
  annotations:
spec:
  rules:
    - host: central-ledger.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-centralledger-service
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralsettlement/charts/centralsettlement-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-centralsettlement-service
  labels:
    app.kubernetes.io/name: centralsettlement-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 14.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-service-14.0.0
  annotations:
spec:
  rules:
    - host: central-settlement-service.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-centralsettlement-service
              servicePort: 80
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-12.0.0
  annotations:
spec:
  rules:
    - host: ml-api-adapter-notification.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-ml-api-adapter-handler-notification
              servicePort: 80
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-12.0.0
  annotations:
spec:
  rules:
    - host: ml-api-adapter.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-ml-api-adapter-service
              servicePort: 80
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-backend/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-ml-testing-toolkit-backend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-backend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-backend-15.0.0
  annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "8m"
spec:
  rules:
    - host: testing-toolkit.local
      http:
        paths:
          - path: /api/
            backend:
              serviceName: ml-ml-testing-toolkit-backend
              servicePort: 5050
          - path: /socket.io/
            backend:
              serviceName: ml-ml-testing-toolkit-backend
              servicePort: 5050
    - host: testing-toolkit-specapi.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-ml-testing-toolkit-backend
              servicePort: 4040
---
# Source: mojaloop/charts/ml-testing-toolkit/charts/ml-testing-toolkit-frontend/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-ml-testing-toolkit-frontend
  labels:
    app.kubernetes.io/name: ml-testing-toolkit-frontend
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 15.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-testing-toolkit-frontend-15.0.0
  annotations:
spec:
  rules:
    - host: testing-toolkit.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-ml-testing-toolkit-frontend
              servicePort: 6060
---
# Source: mojaloop/charts/mojaloop-simulator/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-sim-simulators
  labels:
    app.kubernetes.io/name: simulators
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: "14.0.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-14.0.0
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
      - host: sim-payeefsp.local
        http:
          paths:
          - path: /sim/payeefsp/outbound(/|$)(.*)
            backend:
              serviceName: ml-sim-payeefsp-scheme-adapter
              servicePort: outboundapi
          - path: /sim/payeefsp/inbound(/|$)(.*)
            backend:
              serviceName: ml-sim-payeefsp-scheme-adapter
              servicePort: inboundapi
          - path: /sim/payeefsp/sdktest(/|$)(.*)
            backend:
              serviceName: ml-sim-payeefsp-scheme-adapter
              servicePort: testapi
          - path: /sim/payeefsp/test(/|$)(.*)
            backend:
              serviceName: ml-sim-payeefsp-backend
              servicePort: testapi
      - host: sim-payerfsp.local
        http:
          paths:
          - path: /sim/payerfsp/outbound(/|$)(.*)
            backend:
              serviceName: ml-sim-payerfsp-scheme-adapter
              servicePort: outboundapi
          - path: /sim/payerfsp/inbound(/|$)(.*)
            backend:
              serviceName: ml-sim-payerfsp-scheme-adapter
              servicePort: inboundapi
          - path: /sim/payerfsp/sdktest(/|$)(.*)
            backend:
              serviceName: ml-sim-payerfsp-scheme-adapter
              servicePort: testapi
          - path: /sim/payerfsp/test(/|$)(.*)
            backend:
              serviceName: ml-sim-payerfsp-backend
              servicePort: testapi
      - host: sim-testfsp1.local
        http:
          paths:
          - path: /sim/testfsp1/outbound(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp1-scheme-adapter
              servicePort: outboundapi
          - path: /sim/testfsp1/inbound(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp1-scheme-adapter
              servicePort: inboundapi
          - path: /sim/testfsp1/sdktest(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp1-scheme-adapter
              servicePort: testapi
          - path: /sim/testfsp1/test(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp1-backend
              servicePort: testapi
      - host: sim-testfsp2.local
        http:
          paths:
          - path: /sim/testfsp2/outbound(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp2-scheme-adapter
              servicePort: outboundapi
          - path: /sim/testfsp2/inbound(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp2-scheme-adapter
              servicePort: inboundapi
          - path: /sim/testfsp2/sdktest(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp2-scheme-adapter
              servicePort: testapi
          - path: /sim/testfsp2/test(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp2-backend
              servicePort: testapi
      - host: sim-testfsp3.local
        http:
          paths:
          - path: /sim/testfsp3/outbound(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp3-scheme-adapter
              servicePort: outboundapi
          - path: /sim/testfsp3/inbound(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp3-scheme-adapter
              servicePort: inboundapi
          - path: /sim/testfsp3/sdktest(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp3-scheme-adapter
              servicePort: testapi
          - path: /sim/testfsp3/test(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp3-backend
              servicePort: testapi
      - host: sim-testfsp4.local
        http:
          paths:
          - path: /sim/testfsp4/outbound(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp4-scheme-adapter
              servicePort: outboundapi
          - path: /sim/testfsp4/inbound(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp4-scheme-adapter
              servicePort: inboundapi
          - path: /sim/testfsp4/sdktest(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp4-scheme-adapter
              servicePort: testapi
          - path: /sim/testfsp4/test(/|$)(.*)
            backend:
              serviceName: ml-sim-testfsp4-backend
              servicePort: testapi
---
# Source: mojaloop/charts/quoting-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 13.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-13.0.0
  annotations:
spec:
  rules:
    - host: quoting-service.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-quoting-service
              servicePort: 80
---
# Source: mojaloop/charts/simulator/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-12.0.0
spec:
  rules:
    - host: moja-simulator.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-simulator
              servicePort: http
---
# Source: mojaloop/charts/transaction-requests-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ml-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: ml
    app.kubernetes.io/version: 12.0.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-12.0.0
  annotations:
spec:
  rules:
    - host: transaction-request-service.local
      http:
        paths:
          - path: /
            backend:
              serviceName: ml-transaction-requests-service
              servicePort: 80
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
# TODO: thirdparty service!
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
# TODO: thirdparty service!
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
# TODO: thirdparty service!
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
# TODO: thirdparty service!
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
# TODO: thirdparty service!
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
# TODO: thirdparty service!

NOTES:
Thank you for installing mojaloop.

Your release is named: ml.

To learn more about Mojaloop: https://mojaloop.io/
To learn more about Mojaloop deployments: https://docs.mojaloop.io/documentation/deployment-guide
To learn more about this release: https://github.com/mojaloop/helm/releases/tag/v14.0.0

To learn more about this deployment, try:

  $ helm status ml

Use the following command to execute Test cases:

  $ helm -n default test ml

Use the following command to execute Test cases and print logs to console:

  $ helm -n default test ml --logs

View Test logs with the following commands:
  $ kubectl -n default logs pod/ml-ml-ttk-test-setup
  $ kubectl -n default logs pod/ml-ml-ttk-test-val-gp

Copyright © 2020 Mojaloop Foundation
